import { StepMap } from '../steps/step.interface';
export declare enum SequenceType {
    TRIGGER = "TRIGGER",
    MAIN = "MAIN",
    BRANCH = "BRANCH",
    FANOUT = "FANOUT"
}
export type SequenceEdge = {
    type: SequenceEdgeType;
    from: string;
    to: string;
};
export declare enum SequenceEdgeType {
    NEXT = "NEXT",
    BRANCH = "BRANCH",
    FANOUT = "FANOUT"
}
export type StepEdge = {
    label?: string;
    from: string;
    to: string | null | undefined;
};
export type Sequence = {
    id: string;
    start?: string;
    stepIds: string[];
    stepEdges: StepEdge[];
    sequenceEdges: SequenceEdge[];
    type: SequenceType;
    conditionalBranchWidth?: number;
};
export type SequenceMap = Record<string, Sequence>;
export type StateMachine = {
    stepMap: StepMap;
    sequenceMap: SequenceMap;
    start: string;
    activeStepId?: string;
    finalStepId?: string;
    unusedSteps: string[];
};
