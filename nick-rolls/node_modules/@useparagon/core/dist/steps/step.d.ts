import { IBaseStep, IBaseStepInit, IBaseStepParameters, IStep, StepDependencies, StepType } from './step.interface';
export declare abstract class Step<I extends IBaseStepInit = any, O extends IBaseStepParameters = any> implements IBaseStep {
    id: string;
    abstract parameters: IBaseStepParameters;
    abstract type: StepType;
    private _next?;
    description?: string;
    private _prevStep?;
    readonly _migrations: Record<string, unknown>;
    readonly dependencies: StepDependencies;
    get next(): string | null;
    constructor(params: I);
    setMigration(key: string, value: unknown): void;
    nextStep(step: Step): Step;
    serializeParameters(): O;
    getStartingStepInChain(): Step;
    setStepDependencies(dependencies: StepDependencies): void;
    toObject(): IStep;
    toString(): string;
}
