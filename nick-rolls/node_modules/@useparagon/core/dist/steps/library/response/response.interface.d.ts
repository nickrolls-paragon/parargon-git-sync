import { DataType, FileValue, KeyedSource, TokenizedSource } from '../../../resolvers/resolvers.interface';
import { IBaseStep, IBaseStepInit, IBaseStepParameters, StepType } from '../../step.interface-base';
export declare enum ResponseTypeEnum {
    JSON = "JSON",
    FILE = "FILE"
}
export type IResponseStepInit = IBaseStepInit & {
    statusCode: number;
} & ({
    responseType: 'FILE';
    body: unknown;
} | {
    responseType: 'JSON';
    body: Record<string, unknown>;
});
export interface IResponseStepParameters extends IBaseStepParameters {
    statusCode: number;
    responseType?: ResponseTypeEnum;
    bodyData: KeyedSource[];
    bodyFile?: TokenizedSource<DataType.FILE>;
}
export interface IResponseStepOutput {
    statusCode: number;
    body?: any;
    file?: FileValue;
}
export interface IResponseStep extends IBaseStep {
    type: StepType.RESPONSE;
    parameters: IResponseStepParameters;
}
