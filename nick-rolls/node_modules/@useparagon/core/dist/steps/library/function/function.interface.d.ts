import { KeyedSource } from '../../../resolvers/resolvers.interface';
import { IBaseStep, IBaseStepInit, IBaseStepParameters, IStepInitRetryParameters, IStepRetryParameters, StepType } from '../../step.interface-base';
import { FunctionStepLibraries } from './libraries';
export interface IFunctionStepParameters extends IBaseStepInit, IStepRetryParameters {
    code: string;
    parameters: KeyedSource[];
}
export interface IFunctionStepInit<P extends Record<string, unknown> = Record<string, unknown>> extends IBaseStepParameters, IStepInitRetryParameters {
    code: (parameters: P, libraries: FunctionStepLibraries) => any | Promise<any>;
    parameters: P;
}
export interface IFunctionStepOutput<T = any> {
    result: T;
}
export interface IFunctionStep extends IBaseStep {
    type: StepType.FUNCTION;
    parameters: IFunctionStepParameters;
}
