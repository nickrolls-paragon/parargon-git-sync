import { UserDefinedInput } from '../inputs/input.interface';
import { IPersona } from '../persona/persona.interface';
export declare enum ProxyVariableSourceType {
    STEP_REFERENCE = "STEP_REFERENCE",
    SECRET_REFERENCE = "SECRET_REFERENCE",
    PERSONA_META_REFERENCE = "PERSONA_META_REFERENCE",
    PERSONA_ENDUSERID_REFERENCE = "PERSONA_ENDUSERID_REFERENCE",
    WORKFLOW_INPUT_REFERENCE = "WORKFLOW_INPUT_REFERENCE",
    CONNECT_USER_PROVIDER_ID = "CONNECT_USER_PROVIDER_ID",
    CONNECT_USER_PROVIDER_DATA = "CONNECT_USER_PROVIDER_DATA",
    SAME_STEP_REFERENCE = "SAME_STEP_REFERENCE",
    OAUTH_ACCESS_TOKEN = "OAUTH_ACCESS_TOKEN",
    CONNECT_USER_CREDENTIAL_ID = "CONNECT_USER_CREDENTIAL_ID",
    CONNECT_USER_CONFIGURATION_ID = "CONNECT_USER_CONFIGURATION_ID",
    CUSTOM_WEBHOOK_TRIGGER_URL = "CUSTOM_WEBHOOK_TRIGGER_URL",
    CUSTOM_WEBHOOK_TRIGGER_SETUP_RESPONSE = "CUSTOM_WEBHOOK_TRIGGER_SETUP_RESPONSE",
    CUSTOM_WEBHOOK_TRIGGER_HANDSHAKE_RESPONSE = "CUSTOM_WEBHOOK_TRIGGER_HANDSHAKE_RESPONSE",
    CUSTOM_WEBHOOK_TRIGGER_WEBHOOK_RESPONSE = "CUSTOM_WEBHOOK_TRIGGER_WEBHOOK_RESPONSE",
    CREDENTIAL_VALUES = "CREDENTIAL_VALUES",
    PROFILE_CONFIG_KEY = "PROFILE_CONFIG_KEY"
}
export type PersonaInputKeyToOutputMap<P extends IPersona = IPersona> = {
    userId: string;
    meta: P['meta'];
};
export interface IContext<InputResultMap extends Record<string, unknown> = Record<string, string>> {
    getEnvironmentSecret(key: string): string;
    getInput<I extends UserDefinedInput<keyof InputResultMap>>(input: I): InputResultMap[I['type']];
}
