import { DataType, Source } from '../resolvers/resolvers.interface';
import { StepDependencies } from '../steps/step.interface';
import { ProxyVariableSourceType } from './context.interface';
export declare function isProxy(maybeProxy: any): boolean;
export declare function getKeysAccessedFromProxy(proxy: any): string[];
export declare function getInputReferenceFromProxy<T>(proxy: any): T;
export declare function getProxySourceType(proxy: any): ProxyVariableSourceType;
export declare function createProxyInputReference<I>(input: I, getInputId: () => string, sourceType: ProxyVariableSourceType, existingKeys?: string[]): any;
export declare function proxyToSource<T extends DataType>(proxy: any, dataType: T, stepDependencies?: StepDependencies): Source<T>;
export declare function createProxyInputString(sourceType: ProxyVariableSourceType, inputId: string, keys: string[]): string;
