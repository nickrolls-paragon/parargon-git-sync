import { InputConnectCredentialSource } from '../resolvers/resolvers.interface';
import { StepDependencies } from '../steps/step.interface';
import { InputSource, SerializedInput, UserDefinedInput } from './input.interface';
export declare const getInputTypeForUI: (input: InputSource) => string;
export declare const getSourceKey: (source: InputSource) => string;
export declare const mapSourcesWithTitle: (inputSources: InputSource[]) => Record<string, InputSource>;
export declare const mapUserDefinedInputsWithTitle: <T extends {
    title: string;
}>(inputs: T[]) => Record<string, T>;
export declare const convertSerializedInputsToUserDefinedInputs: (inputs: SerializedInput[], inputSources: InputSource[]) => UserDefinedInput<string>[];
export declare const convertUserDefinedInputsToSerializedInputs: (inputs: UserDefinedInput<string>[], inputSources: InputSource[]) => SerializedInput[];
export declare const fixDataSourceReferencesInInputSource: (source: InputConnectCredentialSource, dependencies?: StepDependencies) => InputConnectCredentialSource;
