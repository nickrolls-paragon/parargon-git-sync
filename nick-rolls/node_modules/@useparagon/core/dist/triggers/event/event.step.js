"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventStep = void 0;
const uuid_1 = require("uuid");
const execution_1 = require("../../execution");
const resolvers_1 = require("../../resolvers");
const step_interface_1 = require("../../steps/step.interface");
const trigger_1 = require("../trigger");
class EventStep extends trigger_1.TriggerStep {
    type = step_interface_1.StepType.EVENT;
    _parameters;
    _options;
    parameters;
    get output() {
        return (0, execution_1.createProxyInputReference)(this, () => this.id, execution_1.ProxyVariableSourceType.STEP_REFERENCE, ['event']);
    }
    constructor(params, options) {
        super(params);
        if (!params || !params.name) {
            throw new Error('Event object with name is required for Event trigger step.');
        }
        this._parameters = params;
        this._options = options;
        this.parameters = this.serializeParameters();
    }
    serializeParameters() {
        if (!this.dependencies?.events) {
            return {
                eventId: (0, uuid_1.v4)(),
            };
        }
        const event = this.dependencies.events.find((event) => event.name === this._parameters.name);
        if (!event) {
            throw new Error(`No event found with name - ${this._parameters.name}.`);
        }
        if (this._options?.objectMapping) {
            return {
                eventId: event.id,
                objectMapping: (0, resolvers_1.resolveToTokenizedSource)(this._options.objectMapping, resolvers_1.DataType.STRING, this.dependencies),
            };
        }
        return {
            eventId: event.id,
        };
    }
}
exports.EventStep = EventStep;
//# sourceMappingURL=event.step.js.map