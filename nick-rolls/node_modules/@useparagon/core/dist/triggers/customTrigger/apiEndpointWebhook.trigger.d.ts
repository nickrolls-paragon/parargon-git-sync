import { ICreateTriggerContext, IPayloadValidationContext, ISetupTriggerResponseContext, ITeardownTriggerContext } from './customTrigger.context.interface';
import { CustomTriggerSetupResponse, ICreateTriggerSetup, ICustomTriggerInit, ITeardownTriggerSetup, TriggerPayloadValidationOption, TriggerSubscription, WebhookPayloadMapToUser, WebhookTriggerLevel } from './customTrigger.interface';
export declare abstract class ApiEndpointWebhookTrigger<TL extends WebhookTriggerLevel, IntegrationType extends 'custom' | 'default', InputResultMap extends Record<string, any> = Record<string, any>> implements ICustomTriggerInit<'PROGRAMMATIC', TL, IntegrationType, InputResultMap> {
    abstract triggerLevel: TL;
    readonly triggerSubscription: `${TriggerSubscription.PROGRAMMATIC}`;
    abstract id: string;
    abstract name: string;
    abstract description: string;
    abstract mapPayload: TL extends 'APP' ? WebhookPayloadMapToUser<IntegrationType> : undefined;
    abstract create(createContext: ICreateTriggerContext<InputResultMap>): ICreateTriggerSetup;
    abstract teardown(tearDownContext: ITeardownTriggerContext<InputResultMap>): ITeardownTriggerSetup;
    abstract setupResponse(setupContext: ISetupTriggerResponseContext<InputResultMap>): CustomTriggerSetupResponse | undefined;
    abstract validatePayload(validationContext: IPayloadValidationContext<InputResultMap>): TriggerPayloadValidationOption | undefined;
}
