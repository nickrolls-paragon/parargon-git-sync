import { IPayloadValidationContext, ISetupTriggerResponseContext } from './customTrigger.context.interface';
import { CustomTriggerSetupResponse, ICustomTriggerInit, TriggerPayloadValidationOption, TriggerSubscription, WebhookPayloadMapToUser, WebhookTriggerLevel } from './customTrigger.interface';
export declare abstract class ManualWebhookTrigger<TL extends WebhookTriggerLevel, IntegrationType extends 'custom' | 'default', InputResultMap extends Record<string, any> = Record<string, any>> implements ICustomTriggerInit<'MANUAL', TL, IntegrationType, InputResultMap> {
    abstract triggerLevel: TL;
    readonly triggerSubscription: `${TriggerSubscription.MANUAL}`;
    abstract id: string;
    abstract name: string;
    abstract description: string;
    abstract mapPayload: TL extends 'APP' ? WebhookPayloadMapToUser<IntegrationType> : undefined;
    abstract setupResponse(setupContext: ISetupTriggerResponseContext<InputResultMap>): CustomTriggerSetupResponse | undefined;
    abstract validatePayload(validationContext: IPayloadValidationContext<InputResultMap>): TriggerPayloadValidationOption | undefined;
}
