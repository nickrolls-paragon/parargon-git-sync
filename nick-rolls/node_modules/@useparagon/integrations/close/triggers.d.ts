import { ConditionalInput } from '@useparagon/core/steps/library/conditional';

/**
 * Record Created intent type
 */
type CloseTriggerRecordCreated = {
  /**
   * Filter Records
   * Search for the records that match specified filters.
   *
   * **Example**:
   * ```
   * field
   * ```
   */
  triggerFilterKey?: ConditionalInput;

  /**
   * Apply field mapping
   *
   * **Example**:
   * ```
   * {{userSettings.MappingInput.objectMapping}}
   * ```
   */
  objectMapping?: string;
} & (
  | {
      /**
       * Record Type
       *
       */
      recordType: 'task';

      /**
       * Record Subtype
       *
       * **Example**:
       * ```
       * ["lead", "incoming_email", "email_followup"]
       * ```
       */
      recordSubTypes: string;
    }
  | {
      /**
       * Record Type
       *
       */
      recordType: 'lead' | 'opportunity' | 'contact';
    }
);

/**
 * Record Updated intent type
 */
type CloseTriggerRecordUpdated = {
  /**
   * Filter Records
   * Search for the records that match specified filters.
   *
   * **Example**:
   * ```
   * field
   * ```
   */
  triggerFilterKey?: ConditionalInput;

  /**
   * Apply field mapping
   *
   * **Example**:
   * ```
   * {{userSettings.MappingInput.objectMapping}}
   * ```
   */
  objectMapping?: string;
} & (
  | {
      /**
       * Record Type
       *
       */
      recordType: 'task';

      /**
       * Record Subtype
       *
       * **Example**:
       * ```
       * ["lead", "incoming_email", "email_followup"]
       * ```
       */
      recordSubTypes: string;
    }
  | {
      /**
       * Record Type
       *
       */
      recordType: 'lead' | 'opportunity' | 'contact';
    }
);

/**
 * Record Deleted intent type
 */
type CloseTriggerRecordDeleted = {
  /**
   * Filter Records
   * Search for the records that match specified filters.
   *
   * **Example**:
   * ```
   * field
   * ```
   */
  triggerFilterKey?: ConditionalInput;

  /**
   * Apply field mapping
   *
   * **Example**:
   * ```
   * {{userSettings.MappingInput.objectMapping}}
   * ```
   */
  objectMapping?: string;
} & (
  | {
      /**
       * Record Type
       *
       */
      recordType: 'task';

      /**
       * Record Subtype
       *
       * **Example**:
       * ```
       * ["lead", "incoming_email", "email_followup"]
       * ```
       */
      recordSubTypes: string;
    }
  | {
      /**
       * Record Type
       *
       */
      recordType: 'lead' | 'opportunity' | 'contact';
    }
);

export type IntentToInputOutput = {
  /**
   * CLOSE_TRIGGER_RECORD_CREATED
   */
  CLOSE_TRIGGER_RECORD_CREATED: [CloseTriggerRecordCreated, any];

  /**
   * CLOSE_TRIGGER_RECORD_UPDATED
   */
  CLOSE_TRIGGER_RECORD_UPDATED: [CloseTriggerRecordUpdated, any];

  /**
   * CLOSE_TRIGGER_RECORD_DELETED
   */
  CLOSE_TRIGGER_RECORD_DELETED: [CloseTriggerRecordDeleted, any];
};
