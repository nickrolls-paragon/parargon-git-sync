import { ActionStep, ActionTriggerStep } from '@useparagon/core';
import {
  CustomDropdownField,
  UserDefinedComboInputOptions,
  UserDefinedFieldMappingOptions,
} from '@useparagon/core/inputs';
import { IntegrationOptions } from '@useparagon/core/integration';

import { IntentToInputOutput } from './intents';
import { IntentToInputOutput as TriggerIntentToInputOutput } from './triggers';

type ISalesforceIntegrationUserDefinedInput = {
  id: string;
  title: string;
  required?: boolean;
  tooltip?: string;
} & (
  | {
      type:
        | 'text'
        | 'number'
        | 'email'
        | 'url'
        | 'boolean'
        | 'password'
        | 'account_owner'
        | 'lead_status'
        | 'opportunity_stage'
        | 'campaign';
    }
  | {
      type: 'custom_dropdown';
      key: string;
      customDropdownOptions?: CustomDropdownField[];
    }
  | ({
      type: 'field_mapping';
    } & UserDefinedFieldMappingOptions)
  | ({
      type: 'list_view';
    } & UserDefinedComboInputOptions)
);

/**
 * map b/w input type to result
 */
export type InputResultMap = {
  email: string;
  url: string;
  password: string;
  boolean: boolean;
  text: string;
  number: number;
  custom_dropdown: string;

  account_owner: string;
  lead_status: string;
  opportunity_stage: string;
  field_mapping: {
    record_type: string;
    field: Record<string, any>;
  };
  campaign: string;
  list_view: {
    record_type: string;
    list_view: string;
  };
};

/**
 * pass { variableName for input => Input }
 * this should be used whenever we are creating inputs for integrations/workflows
 * as it will infer proper types
 */
export declare const createInputs: <
  T extends Record<string, ISalesforceIntegrationUserDefinedInput>,
>(
  inputs: T,
) => T;

/**
 * integration type for salesforce
 */
export type ISalesforceIntegration = {
  /**
   * name of integration
   */
  name: string;

  /**
   * action step methods
   */
  actions: {
    /**
     * Create record
     * method for SALESFORCE_CREATE_RECORD
     */
    createRecord: (
      inputs: IntentToInputOutput['SALESFORCE_CREATE_RECORD'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SALESFORCE_CREATE_RECORD'][0],
      IntentToInputOutput['SALESFORCE_CREATE_RECORD'][1]
    >;

    /**
     * Update record
     * method for SALESFORCE_UPDATE_RECORD
     */
    updateRecord: (
      inputs: IntentToInputOutput['SALESFORCE_UPDATE_RECORD'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SALESFORCE_UPDATE_RECORD'][0],
      IntentToInputOutput['SALESFORCE_UPDATE_RECORD'][1]
    >;

    /**
     * Get record by ID
     * method for SALESFORCE_GET_RECORD_BY_ID
     */
    getRecordById: (
      inputs: IntentToInputOutput['SALESFORCE_GET_RECORD_BY_ID'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SALESFORCE_GET_RECORD_BY_ID'][0],
      IntentToInputOutput['SALESFORCE_GET_RECORD_BY_ID'][1]
    >;

    /**
     * Search records
     * method for SALESFORCE_SEARCH_RECORDS
     */
    searchRecords: (
      inputs: IntentToInputOutput['SALESFORCE_SEARCH_RECORDS'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SALESFORCE_SEARCH_RECORDS'][0],
      IntentToInputOutput['SALESFORCE_SEARCH_RECORDS'][1]
    >;

    /**
     * Search records by SOQL query
     * method for SALESFORCE_WRITE_SOQL_QUERY
     */
    writeSoqlQuery: (
      inputs: IntentToInputOutput['SALESFORCE_WRITE_SOQL_QUERY'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SALESFORCE_WRITE_SOQL_QUERY'][0],
      IntentToInputOutput['SALESFORCE_WRITE_SOQL_QUERY'][1]
    >;

    /**
     * Deploy custom field
     * method for SALESFORCE_CREATE_CUSTOM_FIELD
     */
    createCustomField: (
      inputs: IntentToInputOutput['SALESFORCE_CREATE_CUSTOM_FIELD'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SALESFORCE_CREATE_CUSTOM_FIELD'][0],
      IntentToInputOutput['SALESFORCE_CREATE_CUSTOM_FIELD'][1]
    >;

    /**
     * Deploy custom object
     * method for SALESFORCE_CREATE_CUSTOM_OBJECT
     */
    createCustomObject: (
      inputs: IntentToInputOutput['SALESFORCE_CREATE_CUSTOM_OBJECT'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SALESFORCE_CREATE_CUSTOM_OBJECT'][0],
      IntentToInputOutput['SALESFORCE_CREATE_CUSTOM_OBJECT'][1]
    >;

    /**
     * Get records by List View
     * method for SALESFORCE_GET_CONTACTS_BY_VIEW_ID
     */
    getContactsByViewId: (
      inputs: IntentToInputOutput['SALESFORCE_GET_CONTACTS_BY_VIEW_ID'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SALESFORCE_GET_CONTACTS_BY_VIEW_ID'][0],
      IntentToInputOutput['SALESFORCE_GET_CONTACTS_BY_VIEW_ID'][1]
    >;
  };

  /**
   * trigger step methods
   */
  triggers: {
    /**
     * New Record
     * method for SALESFORCE_TRIGGER_RECORD_CREATED
     */
    recordCreated: (
      inputs: TriggerIntentToInputOutput['SALESFORCE_TRIGGER_RECORD_CREATED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['SALESFORCE_TRIGGER_RECORD_CREATED'][0],
      TriggerIntentToInputOutput['SALESFORCE_TRIGGER_RECORD_CREATED'][1]
    >;

    /**
     * Record Deleted
     * method for SALESFORCE_TRIGGER_RECORD_DELETED
     */
    recordDeleted: (
      inputs: TriggerIntentToInputOutput['SALESFORCE_TRIGGER_RECORD_DELETED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['SALESFORCE_TRIGGER_RECORD_DELETED'][0],
      TriggerIntentToInputOutput['SALESFORCE_TRIGGER_RECORD_DELETED'][1]
    >;

    /**
     * Record Updated
     * method for SALESFORCE_TRIGGER_RECORD_UPDATED
     */
    recordUpdated: (
      inputs: TriggerIntentToInputOutput['SALESFORCE_TRIGGER_RECORD_UPDATED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['SALESFORCE_TRIGGER_RECORD_UPDATED'][0],
      TriggerIntentToInputOutput['SALESFORCE_TRIGGER_RECORD_UPDATED'][1]
    >;

    /**
     * Campaign Member Added
     * method for SALESFORCE_TRIGGER_CAMPAIGN_MEMBER_ADDED
     */
    campaignMemberAdded: (
      inputs: TriggerIntentToInputOutput['SALESFORCE_TRIGGER_CAMPAIGN_MEMBER_ADDED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['SALESFORCE_TRIGGER_CAMPAIGN_MEMBER_ADDED'][0],
      TriggerIntentToInputOutput['SALESFORCE_TRIGGER_CAMPAIGN_MEMBER_ADDED'][1]
    >;

    /**
     * Campaign Opportunity Added
     * method for SALESFORCE_TRIGGER_CAMPAIGN_OPPORTUNITY_ADDED
     */
    campaignOpportunityAdded: (
      inputs: TriggerIntentToInputOutput['SALESFORCE_TRIGGER_CAMPAIGN_OPPORTUNITY_ADDED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['SALESFORCE_TRIGGER_CAMPAIGN_OPPORTUNITY_ADDED'][0],
      TriggerIntentToInputOutput['SALESFORCE_TRIGGER_CAMPAIGN_OPPORTUNITY_ADDED'][1]
    >;
  };
};
