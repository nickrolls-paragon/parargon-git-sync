import { ConditionalInput } from '@useparagon/core/steps/library/conditional';

/**
 * New Record intent type
 */
type SalesforceTriggerRecordCreated = {
  /**
   * Filter search
   * Only trigger on new records that match these filters.
   *
   */
  recordsFilterFormula?: ConditionalInput;

  /**
   * Apply field mapping
   *
   * **Example**:
   * ```
   * {{userSettings.MappingInput.objectMapping}}
   * ```
   */
  objectMapping?: string;
} & (
  | {
      /**
       * Record type
       *
       */
      recordType: '<specified by objectName property>';

      /**
       * Object Name
       * The API Name of the Object. Use Connect Portal Workflow Settings to allow users to select a Custom Object.
       *
       * **Example**:
       * ```
       * {{settings.objectType}}
       * ```
       */
      objectName: string;
    }
  | {
      /**
       * Record type
       *
       */
      recordType: 'Opportunity' | 'Account' | 'Contact' | 'Lead' | 'Task';
    }
);

/**
 * Record Deleted intent type
 */
type SalesforceTriggerRecordDeleted = {
  /**
   * Filter search
   * Only trigger on deleted records that match these filters.
   *
   */
  recordsFilterFormula?: ConditionalInput;

  /**
   * Apply field mapping
   *
   * **Example**:
   * ```
   * {{userSettings.MappingInput.objectMapping}}
   * ```
   */
  objectMapping?: string;
} & (
  | {
      /**
       * Record type
       *
       */
      recordType: '<specified by objectName property>';

      /**
       * Object Name
       * The API Name of the Object. Use Connect Portal Workflow Settings to allow users to select a Custom Object.
       *
       * **Example**:
       * ```
       * {{settings.objectType}}
       * ```
       */
      objectName: string;
    }
  | {
      /**
       * Record type
       *
       */
      recordType: 'Opportunity' | 'Account' | 'Contact' | 'Lead' | 'Task';
    }
);

/**
 * Record Updated intent type
 */
type SalesforceTriggerRecordUpdated = {
  /**
   * Filter search
   * Only trigger on updated records that match these filters.
   *
   */
  recordsFilterFormula?: ConditionalInput;

  /**
   * Apply field mapping
   *
   * **Example**:
   * ```
   * {{userSettings.MappingInput.objectMapping}}
   * ```
   */
  objectMapping?: string;
} & (
  | {
      /**
       * Record type
       *
       */
      recordType: '<specified by objectName property>';

      /**
       * Object Name
       * The API Name of the Object. Use Connect Portal Workflow Settings to allow users to select a Custom Object.
       *
       * **Example**:
       * ```
       * {{settings.objectType}}
       * ```
       */
      objectName: string;
    }
  | {
      /**
       * Record type
       *
       */
      recordType: 'Opportunity' | 'Account' | 'Contact' | 'Lead' | 'Task';
    }
);

/**
 * Campaign Member Added intent type
 */
type SalesforceTriggerCampaignMemberAdded = {
  /**
   * Campaign
   * The campaign to watch for new Campaign Members. Use Connect Portal Workflow Settings to allow users to select a campaign.
   *
   * **Example**:
   * ```
   * {{settings.campaign}}
   * ```
   */
  campaignId: string;

  /**
   * Filter records
   * Only trigger on records that match these filters.
   *
   * **Example**:
   * ```
   * filter by column
   * ```
   */
  filterFormula?: ConditionalInput;

  /**
   * Apply field mapping
   *
   * **Example**:
   * ```
   * {{userSettings.MappingInput.objectMapping}}
   * ```
   */
  objectMapping?: string;
};

/**
 * Campaign Opportunity Added intent type
 */
type SalesforceTriggerCampaignOpportunityAdded = {
  /**
   * Campaign
   * The campaign to watch for new Campaign Members. Use Connect Portal Workflow Settings to allow users to select a campaign.
   *
   * **Example**:
   * ```
   * {{settings.campaign}}
   * ```
   */
  campaignId: string;

  /**
   * Filter records
   * Only trigger on records that match these filters.
   *
   * **Example**:
   * ```
   * filter by column
   * ```
   */
  filterFormula?: ConditionalInput;

  /**
   * Apply field mapping
   *
   * **Example**:
   * ```
   * {{userSettings.MappingInput.objectMapping}}
   * ```
   */
  objectMapping?: string;
};

export type IntentToInputOutput = {
  /**
   * SALESFORCE_TRIGGER_RECORD_CREATED
   */
  SALESFORCE_TRIGGER_RECORD_CREATED: [SalesforceTriggerRecordCreated, any];

  /**
   * SALESFORCE_TRIGGER_RECORD_DELETED
   */
  SALESFORCE_TRIGGER_RECORD_DELETED: [SalesforceTriggerRecordDeleted, any];

  /**
   * SALESFORCE_TRIGGER_RECORD_UPDATED
   */
  SALESFORCE_TRIGGER_RECORD_UPDATED: [SalesforceTriggerRecordUpdated, any];

  /**
   * SALESFORCE_TRIGGER_CAMPAIGN_MEMBER_ADDED
   */
  SALESFORCE_TRIGGER_CAMPAIGN_MEMBER_ADDED: [
    SalesforceTriggerCampaignMemberAdded,
    any,
  ];

  /**
   * SALESFORCE_TRIGGER_CAMPAIGN_OPPORTUNITY_ADDED
   */
  SALESFORCE_TRIGGER_CAMPAIGN_OPPORTUNITY_ADDED: [
    SalesforceTriggerCampaignOpportunityAdded,
    any,
  ];
};
