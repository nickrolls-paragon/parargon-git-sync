/**
 * Create event intent type
 */
type GoogleCalendarCreateEvent = {
  /**
   * Event name
   *
   */
  eventName: string;

  /**
   * Start time
   * Accepts Unix timestamp or ISO8601 date formats.
   *
   */
  startTime: string;

  /**
   * End time
   * Defaults to one hour after the start time if left blank.
   *
   */
  endTime?: string;

  /**
   * Calendar
   * Use Connect Portal Workflow Settings to allow users to select which calendar the event will be added to. Defaults to the user’s primary calendar if left blank.
   *
   */
  calendar?: string;

  /**
   * Attendees
   * Accepts an array of email addresses or email addresses separated by commas.
   *
   */
  attendees?: string;

  /**
   * Event location
   *
   */
  eventLocation?: string;

  /**
   * Event description
   *
   */
  eventDescription?: string;

  /**
   * Event ID
   * An ID from your application to associate this event with. You can use this ID to sync updates to this event later.
   *
   */
  eventId?: string;

  /**
   * Include Google Meet link?
   * Automatically creates Google Meet conference link for this event.
   *
   */
  includeMeetLink?: boolean;
};

/**
 * Update event intent type
 */
type GoogleCalendarUpdateEvent = {
  /**
   * Event ID
   * The ID of the event to update.
   *
   */
  eventId: string;

  /**
   * Event name
   *
   */
  eventName?: string;

  /**
   * Start time
   * Accepts Unix timestamp or ISO8601 date formats.
   *
   */
  startTime?: string;

  /**
   * End time
   * Defaults to one hour after the start time if left blank.
   *
   */
  endTime?: string;

  /**
   * Calendar
   * Use Connect Portal Workflow Settings to allow users to select which calendar the event will be added to. Defaults to the user’s primary calendar if left blank.
   *
   */
  calendar?: string;

  /**
   * Attendees
   * Accepts an array of email addresses or email addresses separated by commas.
   *
   */
  attendees?: string;

  /**
   * Event location
   *
   */
  eventLocation?: string;

  /**
   * Event description
   *
   */
  eventDescription?: string;
};

/**
 * List events intent type
 */
type GoogleCalendarListEvents = {
  /**
   * Calendar
   * Use Connect Portal Workflow Settings to allow users to select which calendar the event will be added to. Defaults to the user’s primary calendar if left blank.
   *
   */
  calendar?: string;

  /**
   * After
   * Filters events that start after the provided date (Unix in milliseconds or ISO timestamp).
   *
   * **Example**:
   * ```
   * 2025-04-12T10:00:00Z or 1712908800000
   * ```
   */
  after?: string;

  /**
   * Before
   * Filters events that end before the provided date (Unix in milliseconds or ISO timestamp).
   *
   * **Example**:
   * ```
   * 2025-04-12T10:00:00Z or 1712908800000
   * ```
   */
  before?: string;
};

/**
 * Get event by ID intent type
 */
type GoogleCalendarGetEventById = {
  /**
   * Event ID
   *
   */
  eventId: string;

  /**
   * Calendar
   * Use Connect Portal Workflow Settings to allow users to select which calendar the event will be added to. Defaults to the user’s primary calendar if left blank.
   *
   */
  calendar?: string;
};

/**
 * Delete event intent type
 */
type GoogleCalendarDeleteEvent = {
  /**
   * Event ID
   * The ID of the calendar event to be deleted.
   *
   */
  eventId: string;

  /**
   * Calendar
   * Use Connect Portal Workflow Settings to allow users to select which calendar the event will be added to. Defaults to the user’s primary calendar if left blank.
   *
   */
  calendar?: string;
};

/**
 * Get contacts intent type
 */
type GoogleCalendarGetContacts = {};

/**
 * Search contacts intent type
 */
type GoogleCalendarSearchContacts = {
  /**
   * Search query to search contacts
   *
   */
  query?: string;
};

/**
 * List directory people intent type
 */
type GoogleCalendarListDirectoryPeople = {};

/**
 * Search directory people intent type
 */
type GoogleCalendarSearchDirectoryPeople = {
  /**
   * Search query to search contacts
   *
   */
  query: string;
};

/**
 * List other contacts intent type
 */
type GoogleCalendarListOtherContacts = {};

/**
 * Search other contacts intent type
 */
type GoogleCalendarSearchOtherContacts = {
  /**
   * Search query to search contacts
   *
   */
  query?: string;
};

/**
 * Get availability intent type
 */
type GoogleCalendarGetAvailability = {
  /**
   * The start of the interval. In ISO format
   *
   */
  timeMin: string;

  /**
   * The end of the interval. In ISO format
   *
   */
  timeMax: string;

  /**
   * Time zone used in the response. Optional. The default is UTC.
   *
   */
  timeZone?: string;

  /**
   * List of calendars and/or groups to query. Defaults to the user default calendar.
   *
   * **Example**:
   * ```
   * [
   *                  {
   *                    "id": "calendar_group_id"/ The calendar or group ID
   *                  }
   *                ]
   * ```
   */
  items?: string;
};

export type IntentToInputOutput = {
  /**
   * GOOGLE_CALENDAR_CREATE_EVENT
   */
  GOOGLE_CALENDAR_CREATE_EVENT: [GoogleCalendarCreateEvent, any];

  /**
   * GOOGLE_CALENDAR_UPDATE_EVENT
   */
  GOOGLE_CALENDAR_UPDATE_EVENT: [GoogleCalendarUpdateEvent, any];

  /**
   * GOOGLE_CALENDAR_LIST_EVENTS
   */
  GOOGLE_CALENDAR_LIST_EVENTS: [GoogleCalendarListEvents, any];

  /**
   * GOOGLE_CALENDAR_GET_EVENT_BY_ID
   */
  GOOGLE_CALENDAR_GET_EVENT_BY_ID: [GoogleCalendarGetEventById, any];

  /**
   * GOOGLE_CALENDAR_DELETE_EVENT
   */
  GOOGLE_CALENDAR_DELETE_EVENT: [GoogleCalendarDeleteEvent, any];

  /**
   * GOOGLE_CALENDAR_GET_CONTACTS
   */
  GOOGLE_CALENDAR_GET_CONTACTS: [GoogleCalendarGetContacts, any];

  /**
   * GOOGLE_CALENDAR_SEARCH_CONTACTS
   */
  GOOGLE_CALENDAR_SEARCH_CONTACTS: [GoogleCalendarSearchContacts, any];

  /**
   * GOOGLE_CALENDAR_LIST_DIRECTORY_PEOPLE
   */
  GOOGLE_CALENDAR_LIST_DIRECTORY_PEOPLE: [
    GoogleCalendarListDirectoryPeople,
    any,
  ];

  /**
   * GOOGLE_CALENDAR_SEARCH_DIRECTORY_PEOPLE
   */
  GOOGLE_CALENDAR_SEARCH_DIRECTORY_PEOPLE: [
    GoogleCalendarSearchDirectoryPeople,
    any,
  ];

  /**
   * GOOGLE_CALENDAR_LIST_OTHER_CONTACTS
   */
  GOOGLE_CALENDAR_LIST_OTHER_CONTACTS: [GoogleCalendarListOtherContacts, any];

  /**
   * GOOGLE_CALENDAR_SEARCH_OTHER_CONTACTS
   */
  GOOGLE_CALENDAR_SEARCH_OTHER_CONTACTS: [
    GoogleCalendarSearchOtherContacts,
    any,
  ];

  /**
   * GOOGLE_CALENDAR_GET_AVAILABILITY
   */
  GOOGLE_CALENDAR_GET_AVAILABILITY: [GoogleCalendarGetAvailability, any];
};
