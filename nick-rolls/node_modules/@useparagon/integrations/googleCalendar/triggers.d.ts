/**
 * New Event (Legacy) intent type
 */
type GoogleCalendarTriggerEventCreated = {
  /**
   * Calendar
   * Use Connect Portal Workflow Settings to allow users to select a calendar. Defaults to the user’s primary calendar if left blank.
   *
   * **Example**:
   * ```
   * {{settings.calendar}}
   * ```
   */
  calendarId?: string;

  /**
   * Collapse recurring event updates
   * If on, recurring event updates will not be expanded into multiple instances of the event.
   *
   */
  collapseRecurringEventUpdates?: boolean;
};

/**
 * Event Updated (Legacy) intent type
 */
type GoogleCalendarTriggerEventUpdated = {
  /**
   * Calendar
   * Use Connect Portal Workflow Settings to allow users to select a calendar. Defaults to the user’s primary calendar if left blank.
   *
   * **Example**:
   * ```
   * {{settings.calendar}}
   * ```
   */
  calendarId?: string;

  /**
   * Collapse recurring event updates
   * If on, recurring event updates will not be expanded into multiple instances of the event.
   *
   */
  collapseRecurringEventUpdates?: boolean;

  /**
   * Trigger on past event updates
   * If on, this workflow will trigger when events that have already passed are updated. This can add significant event volume to this workflow.
   *
   */
  shouldTriggerOnPastEventUpdates?: boolean;
};

/**
 * Event Cancelled (Legacy) intent type
 */
type GoogleCalendarTriggerEventCancelled = {
  /**
   * Calendar
   * Use Connect Portal Workflow Settings to allow users to select a calendar. Defaults to the user’s primary calendar if left blank.
   *
   * **Example**:
   * ```
   * {{settings.calendar}}
   * ```
   */
  calendarId?: string;

  /**
   * Collapse recurring event updates
   * If on, recurring event updates will not be expanded into multiple instances of the event.
   *
   */
  collapseRecurringEventUpdates?: boolean;

  /**
   * Trigger on past event updates
   * If on, this workflow will trigger when events that have already passed are cancelled. This can add significant event volume to this workflow.
   *
   */
  shouldTriggerOnPastEventUpdates?: boolean;
};

/**
 * Event Started intent type
 */
type GoogleCalendarTriggerEventStarted = {
  /**
   * Calendar
   * Use Connect Portal Workflow Settings to allow users to select a calendar. Defaults to the user’s primary calendar if left blank.
   *
   * **Example**:
   * ```
   * {{settings.calendar}}
   * ```
   */
  calendarId?: string;

  /**
   * Time Before
   * How long before an event starts this should be triggered.
   *
   */
  timeBefore?: undefined;
};

/**
 * Event Ended intent type
 */
type GoogleCalendarTriggerEventEnded = {
  /**
   * Calendar
   * Use Connect Portal Workflow Settings to allow users to select a calendar. Defaults to the user’s primary calendar if left blank.
   *
   * **Example**:
   * ```
   * {{settings.calendar}}
   * ```
   */
  calendarId?: string;
};

/**
 * New Event intent type
 */
type GoogleCalendarWebhookTriggerEventCreated = {
  /**
   * Calendar
   * Use Connect Portal Workflow Settings to allow users to select a calendar. Defaults to the user’s primary calendar if left blank.
   *
   * **Example**:
   * ```
   * {{settings.calendar}}
   * ```
   */
  calendarId?: string;

  /**
   * Collapse recurring event updates
   * If on, recurring event updates will not be expanded into multiple instances of the event.
   *
   */
  collapseRecurringEventUpdates?: boolean;
};

/**
 * Event Updated intent type
 */
type GoogleCalendarWebhookTriggerEventUpdated = {
  /**
   * Calendar
   * Use Connect Portal Workflow Settings to allow users to select a calendar. Defaults to the user’s primary calendar if left blank.
   *
   * **Example**:
   * ```
   * {{settings.calendar}}
   * ```
   */
  calendarId?: string;

  /**
   * Collapse recurring event updates
   * If on, recurring event updates will not be expanded into multiple instances of the event.
   *
   */
  collapseRecurringEventUpdates?: boolean;

  /**
   * Trigger on past event updates
   * If on, this workflow will trigger when events that have already passed are updated. This can add significant event volume to this workflow.
   *
   */
  shouldTriggerOnPastEventUpdates?: boolean;
};

/**
 * Event Cancelled intent type
 */
type GoogleCalendarWebhookTriggerEventCancelled = {
  /**
   * Calendar
   * Use Connect Portal Workflow Settings to allow users to select a calendar. Defaults to the user’s primary calendar if left blank.
   *
   * **Example**:
   * ```
   * {{settings.calendar}}
   * ```
   */
  calendarId?: string;

  /**
   * Collapse recurring event updates
   * If on, recurring event updates will not be expanded into multiple instances of the event.
   *
   */
  collapseRecurringEventUpdates?: boolean;

  /**
   * Trigger on past event updates
   * If on, this workflow will trigger when events that have already passed are cancelled. This can add significant event volume to this workflow.
   *
   */
  shouldTriggerOnPastEventUpdates?: boolean;
};

export type IntentToInputOutput = {
  /**
   * GOOGLE_CALENDAR_TRIGGER_EVENT_CREATED
   */
  GOOGLE_CALENDAR_TRIGGER_EVENT_CREATED: [
    GoogleCalendarTriggerEventCreated,
    any,
  ];

  /**
   * GOOGLE_CALENDAR_TRIGGER_EVENT_UPDATED
   */
  GOOGLE_CALENDAR_TRIGGER_EVENT_UPDATED: [
    GoogleCalendarTriggerEventUpdated,
    any,
  ];

  /**
   * GOOGLE_CALENDAR_TRIGGER_EVENT_CANCELLED
   */
  GOOGLE_CALENDAR_TRIGGER_EVENT_CANCELLED: [
    GoogleCalendarTriggerEventCancelled,
    any,
  ];

  /**
   * GOOGLE_CALENDAR_TRIGGER_EVENT_STARTED
   */
  GOOGLE_CALENDAR_TRIGGER_EVENT_STARTED: [
    GoogleCalendarTriggerEventStarted,
    any,
  ];

  /**
   * GOOGLE_CALENDAR_TRIGGER_EVENT_ENDED
   */
  GOOGLE_CALENDAR_TRIGGER_EVENT_ENDED: [GoogleCalendarTriggerEventEnded, any];

  /**
   * GOOGLE_CALENDAR_WEBHOOK_TRIGGER_EVENT_CREATED
   */
  GOOGLE_CALENDAR_WEBHOOK_TRIGGER_EVENT_CREATED: [
    GoogleCalendarWebhookTriggerEventCreated,
    any,
  ];

  /**
   * GOOGLE_CALENDAR_WEBHOOK_TRIGGER_EVENT_UPDATED
   */
  GOOGLE_CALENDAR_WEBHOOK_TRIGGER_EVENT_UPDATED: [
    GoogleCalendarWebhookTriggerEventUpdated,
    any,
  ];

  /**
   * GOOGLE_CALENDAR_WEBHOOK_TRIGGER_EVENT_CANCELLED
   */
  GOOGLE_CALENDAR_WEBHOOK_TRIGGER_EVENT_CANCELLED: [
    GoogleCalendarWebhookTriggerEventCancelled,
    any,
  ];
};
