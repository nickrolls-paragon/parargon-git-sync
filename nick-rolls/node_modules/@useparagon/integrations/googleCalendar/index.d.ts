import { ActionStep, ActionTriggerStep } from '@useparagon/core';
import {
  CustomDropdownField,
  DynamicMappingField,
} from '@useparagon/core/inputs';
import { IntegrationOptions } from '@useparagon/core/integration';

import { IntentToInputOutput } from './intents';
import { IntentToInputOutput as TriggerIntentToInputOutput } from './triggers';

type IGoogleCalendarIntegrationUserDefinedInput = {
  id: string;
  title: string;
  required?: boolean;
  tooltip?: string;
} & (
  | {
      type:
        | 'text'
        | 'number'
        | 'email'
        | 'url'
        | 'boolean'
        | 'password'
        | 'calendar';
    }
  | {
      type: 'custom_dropdown';
      key: string;
      customDropdownOptions?: CustomDropdownField[];
    }
  | {
      type: 'custom_field_mapping';
      objectName: string;
      // these object types values will be used in preview portal
      mockObjectTypes?: DynamicMappingField[];
      // these integration fields values will be used in preview portal
      mockIntegrationFields?: DynamicMappingField[];
    }
);

/**
 * map b/w input type to result
 */
export type InputResultMap = {
  email: string;
  url: string;
  password: string;
  boolean: boolean;
  text: string;
  number: number;
  custom_dropdown: string;
  custom_field_mapping: {
    object: string;
    fields: Record<string, any>;
  };
  calendar: string;
};

/**
 * pass { variableName for input => Input }
 * this should be used whenever we are creating inputs for integrations/workflows
 * as it will infer proper types
 */
export declare const createInputs: <
  T extends Record<string, IGoogleCalendarIntegrationUserDefinedInput>,
>(
  inputs: T,
) => T;

/**
 * integration type for googleCalendar
 */
export type IGoogleCalendarIntegration = {
  /**
   * name of integration
   */
  name: string;

  /**
   * action step methods
   */
  actions: {
    /**
     * Create event
     * method for GOOGLE_CALENDAR_CREATE_EVENT
     */
    googleCalendarCreateEvent: (
      inputs: IntentToInputOutput['GOOGLE_CALENDAR_CREATE_EVENT'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['GOOGLE_CALENDAR_CREATE_EVENT'][0],
      IntentToInputOutput['GOOGLE_CALENDAR_CREATE_EVENT'][1]
    >;

    /**
     * Update event
     * method for GOOGLE_CALENDAR_UPDATE_EVENT
     */
    googleCalendarUpdateEvent: (
      inputs: IntentToInputOutput['GOOGLE_CALENDAR_UPDATE_EVENT'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['GOOGLE_CALENDAR_UPDATE_EVENT'][0],
      IntentToInputOutput['GOOGLE_CALENDAR_UPDATE_EVENT'][1]
    >;

    /**
     * List events
     * method for GOOGLE_CALENDAR_LIST_EVENTS
     */
    googleCalendarListEvents: (
      inputs: IntentToInputOutput['GOOGLE_CALENDAR_LIST_EVENTS'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['GOOGLE_CALENDAR_LIST_EVENTS'][0],
      IntentToInputOutput['GOOGLE_CALENDAR_LIST_EVENTS'][1]
    >;

    /**
     * Get event by ID
     * method for GOOGLE_CALENDAR_GET_EVENT_BY_ID
     */
    googleCalendarGetEventById: (
      inputs: IntentToInputOutput['GOOGLE_CALENDAR_GET_EVENT_BY_ID'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['GOOGLE_CALENDAR_GET_EVENT_BY_ID'][0],
      IntentToInputOutput['GOOGLE_CALENDAR_GET_EVENT_BY_ID'][1]
    >;

    /**
     * Delete event
     * method for GOOGLE_CALENDAR_DELETE_EVENT
     */
    googleCalendarDeleteEvent: (
      inputs: IntentToInputOutput['GOOGLE_CALENDAR_DELETE_EVENT'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['GOOGLE_CALENDAR_DELETE_EVENT'][0],
      IntentToInputOutput['GOOGLE_CALENDAR_DELETE_EVENT'][1]
    >;

    /**
     * Get contacts
     * method for GOOGLE_CALENDAR_GET_CONTACTS
     */
    googleCalendarGetContacts: (
      inputs: IntentToInputOutput['GOOGLE_CALENDAR_GET_CONTACTS'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['GOOGLE_CALENDAR_GET_CONTACTS'][0],
      IntentToInputOutput['GOOGLE_CALENDAR_GET_CONTACTS'][1]
    >;

    /**
     * Search contacts
     * method for GOOGLE_CALENDAR_SEARCH_CONTACTS
     */
    googleCalendarSearchContacts: (
      inputs: IntentToInputOutput['GOOGLE_CALENDAR_SEARCH_CONTACTS'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['GOOGLE_CALENDAR_SEARCH_CONTACTS'][0],
      IntentToInputOutput['GOOGLE_CALENDAR_SEARCH_CONTACTS'][1]
    >;

    /**
     * List directory people
     * method for GOOGLE_CALENDAR_LIST_DIRECTORY_PEOPLE
     */
    googleCalendarListDirectoryPeople: (
      inputs: IntentToInputOutput['GOOGLE_CALENDAR_LIST_DIRECTORY_PEOPLE'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['GOOGLE_CALENDAR_LIST_DIRECTORY_PEOPLE'][0],
      IntentToInputOutput['GOOGLE_CALENDAR_LIST_DIRECTORY_PEOPLE'][1]
    >;

    /**
     * Search directory people
     * method for GOOGLE_CALENDAR_SEARCH_DIRECTORY_PEOPLE
     */
    googleCalendarSearchDirectoryPeople: (
      inputs: IntentToInputOutput['GOOGLE_CALENDAR_SEARCH_DIRECTORY_PEOPLE'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['GOOGLE_CALENDAR_SEARCH_DIRECTORY_PEOPLE'][0],
      IntentToInputOutput['GOOGLE_CALENDAR_SEARCH_DIRECTORY_PEOPLE'][1]
    >;

    /**
     * List other contacts
     * method for GOOGLE_CALENDAR_LIST_OTHER_CONTACTS
     */
    googleCalendarListOtherContacts: (
      inputs: IntentToInputOutput['GOOGLE_CALENDAR_LIST_OTHER_CONTACTS'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['GOOGLE_CALENDAR_LIST_OTHER_CONTACTS'][0],
      IntentToInputOutput['GOOGLE_CALENDAR_LIST_OTHER_CONTACTS'][1]
    >;

    /**
     * Search other contacts
     * method for GOOGLE_CALENDAR_SEARCH_OTHER_CONTACTS
     */
    googleCalendarSearchOtherContacts: (
      inputs: IntentToInputOutput['GOOGLE_CALENDAR_SEARCH_OTHER_CONTACTS'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['GOOGLE_CALENDAR_SEARCH_OTHER_CONTACTS'][0],
      IntentToInputOutput['GOOGLE_CALENDAR_SEARCH_OTHER_CONTACTS'][1]
    >;

    /**
     * Get availability
     * method for GOOGLE_CALENDAR_GET_AVAILABILITY
     */
    googleCalendarGetAvailability: (
      inputs: IntentToInputOutput['GOOGLE_CALENDAR_GET_AVAILABILITY'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['GOOGLE_CALENDAR_GET_AVAILABILITY'][0],
      IntentToInputOutput['GOOGLE_CALENDAR_GET_AVAILABILITY'][1]
    >;
  };

  /**
   * trigger step methods
   */
  triggers: {
    /**
     * New Event (Legacy)
     * method for GOOGLE_CALENDAR_TRIGGER_EVENT_CREATED
     */
    googleCalendarTriggerEventCreated: (
      inputs: TriggerIntentToInputOutput['GOOGLE_CALENDAR_TRIGGER_EVENT_CREATED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['GOOGLE_CALENDAR_TRIGGER_EVENT_CREATED'][0],
      TriggerIntentToInputOutput['GOOGLE_CALENDAR_TRIGGER_EVENT_CREATED'][1]
    >;

    /**
     * Event Updated (Legacy)
     * method for GOOGLE_CALENDAR_TRIGGER_EVENT_UPDATED
     */
    googleCalendarTriggerEventUpdated: (
      inputs: TriggerIntentToInputOutput['GOOGLE_CALENDAR_TRIGGER_EVENT_UPDATED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['GOOGLE_CALENDAR_TRIGGER_EVENT_UPDATED'][0],
      TriggerIntentToInputOutput['GOOGLE_CALENDAR_TRIGGER_EVENT_UPDATED'][1]
    >;

    /**
     * Event Cancelled (Legacy)
     * method for GOOGLE_CALENDAR_TRIGGER_EVENT_CANCELLED
     */
    googleCalendarTriggerEventCancelled: (
      inputs: TriggerIntentToInputOutput['GOOGLE_CALENDAR_TRIGGER_EVENT_CANCELLED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['GOOGLE_CALENDAR_TRIGGER_EVENT_CANCELLED'][0],
      TriggerIntentToInputOutput['GOOGLE_CALENDAR_TRIGGER_EVENT_CANCELLED'][1]
    >;

    /**
     * Event Started
     * method for GOOGLE_CALENDAR_TRIGGER_EVENT_STARTED
     */
    googleCalendarTriggerEventStarted: (
      inputs: TriggerIntentToInputOutput['GOOGLE_CALENDAR_TRIGGER_EVENT_STARTED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['GOOGLE_CALENDAR_TRIGGER_EVENT_STARTED'][0],
      TriggerIntentToInputOutput['GOOGLE_CALENDAR_TRIGGER_EVENT_STARTED'][1]
    >;

    /**
     * Event Ended
     * method for GOOGLE_CALENDAR_TRIGGER_EVENT_ENDED
     */
    googleCalendarTriggerEventEnded: (
      inputs: TriggerIntentToInputOutput['GOOGLE_CALENDAR_TRIGGER_EVENT_ENDED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['GOOGLE_CALENDAR_TRIGGER_EVENT_ENDED'][0],
      TriggerIntentToInputOutput['GOOGLE_CALENDAR_TRIGGER_EVENT_ENDED'][1]
    >;

    /**
     * New Event
     * method for GOOGLE_CALENDAR_WEBHOOK_TRIGGER_EVENT_CREATED
     */
    googleCalendarWebhookTriggerEventCreated: (
      inputs: TriggerIntentToInputOutput['GOOGLE_CALENDAR_WEBHOOK_TRIGGER_EVENT_CREATED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['GOOGLE_CALENDAR_WEBHOOK_TRIGGER_EVENT_CREATED'][0],
      TriggerIntentToInputOutput['GOOGLE_CALENDAR_WEBHOOK_TRIGGER_EVENT_CREATED'][1]
    >;

    /**
     * Event Updated
     * method for GOOGLE_CALENDAR_WEBHOOK_TRIGGER_EVENT_UPDATED
     */
    googleCalendarWebhookTriggerEventUpdated: (
      inputs: TriggerIntentToInputOutput['GOOGLE_CALENDAR_WEBHOOK_TRIGGER_EVENT_UPDATED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['GOOGLE_CALENDAR_WEBHOOK_TRIGGER_EVENT_UPDATED'][0],
      TriggerIntentToInputOutput['GOOGLE_CALENDAR_WEBHOOK_TRIGGER_EVENT_UPDATED'][1]
    >;

    /**
     * Event Cancelled
     * method for GOOGLE_CALENDAR_WEBHOOK_TRIGGER_EVENT_CANCELLED
     */
    googleCalendarWebhookTriggerEventCancelled: (
      inputs: TriggerIntentToInputOutput['GOOGLE_CALENDAR_WEBHOOK_TRIGGER_EVENT_CANCELLED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['GOOGLE_CALENDAR_WEBHOOK_TRIGGER_EVENT_CANCELLED'][0],
      TriggerIntentToInputOutput['GOOGLE_CALENDAR_WEBHOOK_TRIGGER_EVENT_CANCELLED'][1]
    >;
  };
};
