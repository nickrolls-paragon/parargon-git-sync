import { ActionStep, ActionTriggerStep } from '@useparagon/core';
import {
  CustomDropdownField,
  DynamicMappingField,
} from '@useparagon/core/inputs';
import { IntegrationOptions } from '@useparagon/core/integration';

import { IntentToInputOutput } from './intents';
import { IntentToInputOutput as TriggerIntentToInputOutput } from './triggers';

type IIntercomIntegrationUserDefinedInput = {
  id: string;
  title: string;
  required?: boolean;
  tooltip?: string;
} & (
  | {
      type:
        | 'text'
        | 'number'
        | 'email'
        | 'url'
        | 'boolean'
        | 'password'
        | 'admin';
    }
  | {
      type: 'custom_dropdown';
      key: string;
      customDropdownOptions?: CustomDropdownField[];
    }
  | {
      type: 'custom_field_mapping';
      objectName: string;
      // these object types values will be used in preview portal
      mockObjectTypes?: DynamicMappingField[];
      // these integration fields values will be used in preview portal
      mockIntegrationFields?: DynamicMappingField[];
    }
);

/**
 * map b/w input type to result
 */
export type InputResultMap = {
  email: string;
  url: string;
  password: string;
  boolean: boolean;
  text: string;
  number: number;
  custom_dropdown: string;
  custom_field_mapping: {
    object: string;
    fields: Record<string, any>;
  };
  admin: string;
};

/**
 * pass { variableName for input => Input }
 * this should be used whenever we are creating inputs for integrations/workflows
 * as it will infer proper types
 */
export declare const createInputs: <
  T extends Record<string, IIntercomIntegrationUserDefinedInput>,
>(
  inputs: T,
) => T;

/**
 * integration type for intercom
 */
export type IIntercomIntegration = {
  /**
   * name of integration
   */
  name: string;

  /**
   * action step methods
   */
  actions: {
    /**
     * Create contact
     * method for INTERCOM_CREATE_CONTACT
     */
    createContact: (
      inputs: IntentToInputOutput['INTERCOM_CREATE_CONTACT'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['INTERCOM_CREATE_CONTACT'][0],
      IntentToInputOutput['INTERCOM_CREATE_CONTACT'][1]
    >;

    /**
     * Update contact
     * method for INTERCOM_UPDATE_CONTACT
     */
    updateContact: (
      inputs: IntentToInputOutput['INTERCOM_UPDATE_CONTACT'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['INTERCOM_UPDATE_CONTACT'][0],
      IntentToInputOutput['INTERCOM_UPDATE_CONTACT'][1]
    >;

    /**
     * Get contact by ID
     * method for INTERCOM_GET_CONTACT_BY_ID
     */
    getContactById: (
      inputs: IntentToInputOutput['INTERCOM_GET_CONTACT_BY_ID'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['INTERCOM_GET_CONTACT_BY_ID'][0],
      IntentToInputOutput['INTERCOM_GET_CONTACT_BY_ID'][1]
    >;

    /**
     * Search contacts
     * method for INTERCOM_SEARCH_CONTACTS
     */
    searchContacts: (
      inputs: IntentToInputOutput['INTERCOM_SEARCH_CONTACTS'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['INTERCOM_SEARCH_CONTACTS'][0],
      IntentToInputOutput['INTERCOM_SEARCH_CONTACTS'][1]
    >;

    /**
     * Send message
     * method for INTERCOM_SEND_MESSAGE
     */
    sendMessage: (
      inputs: IntentToInputOutput['INTERCOM_SEND_MESSAGE'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['INTERCOM_SEND_MESSAGE'][0],
      IntentToInputOutput['INTERCOM_SEND_MESSAGE'][1]
    >;
  };

  /**
   * trigger step methods
   */
  triggers: {
    /**
     * New Contact Created
     * method for INTERCOM_TRIGGER_CONTACT_CREATED
     */
    contactCreated: (
      inputs: TriggerIntentToInputOutput['INTERCOM_TRIGGER_CONTACT_CREATED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['INTERCOM_TRIGGER_CONTACT_CREATED'][0],
      TriggerIntentToInputOutput['INTERCOM_TRIGGER_CONTACT_CREATED'][1]
    >;

    /**
     * Contact Updated
     * method for INTERCOM_TRIGGER_CONTACT_UPDATED
     */
    contactUpdated: (
      inputs: TriggerIntentToInputOutput['INTERCOM_TRIGGER_CONTACT_UPDATED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['INTERCOM_TRIGGER_CONTACT_UPDATED'][0],
      TriggerIntentToInputOutput['INTERCOM_TRIGGER_CONTACT_UPDATED'][1]
    >;

    /**
     * New Company Created
     * method for INTERCOM_TRIGGER_COMPANY_CREATED
     */
    companyCreated: (
      inputs: TriggerIntentToInputOutput['INTERCOM_TRIGGER_COMPANY_CREATED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['INTERCOM_TRIGGER_COMPANY_CREATED'][0],
      TriggerIntentToInputOutput['INTERCOM_TRIGGER_COMPANY_CREATED'][1]
    >;

    /**
     * Company Updated
     * method for INTERCOM_TRIGGER_COMPANY_UPDATED
     */
    companyUpdated: (
      inputs: TriggerIntentToInputOutput['INTERCOM_TRIGGER_COMPANY_UPDATED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['INTERCOM_TRIGGER_COMPANY_UPDATED'][0],
      TriggerIntentToInputOutput['INTERCOM_TRIGGER_COMPANY_UPDATED'][1]
    >;
  };
};
