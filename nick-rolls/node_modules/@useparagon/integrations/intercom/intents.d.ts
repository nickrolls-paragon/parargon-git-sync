import { ConditionalInput } from '@useparagon/core/steps/library/conditional';

/**
 * Create contact intent type
 */
type IntercomCreateContact = {
  /**
   * Role
   *
   */
  role: 'user' | 'lead';

  /**
   * Email
   *
   * **Example**:
   * ```
   * name@example.com
   * ```
   */
  email: string;

  /**
   * Name
   *
   */
  name?: string;

  /**
   * External ID
   * A unique external identifier given to the contact (e.g. from your app)
   *
   * **Example**:
   * ```
   * 25
   * ```
   */
  externalId?: string;

  /**
   * Phone
   *
   * **Example**:
   * ```
   * +1123456789
   * ```
   */
  phone?: string;

  /**
   * Avatar
   *
   * **Example**:
   * ```
   * https://example.com/avatar.jpeg
   * ```
   */
  avatar?: string;

  /**
   * Signed up at
   * The time specified for when a contact signed up (ISO or Unix timestamp).
   *
   * **Example**:
   * ```
   * 2014-04-25T16:15:47-04:00
   * ```
   */
  signedUpDate?: string;

  /**
   * Last seen at
   * The time when the contact was last seen (ISO or Unix timestamp).
   *
   * **Example**:
   * ```
   * 2014-04-25T16:15:47-04:00
   * ```
   */
  lastSeenDate?: string;

  /**
   * Owner ID
   * The Intercom Admin that has been assigned account ownership of the contact. Use Connect Portal Workflow Settings to allow users to select an Admin.
   *
   * **Example**:
   * ```
   * {{settings.admin}}
   * ```
   */
  ownerId?: string;

  /**
   * Unsubscribed from emails
   * Whether the contact is unsubscribed from emails.
   *
   */
  unsubscribeFromEmail?: boolean;

  /**
   * Custom attributes
   *
   * **Example**:
   * ```
   * {
   *"paid_subscriber": true,
   *"monthly_spend": 155.5,
   *"team_mates": 1
   *}
   * ```
   */
  customAttribute?: string;
};

/**
 * Update contact intent type
 */
type IntercomUpdateContact = {
  /**
   * Contact ID
   * The ID of the contact to update.
   *
   */
  contactId: string;

  /**
   * Role
   *
   */
  role?: 'user' | 'lead';

  /**
   * Email
   *
   * **Example**:
   * ```
   * name@example.com
   * ```
   */
  email?: string;

  /**
   * Name
   *
   */
  name?: string;

  /**
   * External ID
   * A unique external identifier given to the contact (e.g. from your app)
   *
   * **Example**:
   * ```
   * 25
   * ```
   */
  externalId?: string;

  /**
   * Phone
   *
   * **Example**:
   * ```
   * +1123456789
   * ```
   */
  phone?: string;

  /**
   * Avatar
   *
   * **Example**:
   * ```
   * https://example.com/avatar.jpeg
   * ```
   */
  avatar?: string;

  /**
   * Signed up at
   * The time specified for when a contact signed up (ISO or Unix timestamp).
   *
   * **Example**:
   * ```
   * 2014-04-25T16:15:47-04:00
   * ```
   */
  signedUpDate?: string;

  /**
   * Last seen at
   * The time when the contact was last seen (ISO or Unix timestamp).
   *
   * **Example**:
   * ```
   * 2014-04-25T16:15:47-04:00
   * ```
   */
  lastSeenDate?: string;

  /**
   * Owner ID
   * The Intercom Admin that has been assigned account ownership of the contact. Use Connect Portal Workflow Settings to allow users to select an Admin.
   *
   * **Example**:
   * ```
   * {{settings.admin}}
   * ```
   */
  ownerId?: string;

  /**
   * Unsubscribed from emails
   * Whether the contact is unsubscribed from emails.
   *
   */
  unsubscribeFromEmail?: boolean;

  /**
   * Custom attributes
   *
   * **Example**:
   * ```
   * {
   *"paid_subscriber": true,
   *"monthly_spend": 155.5,
   *"team_mates": 1
   *}
   * ```
   */
  customAttribute?: string;
};

/**
 * Get contact by ID intent type
 */
type IntercomGetContactById = {
  /**
   * Contact ID
   *
   */
  contactId: string;
};

/**
 * Search contacts intent type
 */
type IntercomSearchContacts = {
  /**
   * Filter search
   * Get contacts that match the specified filters.
   *
   * **Example**:
   * ```
   * field
   * ```
   */
  filterFormula?: ConditionalInput;
};

/**
 * Send message intent type
 */
type IntercomSendMessage = {
  /**
   * Recipient contact type
   *
   */
  recipientContactType: 'user' | 'lead';

  /**
   * Recipient contact ID
   * The ID of the contact to send the message to.
   *
   */
  recepientContactId: string;

  /**
   * Message type
   *
   */
  messageType: 'inapp' | 'email';

  /**
   * From
   * The Intercom Admin the message will be sent from. Use Connect Portal Workflow Settings to allow users to select an Admin.
   *
   * **Example**:
   * ```
   * {{settings.admin}}
   * ```
   */
  fromId: string;

  /**
   * Subject
   * Required if sending an email.
   *
   * **Example**:
   * ```
   * name@example.com
   * ```
   */
  subject?: string;

  /**
   * Body
   * The content of the message. HTML and plaintext are supported.
   *
   */
  body: string;

  /**
   * Template
   * The style of the outgoing message. Required if sending an email.
   *
   */
  template?: 'personal' | 'plain';
};

export type IntentToInputOutput = {
  /**
   * INTERCOM_CREATE_CONTACT
   */
  INTERCOM_CREATE_CONTACT: [IntercomCreateContact, any];

  /**
   * INTERCOM_UPDATE_CONTACT
   */
  INTERCOM_UPDATE_CONTACT: [IntercomUpdateContact, any];

  /**
   * INTERCOM_GET_CONTACT_BY_ID
   */
  INTERCOM_GET_CONTACT_BY_ID: [IntercomGetContactById, any];

  /**
   * INTERCOM_SEARCH_CONTACTS
   */
  INTERCOM_SEARCH_CONTACTS: [IntercomSearchContacts, any];

  /**
   * INTERCOM_SEND_MESSAGE
   */
  INTERCOM_SEND_MESSAGE: [IntercomSendMessage, any];
};
