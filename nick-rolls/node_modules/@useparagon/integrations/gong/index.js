const { ActionStep, ActionTriggerStep } = require('@useparagon/core');

/**
 * this should be used whenever we are creating inputs for integrations/workflows
 */
exports.createInputs = (inputs) => inputs;

/**
 * inputs for gong
 */
exports.inputs = [];

/**
 * triggers for gong
 */
exports.triggers = [];

/**
 * intents for gong
 */
exports.intents = [
  {
    title: 'Add a new Call',
    name: 'GONG_ADD_CALL',
    output: [],
    inputs: [
      {
        id: 'actualStart',
        title: 'Call Start Date',
        type: 'TEXTAREA',
        subtitle: 'Accepts ISO 8601 date format.',
        placeholder: '2022-08-01T07:00:00.000Z',
        required: true,
      },
      {
        id: 'clientUniqueId',
        title: 'Client Unique ID',
        type: 'TEXTAREA',
        subtitle:
          "A call's unique identifier in the PBX or the recording system. Gong uses this identifier to prevent repeated attempts to upload the same recording.",
        placeholder: '123abc',
        required: true,
      },
      {
        id: 'direction',
        title: 'Direction',
        type: 'EDITABLE_ENUM',
        required: true,
        values: ['Conference', 'Inbound', 'Outbound', 'Unknown'],
      },
      {
        id: 'parties',
        title: 'Parties',
        type: 'TEXTAREA',
        placeholder:
          '[\n    {\n      "emailAddress": "test@test.com",\n      "name": "Test User",\n      "userId": "7387268041252473322"\n    }\n  ]',
        required: true,
      },
      {
        id: 'primaryUser',
        title: 'Primary User',
        type: 'TEXTAREA',
        subtitle:
          'The Gong internal user ID of the team member who hosted the call.',
        placeholder: '7347263041252417409',
        required: true,
      },
      {
        id: 'title',
        title: 'Title',
        type: 'TEXTAREA',
        subtitle:
          'The title of the call. This title is available in the Gong system for indexing and search.',
        placeholder: 'Call with Sales',
      },
      {
        id: 'downloadMediaUrl',
        title: 'Download Media URL',
        type: 'TEXTAREA',
        subtitle:
          'The URL from which Gong can download the media file. Up to 1.5 GB.',
      },
      {
        id: 'purpose',
        title: 'Purpose',
        type: 'TEXTAREA',
        subtitle: 'The purpose of the call. Limit of 255 characters.',
      },
      {
        id: 'duration',
        title: 'Duration',
        type: 'TEXTAREA',
        subtitle: 'The call duration in seconds.',
        placeholder: '3600.0',
      },
    ],
  },
  {
    title: 'Get Call by ID',
    name: 'GONG_GET_CALL_BY_ID',
    output: [],
    inputs: [
      {
        id: 'id',
        title: 'Call ID',
        type: 'TEXTAREA',
        subtitle:
          "Specify Gong's unique numeric identifier for the call (up to 20 digits).",
        placeholder: '16470009016529344',
        required: true,
      },
    ],
  },
  {
    title: 'Search for Call',
    name: 'GONG_SEARCH_CALL',
    output: [],
    inputs: [
      {
        id: 'fromDateTime',
        title: 'Start Date',
        type: 'TEXTAREA',
        subtitle: 'Accepts ISO 8601 date format.',
        placeholder: '2022-08-01T07:00:00.000Z',
        required: true,
      },
      {
        id: 'toDateTime',
        title: 'End Date',
        type: 'TEXTAREA',
        subtitle: 'Accepts ISO 8601 date format.',
        placeholder: '2022-08-01T07:00:00.000Z',
        required: true,
      },
    ],
  },
];

/**
 * integration class for gong
 */
exports.integration = {
  /**
   * name of integration
   */
  name: 'gong',

  /**
   * action step methods
   */
  actions: {
    /**
     * Add a new Call
     * method for GONG_ADD_CALL
     */
    addCall: (inputs, options) => {
      return new ActionStep({
        intent: 'GONG_ADD_CALL',
        actionType: 'gong',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Call by ID
     * method for GONG_GET_CALL_BY_ID
     */
    getCallById: (inputs, options) => {
      return new ActionStep({
        intent: 'GONG_GET_CALL_BY_ID',
        actionType: 'gong',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Search for Call
     * method for GONG_SEARCH_CALL
     */
    searchCall: (inputs, options) => {
      return new ActionStep({
        intent: 'GONG_SEARCH_CALL',
        actionType: 'gong',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
  },

  /**
   * trigger step methods
   */
  triggers: {},
};
