const { ActionStep, ActionTriggerStep } = require('@useparagon/core');

/**
 * this should be used whenever we are creating inputs for integrations/workflows
 */
exports.createInputs = (inputs) => inputs;

/**
 * inputs for mailchimp
 */
exports.inputs = [
  {
    id: 'list',
    title: 'List',
    type: 'DYNAMIC_DATA_SOURCE',
  },
  {
    id: 'template',
    title: 'Template',
    type: 'DYNAMIC_DATA_SOURCE',
  },
];

/**
 * triggers for mailchimp
 */
exports.triggers = [
  {
    title: 'Mailchimp Lists',
    name: 'MAILCHIMP_TRIGGER_LIST',
    output: [],
    inputs: [
      {
        id: 'listId',
        title: 'List ID',
        type: 'TEXTAREA',
        subtitle: 'Unique Id for the list',
        placeholder: '{{settings.list}}',
        required: true,
      },
    ],
  },
];

/**
 * intents for mailchimp
 */
exports.intents = [
  {
    title: 'Create Campaign',
    name: 'MAILCHIMP_CREATE_CAMPAIGN',
    output: [],
    inputs: [
      {
        id: 'title',
        title: 'Title',
        type: 'TEXTAREA',
        subtitle:
          'The title to describe this campaign in your Mailchimp account.',
        required: true,
      },
      {
        id: 'listId',
        title: 'List ID',
        type: 'TEXTAREA',
        subtitle:
          'Select a list to send this campaign to. Use Connect Portal Workflow Settings to allow users to select a List.',
        placeholder: '{{settings.list}}',
        required: true,
      },
      {
        id: 'fromName',
        title: 'From Name',
        type: 'TEXTAREA',
        subtitle: 'The “From” name for this campaign (not an email address).',
        required: true,
      },
      {
        id: 'replyTo',
        title: 'Reply-To Email Address',
        type: 'TEXTAREA',
        subtitle: 'The reply-to address for the email sent with this campaign.',
        required: true,
      },
      {
        id: 'subjectLine',
        title: 'Subject Line',
        type: 'TEXTAREA',
        subtitle:
          'The subject line to be used in the email sent with this campaign.',
        required: true,
      },
      {
        id: 'previewText',
        title: 'Preview Text',
        type: 'TEXTAREA',
        subtitle: 'The preview text for the email of this campaign.',
      },
      {
        id: 'templateId',
        title: 'Template ID',
        type: 'TEXTAREA',
        subtitle:
          'The template to use in the email for this campaign. Use Connect Portal Workflow Settings to select a Template.',
        placeholder: '{{settings.template}}',
      },
    ],
  },
  {
    title: 'Update Campaign',
    name: 'MAILCHIMP_UPDATE_CAMPAIGN',
    output: [],
    inputs: [
      {
        id: 'campaignId',
        title: 'Campaign ID',
        type: 'TEXTAREA',
        subtitle: 'The ID of the campaign to update.',
        required: true,
      },
      {
        id: 'title',
        title: 'Title',
        type: 'TEXTAREA',
        subtitle:
          'The title to describe this campaign in your Mailchimp account.',
      },
      {
        id: 'listId',
        title: 'List ID',
        type: 'TEXTAREA',
        subtitle:
          'Select a list to send this campaign to. Use Connect Portal Workflow Settings to allow users to select a List.',
        placeholder: '{{settings.list}}',
      },
      {
        id: 'fromName',
        title: 'From Name',
        type: 'TEXTAREA',
        subtitle: 'The “From” name for this campaign (not an email address).',
      },
      {
        id: 'replyTo',
        title: 'Reply-To Email Address',
        type: 'TEXTAREA',
        subtitle: 'The reply-to address for the email sent with this campaign.',
      },
      {
        id: 'subjectLine',
        title: 'Subject Line',
        type: 'TEXTAREA',
        subtitle:
          'The subject line to be used in the email sent with this campaign.',
      },
      {
        id: 'previewText',
        title: 'Preview Text',
        type: 'TEXTAREA',
        subtitle: 'The preview text for the email of this campaign.',
      },
      {
        id: 'templateId',
        title: 'Template ID',
        type: 'TEXTAREA',
        subtitle:
          'The template to use in the email for this campaign. Use Connect Portal Workflow Settings to select a Template.',
        placeholder: '{{settings.template}}',
      },
    ],
  },
  {
    title: 'Send Campaign',
    name: 'MAILCHIMP_SEND_CAMPAIGN',
    output: [],
    inputs: [
      {
        id: 'campaignId',
        title: 'Campaign ID',
        type: 'TEXTAREA',
        subtitle: 'The ID of the campaign to send.',
        required: true,
      },
    ],
  },
  {
    title: 'Search Campaigns',
    name: 'MAILCHIMP_SEARCH_CAMPAIGNS',
    output: [],
    inputs: [
      {
        id: 'campaignFilterFormula',
        title: 'Filter search',
        type: 'CONDITIONAL',
        subtitle: 'Search for campaigns that match specified filters.',
        supportedKeys: [
          'CAMPAIGN_CREATION_DATE',
          'CAMPAIGN_SENT_DATE',
          'list_id',
          'folder_id',
          'member_id',
        ],
        supportedOperators: [
          '$stringExactlyMatches',
          '$dateTimeBefore',
          '$dateTimeAfter',
        ],
      },
    ],
  },
  {
    title: 'Get Campaign by ID',
    name: 'MAILCHIMP_GET_CAMPAIGN_BY_ID',
    output: [],
    inputs: [
      {
        id: 'campaignId',
        title: 'Campaign ID',
        type: 'TEXTAREA',
        subtitle: 'The ID of the campaign to get.',
        required: true,
      },
    ],
  },
  {
    title: 'Delete Campaign by ID',
    name: 'MAILCHIMP_DELETE_CAMPAIGN_BY_ID',
    output: [],
    inputs: [
      {
        id: 'campaignId',
        title: 'Campaign ID',
        type: 'TEXTAREA',
        subtitle: 'The ID of the campaign to delete.',
        required: true,
      },
    ],
  },
  {
    title: 'Create List',
    name: 'MAILCHIMP_CREATE_LIST',
    output: [],
    inputs: [
      {
        id: 'name',
        title: 'Name',
        type: 'TEXTAREA',
        subtitle: 'The name for the list in your Mailchimp account.',
        required: true,
      },
      {
        id: 'fromName',
        title: 'From Name',
        type: 'TEXTAREA',
        subtitle: 'The default From Name for campaigns sent to this list.',
        required: true,
      },
      {
        id: 'fromEmail',
        title: 'From Email',
        type: 'TEXTAREA',
        subtitle: 'The default From Email for campaigns sent to this list.',
        required: true,
      },
      {
        id: 'defaultSubject',
        title: 'Default Subject',
        type: 'TEXTAREA',
        subtitle: 'The default subject line for campaigns sent to this list.',
        required: true,
      },
      {
        id: 'language',
        title: 'Language',
        type: 'TEXTAREA',
        subtitle: 'The default language for campaigns sent to this list.',
        required: true,
      },
      {
        id: 'permissionReminder',
        title: 'Permission Reminder',
        type: 'TEXTAREA',
        subtitle:
          'A description for explaining how contacts got added to this list.',
        required: true,
      },
      {
        id: 'companyName',
        title: 'Company Name',
        type: 'TEXTAREA',
        subtitle:
          'Part of required contact information displayed in campaign footers.',
        required: true,
      },
      {
        id: 'streetAddress',
        title: 'Street Address',
        type: 'TEXTAREA',
        subtitle:
          'Part of required contact information displayed in campaign footers.',
        required: true,
      },
      {
        id: 'city',
        title: 'City',
        type: 'TEXTAREA',
        subtitle:
          'Part of required contact information displayed in campaign footers.',
        required: true,
      },
      {
        id: 'state',
        title: 'State',
        type: 'TEXTAREA',
        subtitle:
          'Part of required contact information displayed in campaign footers.',
        required: true,
      },
      {
        id: 'zip',
        title: 'Zip Code',
        type: 'TEXTAREA',
        subtitle:
          'Part of required contact information displayed in campaign footers.',
        required: true,
      },
      {
        id: 'countryCode',
        title: 'Country Code',
        type: 'TEXTAREA',
        subtitle:
          'Part of required contact information displayed in campaign footers. Defaults to US.',
        required: true,
      },
    ],
  },
  {
    title: 'Get List by ID',
    name: 'MAILCHIMP_GET_LIST_BY_ID',
    output: [],
    inputs: [
      {
        id: 'listId',
        title: 'List ID',
        type: 'TEXTAREA',
        subtitle:
          'Select a list to send this campaign to. Use Connect Portal Workflow Settings to allow users to select a List.',
        placeholder: '{{settings.list}}',
        required: true,
      },
    ],
  },
  {
    title: 'Search Lists',
    name: 'MAILCHIMP_SEARCH_LISTS',
    output: [],
    inputs: [
      {
        id: 'listFilterFormula',
        title: 'Filter search',
        type: 'CONDITIONAL',
        subtitle: 'Search for lists that match specified filters.',
        supportedKeys: ['email', 'LIST_CREATE_DATE', 'LIST_CAMPAIGN_DATE'],
        supportedOperators: [
          '$stringExactlyMatches',
          '$dateTimeBefore',
          '$dateTimeAfter',
        ],
      },
    ],
  },
  {
    title: 'Add Contact to List',
    name: 'MAILCHIMP_ADD_CONTACT_TO_LIST',
    output: [],
    inputs: [
      {
        id: 'listId',
        title: 'List ID',
        type: 'TEXTAREA',
        subtitle: 'The ID of the list to add a contact to.',
        placeholder: '{{settings.list}}',
        required: true,
      },
      {
        id: 'emailAddress',
        title: 'Email Address',
        type: 'TEXTAREA',
        required: true,
      },
      {
        id: 'contactStatus',
        title: 'Status',
        type: 'ENUM',
        subtitle:
          'Select a status for the new contact. Defaults to Subscribed.',
        defaultValue: 'subscribed',
        values: ['subscribed', 'cleaned', 'pending', 'transactional'],
      },
      {
        id: 'contactMergeFields',
        title: 'Merge Fields',
        type: 'CODE',
        placeholder: '{\n  "FNAME": "Brandon",\n  "LNAME": "Foo"\n}',
      },
    ],
  },
  {
    title: 'Update Contact in List',
    name: 'MAILCHIMP_UPDATE_CONTACT_TO_LIST',
    output: [],
    inputs: [
      {
        id: 'listId',
        title: 'List ID',
        type: 'TEXTAREA',
        subtitle: 'The ID of the list to add a contact to.',
        placeholder: '{{settings.list}}',
        required: true,
      },
      {
        id: 'listContact',
        title: 'Email Address or Contact ID',
        type: 'TEXTAREA',
        subtitle: 'The email address or contact ID of the contact to update.',
        required: true,
      },
      {
        id: 'emailAddress',
        title: 'Update Email Address',
        type: 'TEXTAREA',
        subtitle: 'Specify a new email address for this contact.',
      },
      {
        id: 'contactStatus',
        title: 'Status',
        type: 'ENUM',
        subtitle:
          'Select a status for the new contact. Defaults to Subscribed.',
        defaultValue: 'subscribed',
        values: [
          'subscribed',
          'unsubscribed',
          'cleaned',
          'pending',
          'transactional',
        ],
      },
      {
        id: 'contactMergeFields',
        title: 'Merge Fields',
        type: 'CODE',
        placeholder: '{\n  "FNAME": "Brandon",\n  "LNAME": "Foo"\n}',
      },
    ],
  },
  {
    title: 'Get Contacts from List',
    name: 'MAILCHIMP_GET_CONTACTS_FROM_LIST',
    output: [],
    inputs: [
      {
        id: 'listId',
        title: 'List ID',
        type: 'TEXTAREA',
        subtitle: 'The ID of the list to get contacts from.',
        placeholder: '{{settings.list}}',
        required: true,
      },
    ],
  },
];

/**
 * integration class for mailchimp
 */
exports.integration = {
  /**
   * name of integration
   */
  name: 'mailchimp',

  /**
   * action step methods
   */
  actions: {
    /**
     * Create Campaign
     * method for MAILCHIMP_CREATE_CAMPAIGN
     */
    createCampaign: (inputs, options) => {
      return new ActionStep({
        intent: 'MAILCHIMP_CREATE_CAMPAIGN',
        actionType: 'mailchimp',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Update Campaign
     * method for MAILCHIMP_UPDATE_CAMPAIGN
     */
    updateCampaign: (inputs, options) => {
      return new ActionStep({
        intent: 'MAILCHIMP_UPDATE_CAMPAIGN',
        actionType: 'mailchimp',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Send Campaign
     * method for MAILCHIMP_SEND_CAMPAIGN
     */
    sendCampaign: (inputs, options) => {
      return new ActionStep({
        intent: 'MAILCHIMP_SEND_CAMPAIGN',
        actionType: 'mailchimp',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Search Campaigns
     * method for MAILCHIMP_SEARCH_CAMPAIGNS
     */
    searchCampaigns: (inputs, options) => {
      return new ActionStep({
        intent: 'MAILCHIMP_SEARCH_CAMPAIGNS',
        actionType: 'mailchimp',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Campaign by ID
     * method for MAILCHIMP_GET_CAMPAIGN_BY_ID
     */
    getCampaignById: (inputs, options) => {
      return new ActionStep({
        intent: 'MAILCHIMP_GET_CAMPAIGN_BY_ID',
        actionType: 'mailchimp',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Delete Campaign by ID
     * method for MAILCHIMP_DELETE_CAMPAIGN_BY_ID
     */
    deleteCampaignById: (inputs, options) => {
      return new ActionStep({
        intent: 'MAILCHIMP_DELETE_CAMPAIGN_BY_ID',
        actionType: 'mailchimp',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Create List
     * method for MAILCHIMP_CREATE_LIST
     */
    createList: (inputs, options) => {
      return new ActionStep({
        intent: 'MAILCHIMP_CREATE_LIST',
        actionType: 'mailchimp',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get List by ID
     * method for MAILCHIMP_GET_LIST_BY_ID
     */
    getListById: (inputs, options) => {
      return new ActionStep({
        intent: 'MAILCHIMP_GET_LIST_BY_ID',
        actionType: 'mailchimp',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Search Lists
     * method for MAILCHIMP_SEARCH_LISTS
     */
    searchLists: (inputs, options) => {
      return new ActionStep({
        intent: 'MAILCHIMP_SEARCH_LISTS',
        actionType: 'mailchimp',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Add Contact to List
     * method for MAILCHIMP_ADD_CONTACT_TO_LIST
     */
    addContactToList: (inputs, options) => {
      return new ActionStep({
        intent: 'MAILCHIMP_ADD_CONTACT_TO_LIST',
        actionType: 'mailchimp',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Update Contact in List
     * method for MAILCHIMP_UPDATE_CONTACT_TO_LIST
     */
    updateContactToList: (inputs, options) => {
      return new ActionStep({
        intent: 'MAILCHIMP_UPDATE_CONTACT_TO_LIST',
        actionType: 'mailchimp',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Contacts from List
     * method for MAILCHIMP_GET_CONTACTS_FROM_LIST
     */
    getContactsFromList: (inputs, options) => {
      return new ActionStep({
        intent: 'MAILCHIMP_GET_CONTACTS_FROM_LIST',
        actionType: 'mailchimp',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
  },

  /**
   * trigger step methods
   */
  triggers: {
    /**
     * Mailchimp Lists
     * method for MAILCHIMP_TRIGGER_LIST
     */
    list: (inputs) => {
      return new ActionTriggerStep({
        intent: 'MAILCHIMP_TRIGGER_LIST',
        actionType: 'mailchimp',
        parameters: inputs,
      });
    },
  },
};
