import { ActionStep, ActionTriggerStep } from '@useparagon/core';
import {
  CustomDropdownField,
  UserDefinedComboInputOptions,
  UserDefinedFieldMappingOptions,
} from '@useparagon/core/inputs';
import { IntegrationOptions } from '@useparagon/core/integration';

import { IntentToInputOutput } from './intents';
import { IntentToInputOutput as TriggerIntentToInputOutput } from './triggers';

type IHubspotIntegrationUserDefinedInput = {
  id: string;
  title: string;
  required?: boolean;
  tooltip?: string;
} & (
  | {
      type:
        | 'text'
        | 'number'
        | 'email'
        | 'url'
        | 'boolean'
        | 'password'
        | 'company_lead_status'
        | 'contact_lead_status'
        | 'lifecycle_stage'
        | 'hub_spot_owner'
        | 'contact_properties'
        | 'deal_properties'
        | 'company_properties'
        | 'contact_lists';
    }
  | {
      type: 'custom_dropdown';
      key: string;
      customDropdownOptions?: CustomDropdownField[];
    }
  | ({
      type: 'field_mapping';
    } & UserDefinedFieldMappingOptions)
  | ({
      type: 'deal_stage';
    } & UserDefinedComboInputOptions)
);

/**
 * map b/w input type to result
 */
export type InputResultMap = {
  email: string;
  url: string;
  password: string;
  boolean: boolean;
  text: string;
  number: number;
  custom_dropdown: string;

  deal_stage: {
    pipelines: string;
    deal_stages_by_pipeline: string;
  };
  company_lead_status: string;
  contact_lead_status: string;
  lifecycle_stage: string;
  hub_spot_owner: string;
  field_mapping: {
    custom_object_types: string;
    field_name: Record<string, any>;
  };
  contact_properties: string;
  deal_properties: string;
  company_properties: string;
  contact_lists: string;
};

/**
 * pass { variableName for input => Input }
 * this should be used whenever we are creating inputs for integrations/workflows
 * as it will infer proper types
 */
export declare const createInputs: <
  T extends Record<string, IHubspotIntegrationUserDefinedInput>,
>(
  inputs: T,
) => T;

/**
 * integration type for hubspot
 */
export type IHubspotIntegration = {
  /**
   * name of integration
   */
  name: string;

  /**
   * action step methods
   */
  actions: {
    /**
     * Create Record
     * method for HUBSPOT_CREATE_RECORD
     */
    createRecord: (
      inputs: IntentToInputOutput['HUBSPOT_CREATE_RECORD'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['HUBSPOT_CREATE_RECORD'][0],
      IntentToInputOutput['HUBSPOT_CREATE_RECORD'][1]
    >;

    /**
     * Update Record
     * method for HUBSPOT_UPDATE_RECORD
     */
    updateRecord: (
      inputs: IntentToInputOutput['HUBSPOT_UPDATE_RECORD'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['HUBSPOT_UPDATE_RECORD'][0],
      IntentToInputOutput['HUBSPOT_UPDATE_RECORD'][1]
    >;

    /**
     * Get Records
     * method for HUBSPOT_GET_RECORDS
     */
    getRecords: (
      inputs: IntentToInputOutput['HUBSPOT_GET_RECORDS'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['HUBSPOT_GET_RECORDS'][0],
      IntentToInputOutput['HUBSPOT_GET_RECORDS'][1]
    >;

    /**
     * Get Record by ID
     * method for HUBSPOT_GET_RECORD_BY_ID
     */
    getRecordById: (
      inputs: IntentToInputOutput['HUBSPOT_GET_RECORD_BY_ID'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['HUBSPOT_GET_RECORD_BY_ID'][0],
      IntentToInputOutput['HUBSPOT_GET_RECORD_BY_ID'][1]
    >;

    /**
     * Search Records
     * method for HUBSPOT_SEARCH_RECORDS
     */
    searchRecords: (
      inputs: IntentToInputOutput['HUBSPOT_SEARCH_RECORDS'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['HUBSPOT_SEARCH_RECORDS'][0],
      IntentToInputOutput['HUBSPOT_SEARCH_RECORDS'][1]
    >;

    /**
     * Delete Record by ID
     * method for HUBSPOT_DELETE_RECORD
     */
    deleteRecord: (
      inputs: IntentToInputOutput['HUBSPOT_DELETE_RECORD'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['HUBSPOT_DELETE_RECORD'][0],
      IntentToInputOutput['HUBSPOT_DELETE_RECORD'][1]
    >;

    /**
     * Get Contacts by List ID
     * method for HUBSPOT_GET_CONTACTS_BY_LIST_ID
     */
    getContactsByListId: (
      inputs: IntentToInputOutput['HUBSPOT_GET_CONTACTS_BY_LIST_ID'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['HUBSPOT_GET_CONTACTS_BY_LIST_ID'][0],
      IntentToInputOutput['HUBSPOT_GET_CONTACTS_BY_LIST_ID'][1]
    >;
  };

  /**
   * trigger step methods
   */
  triggers: {
    /**
     * Record Created
     * method for HUBSPOT_TRIGGER_RECORD_CREATED
     */
    recordCreated: (
      inputs: TriggerIntentToInputOutput['HUBSPOT_TRIGGER_RECORD_CREATED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['HUBSPOT_TRIGGER_RECORD_CREATED'][0],
      TriggerIntentToInputOutput['HUBSPOT_TRIGGER_RECORD_CREATED'][1]
    >;

    /**
     * Record Updated
     * method for HUBSPOT_TRIGGER_RECORD_UPDATED
     */
    recordUpdated: (
      inputs: TriggerIntentToInputOutput['HUBSPOT_TRIGGER_RECORD_UPDATED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['HUBSPOT_TRIGGER_RECORD_UPDATED'][0],
      TriggerIntentToInputOutput['HUBSPOT_TRIGGER_RECORD_UPDATED'][1]
    >;

    /**
     * Record Deleted
     * method for HUBSPOT_TRIGGER_RECORD_DELETED
     */
    recordDeleted: (
      inputs: TriggerIntentToInputOutput['HUBSPOT_TRIGGER_RECORD_DELETED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['HUBSPOT_TRIGGER_RECORD_DELETED'][0],
      TriggerIntentToInputOutput['HUBSPOT_TRIGGER_RECORD_DELETED'][1]
    >;

    /**
     * Record Deleted for Privacy (GDPR)
     * method for HUBSPOT_TRIGGER_RECORD_DELETED_FOR_PRIVACY
     */
    recordDeletedForPrivacy: (
      inputs: TriggerIntentToInputOutput['HUBSPOT_TRIGGER_RECORD_DELETED_FOR_PRIVACY'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['HUBSPOT_TRIGGER_RECORD_DELETED_FOR_PRIVACY'][0],
      TriggerIntentToInputOutput['HUBSPOT_TRIGGER_RECORD_DELETED_FOR_PRIVACY'][1]
    >;
  };
};
