const { ActionStep, ActionTriggerStep } = require('@useparagon/core');

/**
 * this should be used whenever we are creating inputs for integrations/workflows
 */
exports.createInputs = (inputs) => inputs;

/**
 * inputs for facebookAds
 */
exports.inputs = [
  {
    id: 'pages',
    title: 'Page',
    type: 'DYNAMIC_DATA_SOURCE',
  },
  {
    id: 'pixels',
    title: 'Pixel',
    type: 'DYNAMIC_DATA_SOURCE',
  },
  {
    id: 'campaigns',
    title: 'Campaign',
    type: 'DYNAMIC_DATA_SOURCE',
  },
];

/**
 * triggers for facebookAds
 */
exports.triggers = [];

/**
 * intents for facebookAds
 */
exports.intents = [
  {
    title: 'Create Campaign',
    name: 'FACEBOOK_ADS_CREATE_CAMPAIGN',
    output: [],
    inputs: [
      {
        id: 'name',
        title: 'Name',
        type: 'TEXTAREA',
        subtitle: 'The name of the campaign.',
        required: true,
      },
      {
        id: 'objective',
        title: 'Objective',
        type: 'EDITABLE_ENUM',
        subtitle: 'Specify the objective for this campaign.',
        required: true,
        defaultValue: 'LINK_CLICKS',
        values: [
          'APP_INSTALLS',
          'BRAND_AWARENESS',
          'CONVERSIONS',
          'EVENT_RESPONSES',
          'LEAD_GENERATION',
          'LINK_CLICKS',
          'LOCAL_AWARENESS',
          'MESSAGES',
          'OFFER_CLAIMS',
          'PAGE_LIKES',
          'POST_ENGAGEMENT',
          'PRODUCT_CATALOG_SALES',
          'REACH',
          'STORE_VISITS',
          'VIDEO_VIEWS',
        ],
      },
      {
        id: 'status',
        title: 'Status',
        type: 'EDITABLE_ENUM',
        subtitle:
          'This value will default to Paused to prevent your test account from being billed while testing. Change this to Active for production uses.',
        required: true,
        defaultValue: 'PAUSED',
        values: ['PAUSED', 'ACTIVE'],
      },
    ],
  },
  {
    title: 'Update Campaign',
    name: 'FACEBOOK_ADS_UPDATE_CAMPAIGN',
    output: [],
    inputs: [
      {
        id: 'campaignId',
        title: 'Campaign ID',
        type: 'TEXTAREA',
        subtitle: 'The ID of the campaign to update.',
        required: true,
      },
      {
        id: 'name',
        title: 'Name',
        type: 'TEXTAREA',
        subtitle: 'The name of the campaign.',
      },
      {
        id: 'objective',
        title: 'Objective',
        type: 'EDITABLE_ENUM',
        subtitle: 'Specify the objective for this campaign.',
        defaultValue: 'LINK_CLICKS',
        values: [
          'APP_INSTALLS',
          'BRAND_AWARENESS',
          'CONVERSIONS',
          'EVENT_RESPONSES',
          'LEAD_GENERATION',
          'LINK_CLICKS',
          'LOCAL_AWARENESS',
          'MESSAGES',
          'OFFER_CLAIMS',
          'PAGE_LIKES',
          'POST_ENGAGEMENT',
          'PRODUCT_CATALOG_SALES',
          'REACH',
          'STORE_VISITS',
          'VIDEO_VIEWS',
        ],
      },
      {
        id: 'status',
        title: 'Status',
        type: 'EDITABLE_ENUM',
        subtitle:
          'This value will default to Paused to prevent your test account from being billed while testing. Change this to Active for production uses.',
        defaultValue: 'PAUSED',
        values: ['PAUSED', 'ACTIVE', 'ARCHIVED', 'DELETED'],
      },
    ],
  },
  {
    title: 'Get Campaigns',
    name: 'FACEBOOK_ADS_GET_CAMPAIGNS',
    output: [],
    inputs: [
      {
        id: 'effectiveStatus',
        title: 'Effective Status',
        type: 'TEXTAREA',
        placeholder: '["ACTIVE", "PAUSED"]',
      },
      {
        id: 'campaignFilterFormula',
        title: 'Filter search',
        type: 'CONDITIONAL',
        subtitle: 'Search for campaigns that match specified filters.',
        placeholder: 'field',
        supportedKeys: ['is_completed'],
        supportedOperators: [
          '$stringExactlyMatches',
          '$dateTimeEquals',
          '$stringContains',
          '$booleanFalse',
          '$booleanTrue',
        ],
      },
    ],
  },
  {
    title: 'Get Campaign by ID',
    name: 'FACEBOOK_ADS_GET_CAMPAIGN_BY_ID',
    output: [],
    inputs: [
      {
        id: 'campaignId',
        title: 'Campaign ID',
        type: 'TEXTAREA',
        subtitle: 'The ID of the campaign to get.',
        required: true,
      },
    ],
  },
  {
    title: 'Create Ad Set',
    name: 'FACEBOOK_ADS_CREATE_AD_SET',
    output: [],
    inputs: [
      {
        id: 'campaignId',
        title: 'Campaign ID',
        type: 'TEXTAREA',
        subtitle:
          'The ID of the campaign this ad set should be a part of. Use Connect Portal Workflow Settings to allow users to select a campaign.',
        required: true,
      },
      {
        id: 'name',
        title: 'Name',
        type: 'TEXTAREA',
        subtitle: 'The name of the ad set.',
        required: true,
      },
      {
        id: 'status',
        title: 'Status',
        type: 'EDITABLE_ENUM',
        subtitle:
          'This value will default to Paused to prevent your test account from being billed while testing. Change this to Active for production uses.',
        required: true,
        defaultValue: 'PAUSED',
        values: ['PAUSED', 'ACTIVE'],
      },
      {
        id: 'optimizationGoal',
        title: 'Optimization Goal',
        type: 'EDITABLE_ENUM',
        subtitle: 'Specify the optimization goal that this ad set will use.',
        required: true,
        defaultValue: 'LINK_CLICKS',
        values: [
          'APP_INSTALLS',
          'AD_RECALL_LIFT',
          'ENGAGED_USERS',
          'EVENT_RESPONSES',
          'IMPRESSIONS',
          'LEAD_GENERATION',
          'QUALITY_LEAD',
          'LINK_CLICKS',
          'OFFSITE_CONVERSIONS',
          'PAGE_LIKES',
          'POST_ENGAGEMENT',
          'QUALITY_CALL',
          'REACH',
          'LANDING_PAGE_VIEWS',
          'VISIT_INSTAGRAM_PROFILE',
          'VALUE',
          'VALUE_THROUGHPLAY',
          'DERIVED_EVENTS',
          'APP_INSTALLS_AND_OFFSITE_CONVERSIONS',
          'CONVERSIONS',
        ],
      },
      {
        id: 'billingEvent',
        title: 'Billing Event',
        type: 'EDITABLE_ENUM',
        subtitle: 'Specify the billing event that this ad set will use.',
        required: true,
        defaultValue: 'LINK_CLICKS',
        values: [
          'APP_INSTALLS',
          'CLICKS',
          'IMPRESSIONS',
          'LINK_CLICKS',
          'OFFER_CLAIMS',
          'PAGE_LIKES',
          'POST_ENGAGEMENT',
          'VIDEO_VIEWS',
          'VALUE_THROUGHPLAY',
        ],
      },
      {
        id: 'bidAmount',
        title: 'Bid Amount',
        type: 'TEXTAREA',
        subtitle:
          'Set a maximum bid you want to pay for a result based on this ad set’s optimization goal. Value is in cents, for your account’s local currency.',
        required: true,
      },
      {
        id: 'dailyBudget',
        title: 'Daily Budget',
        type: 'TEXTAREA',
        subtitle:
          'Set a daily budget for this ad set to use, in your account’s local currency.',
        required: true,
      },
      {
        id: 'startTime',
        title: 'Start Time',
        type: 'TEXTAREA',
        subtitle: 'Specify when this ad set should start running.',
        placeholder: '2021-01-01 12:00:00 AM',
        required: true,
      },
      {
        id: 'targeting',
        title: 'Targeting',
        type: 'CODE',
        subtitle:
          'Provide a Targeting spec to define the audience for this ad set.',
        placeholder:
          '{\n  "geo_locations": {"countries": ["US"]},\n  "interests": [{id: 6003139266461, \'name\': \'Movies\'}]\n}',
        required: true,
      },
      {
        id: 'promotedObject',
        title: 'Promoted Object',
        type: 'CODE',
        placeholder: '{\n  "page_id": "11111111111111111"\n}',
      },
    ],
  },
  {
    title: 'Update Ad Set',
    name: 'FACEBOOK_ADS_UPDATE_AD_SET',
    output: [],
    inputs: [
      {
        id: 'adSetId',
        title: 'Ad Set ID',
        type: 'TEXTAREA',
        subtitle: 'The ID of the ad set to update.',
        required: true,
      },
      {
        id: 'campaignId',
        title: 'Campaign ID',
        type: 'TEXTAREA',
        subtitle:
          'The ID of the campaign this ad set should be a part of. Use Connect Portal Workflow Settings to allow users to select a campaign.',
      },
      {
        id: 'name',
        title: 'Name',
        type: 'TEXTAREA',
        subtitle: 'The name of the ad set.',
      },
      {
        id: 'status',
        title: 'Status',
        type: 'EDITABLE_ENUM',
        subtitle:
          'This value will default to Paused to prevent your test account from being billed while testing. Change this to Active for production uses.',
        defaultValue: 'PAUSED',
        values: ['PAUSED', 'ACTIVE'],
      },
      {
        id: 'optimizationGoal',
        title: 'Optimization Goal',
        type: 'EDITABLE_ENUM',
        subtitle: 'Specify the optimization goal that this ad set will use.',
        defaultValue: 'LINK_CLICKS',
        values: [
          'APP_INSTALLS',
          'AD_RECALL_LIFT',
          'ENGAGED_USERS',
          'EVENT_RESPONSES',
          'IMPRESSIONS',
          'LEAD_GENERATION',
          'QUALITY_LEAD',
          'LINK_CLICKS',
          'OFFSITE_CONVERSIONS',
          'PAGE_LIKES',
          'POST_ENGAGEMENT',
          'QUALITY_CALL',
          'REACH',
          'LANDING_PAGE_VIEWS',
          'VISIT_INSTAGRAM_PROFILE',
          'VALUE',
          'VALUE_THROUGHPLAY',
          'DERIVED_EVENTS',
          'APP_INSTALLS_AND_OFFSITE_CONVERSIONS',
          'CONVERSIONS',
        ],
      },
      {
        id: 'billingEvent',
        title: 'Billing Event',
        type: 'EDITABLE_ENUM',
        subtitle: 'Specify the billing event that this ad set will use.',
        defaultValue: 'LINK_CLICKS',
        values: [
          'APP_INSTALLS',
          'CLICKS',
          'IMPRESSIONS',
          'LINK_CLICKS',
          'OFFER_CLAIMS',
          'PAGE_LIKES',
          'POST_ENGAGEMENT',
          'VIDEO_VIEWS',
          'VALUE_THROUGHPLAY',
        ],
      },
      {
        id: 'bidAmount',
        title: 'Bid Amount',
        type: 'TEXTAREA',
        subtitle:
          'Set a maximum bid you want to pay for a result based on this ad set’s optimization goal. Value is in cents, for your account’s local currency.',
      },
      {
        id: 'dailyBudget',
        title: 'Daily Budget',
        type: 'TEXTAREA',
        subtitle:
          'Set a daily budget for this ad set to use, in your account’s local currency.',
      },
      {
        id: 'startTime',
        title: 'Start Time',
        type: 'TEXTAREA',
        subtitle: 'Specify when this ad set should start running.',
        placeholder: '2021-01-01 12:00:00 AM',
      },
      {
        id: 'targeting',
        title: 'Targeting',
        type: 'CODE',
        subtitle:
          'Provide a Targeting spec to define the audience for this ad set.',
        placeholder:
          '{\n  "geo_locations": {"countries": ["US"]},\n  "interests": [{id: 6003139266461, \'name\': \'Movies\'}]\n}',
      },
    ],
  },
  {
    title: 'Get Ad Sets',
    name: 'FACEBOOK_ADS_GET_AD_SETS',
    output: [],
    inputs: [
      {
        id: 'effectiveStatus',
        title: 'Effective Status',
        type: 'TEXTAREA',
        placeholder: '["ACTIVE", "PAUSED"]',
      },
      {
        id: 'adSetFilterFormula',
        title: 'Filter search',
        type: 'CONDITIONAL',
        subtitle: 'Search for ad sets that match specified filters.',
        placeholder: 'field',
        supportedKeys: ['is_completed'],
        supportedOperators: [
          '$stringExactlyMatches',
          '$dateTimeEquals',
          '$stringContains',
          '$booleanFalse',
          '$booleanTrue',
        ],
      },
    ],
  },
  {
    title: 'Get Ad Set by ID',
    name: 'FACEBOOK_ADS_GET_AD_SET_BY_ID',
    output: [],
    inputs: [
      {
        id: 'adSetId',
        title: 'Ad Set ID',
        type: 'TEXTAREA',
        subtitle: 'The ID of the ad set to get.',
        required: true,
      },
    ],
  },
  {
    title: 'Create Ad',
    name: 'FACEBOOK_ADS_CREATE_AD',
    output: [],
    inputs: [
      {
        id: 'name',
        title: 'Name',
        type: 'TEXTAREA',
        subtitle: 'Specify a name for this ad.',
        required: true,
      },
      {
        id: 'status',
        title: 'Status',
        type: 'EDITABLE_ENUM',
        subtitle:
          'This value will default to Paused to prevent your test account from being billed while testing. Change this to Active for production uses.',
        required: true,
        defaultValue: 'PAUSED',
        values: ['PAUSED', 'ACTIVE', 'ARCHIVED', 'DELETED'],
      },
      {
        id: 'adSetId',
        title: 'Ad Set ID',
        type: 'TEXTAREA',
        subtitle: 'The ID of the ad set to create this ad for.',
        required: true,
      },
      {
        id: 'adCreativeId',
        title: 'Ad Creative ID',
        type: 'TEXTAREA',
        subtitle: 'The ID of the ad creative to use for this ad.',
        required: true,
      },
    ],
  },
  {
    title: 'Update Ad',
    name: 'FACEBOOK_ADS_UPDATE_AD',
    output: [],
    inputs: [
      {
        id: 'adId',
        title: 'Ad ID',
        type: 'TEXTAREA',
        subtitle: 'The ID of the ad to update.',
        required: true,
      },
      {
        id: 'name',
        title: 'Name',
        type: 'TEXTAREA',
        subtitle: 'Specify a name for this ad.',
      },
      {
        id: 'status',
        title: 'Status',
        type: 'EDITABLE_ENUM',
        subtitle:
          'This value will default to Paused to prevent your test account from being billed while testing. Change this to Active for production uses.',
        defaultValue: 'PAUSED',
        values: ['PAUSED', 'ACTIVE', 'ARCHIVED', 'DELETED'],
      },
      {
        id: 'adCreativeId',
        title: 'Ad Creative ID',
        type: 'TEXTAREA',
        subtitle: 'The ID of the ad creative to use for this ad.',
      },
    ],
  },
  {
    title: 'Get Ad by ID',
    name: 'FACEBOOK_ADS_GET_AD_BY_ID',
    output: [],
    inputs: [
      {
        id: 'adId',
        title: 'Ad ID',
        type: 'TEXTAREA',
        subtitle: 'The ID of the ad to get.',
        required: true,
      },
    ],
  },
  {
    title: 'Build Ad Creative Object',
    name: 'FACEBOOK_ADS_BUILD_AD_CREATIVE_OBJECT',
    output: [],
    inputs: [
      {
        id: 'adCreativeType',
        title: 'Type',
        type: 'ENUM',
        subtitle: 'Select a type of ad creative to build.',
        required: true,
        defaultValue: 'IMAGE',
        values: [
          {
            value: 'IMAGE',
            dependentInputs: [
              {
                id: 'imageURL',
                title: 'Image URL',
                type: 'TEXTAREA',
                subtitle:
                  'This image will be uploaded to your ad account’s image library.',
                placeholder: 'https://example.com/ad.png',
                required: true,
              },
              {
                id: 'linkURL',
                title: 'Link URL',
                type: 'TEXTAREA',
                subtitle: 'The URL used for the CTA in this ad.',
                placeholder: 'https://example.com/promo',
                required: true,
              },
              {
                id: 'linkTitle',
                title: 'Link Title',
                type: 'TEXTAREA',
                subtitle: 'A title to use for the link of your ad.',
              },
              {
                id: 'linkDescription',
                title: 'Link Description',
                type: 'TEXTAREA',
                subtitle: 'A description to use for the link of your ad.',
              },
              {
                id: 'message',
                title: 'Message',
                type: 'TEXTAREA',
                subtitle: 'The body of the post included with the image.',
              },
              {
                id: 'additionalField',
                title: 'Additional Fields',
                type: 'CODE',
                placeholder:
                  '{\n  "call_to_action": { ... },\n  "child_attachments": [{ ... }]\n}',
                required: true,
              },
            ],
          },
          {
            value: 'TEXT',
            dependentInputs: [
              {
                id: 'message',
                title: 'Message',
                type: 'TEXTAREA',
                subtitle: 'The body of the post included with the image.',
                required: true,
              },
              {
                id: 'linkURL',
                title: 'Link URL',
                type: 'TEXTAREA',
                subtitle: 'The URL used for the CTA in this ad.',
                placeholder: 'https://example.com/promo',
                required: true,
              },
              {
                id: 'linkTitle',
                title: 'Link Title',
                type: 'TEXTAREA',
                subtitle: 'A title to use for the link of your ad.',
              },
              {
                id: 'linkDescription',
                title: 'Link Description',
                type: 'TEXTAREA',
                subtitle: 'A description to use for the link of your ad.',
              },
              {
                id: 'additionalField',
                title: 'Additional Fields',
                type: 'CODE',
                placeholder:
                  '{\n  "call_to_action": { ... },\n  "child_attachments": [{ ... }]\n}',
                required: true,
              },
            ],
          },
          {
            value: 'LINK',
            dependentInputs: [
              {
                id: 'linkURL',
                title: 'Link URL',
                type: 'TEXTAREA',
                subtitle: 'The URL used for the CTA in this ad.',
                placeholder: 'https://example.com/promo',
                required: true,
              },
              {
                id: 'linkTitle',
                title: 'Link Title',
                type: 'TEXTAREA',
                subtitle: 'A title to use for the link of your ad.',
              },
              {
                id: 'linkDescription',
                title: 'Link Description',
                type: 'TEXTAREA',
                subtitle: 'A description to use for the link of your ad.',
              },
              {
                id: 'additionalField',
                title: 'Additional Fields',
                type: 'CODE',
                placeholder:
                  '{\n  "call_to_action": { ... },\n  "child_attachments": [{ ... }]\n}',
                required: true,
              },
            ],
          },
          {
            value: 'LEAD_GEN_FORM_ID',
            dependentInputs: [
              {
                id: 'leadGenFormId',
                title: 'Lead Gen Form ID',
                type: 'TEXTAREA',
                subtitle:
                  'The ID of the lead gen form to use with this creative. ',
                required: true,
              },
              {
                id: 'callToActionType',
                title: 'Call to Action Type',
                type: 'EDITABLE_ENUM',
                defaultValue: 'SIGN_UP',
                values: [
                  'APPLY_NOW',
                  'DOWNLOAD',
                  'GET_QUOTE',
                  'LEARN_MORE',
                  'SIGN_UP',
                  'SUBSCRIBE',
                ],
              },
              {
                id: 'linkURL',
                title: 'Link URL',
                type: 'TEXTAREA',
                subtitle: 'The URL used for the CTA in this ad.',
                placeholder: 'https://example.com/promo',
                required: true,
              },
              {
                id: 'linkTitle',
                title: 'Link Title',
                type: 'TEXTAREA',
                subtitle: 'A title to use for the link of your ad.',
              },
              {
                id: 'linkDescription',
                title: 'Link Description',
                type: 'TEXTAREA',
                subtitle: 'A description to use for the link of your ad.',
              },
              {
                id: 'additionalField',
                title: 'Additional Fields',
                type: 'CODE',
                placeholder:
                  '{\n  "call_to_action": { ... },\n  "child_attachments": [{ ... }]\n}',
                required: true,
              },
            ],
          },
        ],
      },
    ],
  },
  {
    title: 'Create Ad Creative',
    name: 'FACEBOOK_ADS_CREATE_AD_CREATIVE',
    output: [],
    inputs: [
      {
        id: 'name',
        title: 'Name',
        type: 'TEXTAREA',
        subtitle:
          'The name of the ad creative, which appears in the ad account’s library. This field is required.',
        required: true,
      },
      {
        id: 'page',
        title: 'Page',
        type: 'TEXTAREA',
        subtitle:
          'The Facebook Page that the creative will be uploaded for. Use Connect Portal Workflow Settings to allow users to select a page.',
        placeholder: '{{settings.page}}',
        required: true,
      },
      {
        id: 'adCreativeJson',
        title: 'Ad Creative JSON',
        type: 'CODE',
        subtitle:
          'Use the Build Ad Creative Object step to generate an object to use as a creative.',
        placeholder: '{\n  "link_data": {...},\n  "text_data": {...},\n}',
        required: true,
      },
    ],
  },
  {
    title: 'Create Lead Gen Form',
    name: 'FACEBOOK_ADS_CREATE_LEAD_GEN_FORM',
    output: [],
    inputs: [
      {
        id: 'name',
        title: 'Name',
        type: 'TEXTAREA',
        required: true,
      },
      {
        id: 'page',
        title: 'Page',
        type: 'TEXTAREA',
        subtitle:
          'The Facebook Page that the creative will be uploaded for. Use Connect Portal Workflow Settings to allow users to select a page.',
        placeholder: '{{settings.page}}',
        required: true,
      },
      {
        id: 'followUpActionText',
        title: 'Follow Up Action Text',
        type: 'TEXTAREA',
        subtitle:
          'The displayed label on the follow up action when the user completes the form.',
        required: true,
      },
      {
        id: 'followUpActionUrl',
        title: 'Follow-up Action URL',
        type: 'TEXTAREA',
        subtitle:
          'Set a destination for the Follow Up Action Text when clicked.',
        required: true,
      },
      {
        id: 'privacyPolicyUrl',
        title: 'Privacy Policy URL',
        type: 'TEXTAREA',
        subtitle: 'Set a destination for the Privacy Policy.',
        required: true,
      },
      {
        id: 'contextCard',
        title: 'Form Greeting/Context Card JSON',
        type: 'CODE',
        placeholder:
          '{\n  "title": "",\n  "style": "PARAGRAPH_STYLE",\n  "content": {}\n}',
      },
      {
        id: 'questionJson',
        title: 'Questions JSON',
        type: 'CODE',
        placeholder:
          '[\n    { "type": "EMAIL" },\n    { "type": "CUSTOM" }\n  ]',
        required: true,
      },
    ],
  },
  {
    title: 'Send Purchase Event',
    name: 'FACEBOOK_ADS_SEND_PURCHASE_EVENT',
    output: [],
    inputs: [
      {
        id: 'actionSource',
        title: 'Action Source',
        type: 'EDITABLE_ENUM',
        required: true,
        values: [
          'website',
          'chat',
          'app',
          'email',
          'phone_call',
          'system_generated',
          'other',
        ],
      },
      {
        id: 'pixel',
        title: 'Pixel',
        type: 'TEXTAREA',
        subtitle:
          'The Facebook Pixel that will receive the event. Use Connect Portal Workflow Settings to allow users to select a pixel.',
        placeholder: '{{settings.pixel}}',
        required: true,
      },
      {
        id: 'eventTime',
        title: 'Event Time',
        type: 'TEXTAREA',
        subtitle:
          'Time when the event occurred (ISO 8601 timestamp). Defaults to the time of the workflow execution if left blank',
        placeholder: '2020-03-31T12:02:00Z',
      },
      {
        id: 'eventId',
        title: 'Event ID',
        type: 'TEXTAREA',
        subtitle:
          'Used to remove duplicates when sending the same event from more than one source.',
      },
      {
        id: 'eventSourceUrl',
        title: 'Event Source URL',
        type: 'TEXTAREA',
        subtitle:
          'The URL where the event occurred. Required if the Action Source is Website.',
      },
      {
        id: 'customerEmail',
        title: 'Customer Email',
        type: 'TEXTAREA',
        subtitle:
          'The email of the customer associated with the event, so they can be matched to a Facebook account and used for ads attribution and delivery optimization.',
      },
      {
        id: 'customerFirstName',
        title: 'Customer first name',
        type: 'TEXTAREA',
      },
      {
        id: 'customerLastName',
        title: 'Customer last name',
        type: 'TEXTAREA',
      },
      {
        id: 'customerCity',
        title: 'Customer city',
        type: 'TEXTAREA',
      },
      {
        id: 'customerState',
        title: 'Customer state',
        type: 'TEXTAREA',
      },
      {
        id: 'customerCountryCode',
        title: 'Customer country code',
        type: 'TEXTAREA',
      },
      {
        id: 'customerExternalId',
        title: 'Customer External ID',
        type: 'TEXTAREA',
        subtitle:
          'A custom ID for the prospect, often referencing an ID in an external system.',
      },
      {
        id: 'customerClientIpAddress',
        title: 'Customer client IP address',
        type: 'TEXTAREA',
        subtitle: 'The IP address of the browser corresponding to the event.',
      },
      {
        id: 'customerClientUserAgent',
        title: 'Customer client user agent',
        type: 'TEXTAREA',
        subtitle: 'The user agent for the browser corresponding to the event.',
      },
      {
        id: 'clickId',
        title: 'Click ID (fbc)',
        type: 'TEXTAREA',
        subtitle:
          'The Facebook click ID value stored in the _fbc browser cookie.',
      },
      {
        id: 'browserId',
        title: 'Browser ID (fbc)',
        type: 'TEXTAREA',
        subtitle:
          'The Facebook browser ID value stored in the _fbp browser cookie.',
      },
      {
        id: 'value',
        title: 'Value',
        type: 'TEXTAREA',
        subtitle:
          'A numeric value associated with this event. This could be a monetary value or a value in some other metric.',
      },
      {
        id: 'currency',
        title: 'Currency',
        type: 'TEXTAREA',
        subtitle:
          "The currency for the value specified, if applicable. Currency must be a valid ISO 4217 three digit currency code. Example: 'USD'",
      },
      {
        id: 'contentId',
        title: 'Content ID',
        type: 'TEXTAREA',
        subtitle:
          'The content IDs associated with the event, such as product SKUs for items in an AddToCart event. Accepts an array of IDs.',
        placeholder: "['ABC123', 'XYZ789']",
      },
      {
        id: 'contentName',
        title: 'Content Name',
        type: 'TEXTAREA',
        subtitle: 'The name of the page or product associated with the event.',
        placeholder: 'Lettuce',
      },
      {
        id: 'contentCategory',
        title: 'Content Category',
        type: 'TEXTAREA',
        subtitle: 'The category of the content associated with the event.',
        placeholder: 'Grocery',
      },
    ],
  },
  {
    title: 'Send Lead Event',
    name: 'FACEBOOK_ADS_SEND_LEAD_EVENT',
    output: [],
    inputs: [
      {
        id: 'actionSource',
        title: 'Action Source',
        type: 'EDITABLE_ENUM',
        required: true,
        values: [
          'website',
          'chat',
          'app',
          'email',
          'phone_call',
          'system_generated',
          'other',
        ],
      },
      {
        id: 'pixel',
        title: 'Pixel',
        type: 'TEXTAREA',
        subtitle:
          'The Facebook Pixel that will receive the event. Use Connect Portal Workflow Settings to allow users to select a pixel.',
        placeholder: '{{settings.pixel}}',
        required: true,
      },
      {
        id: 'eventTime',
        title: 'Event Time',
        type: 'TEXTAREA',
        subtitle:
          'Time when the event occurred (ISO 8601 timestamp). Defaults to the time of the workflow execution if left blank',
        placeholder: '2020-03-31T12:02:00Z',
      },
      {
        id: 'eventId',
        title: 'Event ID',
        type: 'TEXTAREA',
        subtitle:
          'Used to remove duplicates when sending the same event from more than one source.',
      },
      {
        id: 'eventSourceUrl',
        title: 'Event Source URL',
        type: 'TEXTAREA',
        subtitle:
          'The URL where the event occurred. Required if the Action Source is Website.',
      },
      {
        id: 'customerEmail',
        title: 'Customer Email',
        type: 'TEXTAREA',
        subtitle:
          'The email of the customer associated with the event, so they can be matched to a Facebook account and used for ads attribution and delivery optimization.',
      },
      {
        id: 'customerFirstName',
        title: 'Customer first name',
        type: 'TEXTAREA',
      },
      {
        id: 'customerLastName',
        title: 'Customer last name',
        type: 'TEXTAREA',
      },
      {
        id: 'customerCity',
        title: 'Customer city',
        type: 'TEXTAREA',
      },
      {
        id: 'customerState',
        title: 'Customer state',
        type: 'TEXTAREA',
      },
      {
        id: 'customerCountryCode',
        title: 'Customer country code',
        type: 'TEXTAREA',
      },
      {
        id: 'customerExternalId',
        title: 'Customer External ID',
        type: 'TEXTAREA',
        subtitle:
          'A custom ID for the prospect, often referencing an ID in an external system.',
      },
      {
        id: 'customerClientIpAddress',
        title: 'Customer client IP address',
        type: 'TEXTAREA',
        subtitle: 'The IP address of the browser corresponding to the event.',
      },
      {
        id: 'customerClientUserAgent',
        title: 'Customer client user agent',
        type: 'TEXTAREA',
        subtitle: 'The user agent for the browser corresponding to the event.',
      },
      {
        id: 'clickId',
        title: 'Click ID (fbc)',
        type: 'TEXTAREA',
        subtitle:
          'The Facebook click ID value stored in the _fbc browser cookie.',
      },
      {
        id: 'browserId',
        title: 'Browser ID (fbc)',
        type: 'TEXTAREA',
        subtitle:
          'The Facebook browser ID value stored in the _fbp browser cookie.',
      },
      {
        id: 'contentId',
        title: 'Content ID',
        type: 'TEXTAREA',
        subtitle:
          'The content IDs associated with the event, such as product SKUs for items in an AddToCart event. Accepts an array of IDs.',
        placeholder: "['ABC123', 'XYZ789']",
      },
      {
        id: 'contentName',
        title: 'Content Name',
        type: 'TEXTAREA',
        subtitle: 'The name of the page or product associated with the event.',
        placeholder: 'Lettuce',
      },
      {
        id: 'contentCategory',
        title: 'Content Category',
        type: 'TEXTAREA',
        subtitle: 'The category of the content associated with the event.',
        placeholder: 'Grocery',
      },
    ],
  },
  {
    title: 'Send Funnel Event',
    name: 'FACEBOOK_ADS_SEND_FUNNEL_EVENT',
    output: [],
    inputs: [
      {
        id: 'eventName',
        title: 'Event Name',
        type: 'TEXTAREA',
        required: true,
      },
      {
        id: 'actionSource',
        title: 'Action Source',
        type: 'EDITABLE_ENUM',
        required: true,
        values: [
          'website',
          'chat',
          'app',
          'email',
          'phone_call',
          'system_generated',
          'other',
        ],
      },
      {
        id: 'pixel',
        title: 'Pixel',
        type: 'TEXTAREA',
        subtitle:
          'The Facebook Pixel that will receive the event. Use Connect Portal Workflow Settings to allow users to select a pixel.',
        placeholder: '{{settings.pixel}}',
        required: true,
      },
      {
        id: 'eventTime',
        title: 'Event Time',
        type: 'TEXTAREA',
        subtitle:
          'Time when the event occurred (ISO 8601 timestamp). Defaults to the time of the workflow execution if left blank',
        placeholder: '2020-03-31T12:02:00Z',
      },
      {
        id: 'eventId',
        title: 'Event ID',
        type: 'TEXTAREA',
        subtitle:
          'Used to remove duplicates when sending the same event from more than one source.',
      },
      {
        id: 'eventSourceUrl',
        title: 'Event Source URL',
        type: 'TEXTAREA',
        subtitle:
          'The URL where the event occurred. Required if the Action Source is Website.',
      },
      {
        id: 'customerEmail',
        title: 'Customer Email',
        type: 'TEXTAREA',
        subtitle:
          'The email of the customer associated with the event, so they can be matched to a Facebook account and used for ads attribution and delivery optimization.',
      },
      {
        id: 'customerFirstName',
        title: 'Customer first name',
        type: 'TEXTAREA',
      },
      {
        id: 'customerLastName',
        title: 'Customer last name',
        type: 'TEXTAREA',
      },
      {
        id: 'customerCity',
        title: 'Customer city',
        type: 'TEXTAREA',
      },
      {
        id: 'customerState',
        title: 'Customer state',
        type: 'TEXTAREA',
      },
      {
        id: 'customerCountryCode',
        title: 'Customer country code',
        type: 'TEXTAREA',
      },
      {
        id: 'customerExternalId',
        title: 'Customer External ID',
        type: 'TEXTAREA',
        subtitle:
          'A custom ID for the prospect, often referencing an ID in an external system.',
      },
      {
        id: 'customerClientIpAddress',
        title: 'Customer client IP address',
        type: 'TEXTAREA',
        subtitle: 'The IP address of the browser corresponding to the event.',
      },
      {
        id: 'customerClientUserAgent',
        title: 'Customer client user agent',
        type: 'TEXTAREA',
        subtitle: 'The user agent for the browser corresponding to the event.',
      },
      {
        id: 'clickId',
        title: 'Click ID (fbc)',
        type: 'TEXTAREA',
        subtitle:
          'The Facebook click ID value stored in the _fbc browser cookie.',
      },
      {
        id: 'browserId',
        title: 'Browser ID (fbc)',
        type: 'TEXTAREA',
        subtitle:
          'The Facebook browser ID value stored in the _fbp browser cookie.',
      },
      {
        id: 'contentId',
        title: 'Content ID',
        type: 'TEXTAREA',
        subtitle:
          'The content IDs associated with the event, such as product SKUs for items in an AddToCart event. Accepts an array of IDs.',
        placeholder: "['ABC123', 'XYZ789']",
      },
      {
        id: 'contentName',
        title: 'Content Name',
        type: 'TEXTAREA',
        subtitle: 'The name of the page or product associated with the event.',
        placeholder: 'Lettuce',
      },
      {
        id: 'contentCategory',
        title: 'Content Category',
        type: 'TEXTAREA',
        subtitle: 'The category of the content associated with the event.',
        placeholder: 'Grocery',
      },
    ],
  },
];

/**
 * integration class for facebookAds
 */
exports.integration = {
  /**
   * name of integration
   */
  name: 'facebookAds',

  /**
   * action step methods
   */
  actions: {
    /**
     * Create Campaign
     * method for FACEBOOK_ADS_CREATE_CAMPAIGN
     */
    facebookAdsCreateCampaign: (inputs, options) => {
      return new ActionStep({
        intent: 'FACEBOOK_ADS_CREATE_CAMPAIGN',
        actionType: 'facebookAds',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Update Campaign
     * method for FACEBOOK_ADS_UPDATE_CAMPAIGN
     */
    facebookAdsUpdateCampaign: (inputs, options) => {
      return new ActionStep({
        intent: 'FACEBOOK_ADS_UPDATE_CAMPAIGN',
        actionType: 'facebookAds',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Campaigns
     * method for FACEBOOK_ADS_GET_CAMPAIGNS
     */
    facebookAdsGetCampaigns: (inputs, options) => {
      return new ActionStep({
        intent: 'FACEBOOK_ADS_GET_CAMPAIGNS',
        actionType: 'facebookAds',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Campaign by ID
     * method for FACEBOOK_ADS_GET_CAMPAIGN_BY_ID
     */
    facebookAdsGetCampaignById: (inputs, options) => {
      return new ActionStep({
        intent: 'FACEBOOK_ADS_GET_CAMPAIGN_BY_ID',
        actionType: 'facebookAds',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Create Ad Set
     * method for FACEBOOK_ADS_CREATE_AD_SET
     */
    facebookAdsCreateAdSet: (inputs, options) => {
      return new ActionStep({
        intent: 'FACEBOOK_ADS_CREATE_AD_SET',
        actionType: 'facebookAds',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Update Ad Set
     * method for FACEBOOK_ADS_UPDATE_AD_SET
     */
    facebookAdsUpdateAdSet: (inputs, options) => {
      return new ActionStep({
        intent: 'FACEBOOK_ADS_UPDATE_AD_SET',
        actionType: 'facebookAds',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Ad Sets
     * method for FACEBOOK_ADS_GET_AD_SETS
     */
    facebookAdsGetAdSets: (inputs, options) => {
      return new ActionStep({
        intent: 'FACEBOOK_ADS_GET_AD_SETS',
        actionType: 'facebookAds',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Ad Set by ID
     * method for FACEBOOK_ADS_GET_AD_SET_BY_ID
     */
    facebookAdsGetAdSetById: (inputs, options) => {
      return new ActionStep({
        intent: 'FACEBOOK_ADS_GET_AD_SET_BY_ID',
        actionType: 'facebookAds',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Create Ad
     * method for FACEBOOK_ADS_CREATE_AD
     */
    facebookAdsCreateAd: (inputs, options) => {
      return new ActionStep({
        intent: 'FACEBOOK_ADS_CREATE_AD',
        actionType: 'facebookAds',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Update Ad
     * method for FACEBOOK_ADS_UPDATE_AD
     */
    facebookAdsUpdateAd: (inputs, options) => {
      return new ActionStep({
        intent: 'FACEBOOK_ADS_UPDATE_AD',
        actionType: 'facebookAds',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Ad by ID
     * method for FACEBOOK_ADS_GET_AD_BY_ID
     */
    facebookAdsGetAdById: (inputs, options) => {
      return new ActionStep({
        intent: 'FACEBOOK_ADS_GET_AD_BY_ID',
        actionType: 'facebookAds',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Build Ad Creative Object
     * method for FACEBOOK_ADS_BUILD_AD_CREATIVE_OBJECT
     */
    facebookAdsBuildAdCreativeObject: (inputs, options) => {
      return new ActionStep({
        intent: 'FACEBOOK_ADS_BUILD_AD_CREATIVE_OBJECT',
        actionType: 'facebookAds',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Create Ad Creative
     * method for FACEBOOK_ADS_CREATE_AD_CREATIVE
     */
    facebookAdsCreateAdCreative: (inputs, options) => {
      return new ActionStep({
        intent: 'FACEBOOK_ADS_CREATE_AD_CREATIVE',
        actionType: 'facebookAds',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Create Lead Gen Form
     * method for FACEBOOK_ADS_CREATE_LEAD_GEN_FORM
     */
    facebookAdsCreateLeadGenForm: (inputs, options) => {
      return new ActionStep({
        intent: 'FACEBOOK_ADS_CREATE_LEAD_GEN_FORM',
        actionType: 'facebookAds',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Send Purchase Event
     * method for FACEBOOK_ADS_SEND_PURCHASE_EVENT
     */
    facebookAdsSendPurchaseEvent: (inputs, options) => {
      return new ActionStep({
        intent: 'FACEBOOK_ADS_SEND_PURCHASE_EVENT',
        actionType: 'facebookAds',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Send Lead Event
     * method for FACEBOOK_ADS_SEND_LEAD_EVENT
     */
    facebookAdsSendLeadEvent: (inputs, options) => {
      return new ActionStep({
        intent: 'FACEBOOK_ADS_SEND_LEAD_EVENT',
        actionType: 'facebookAds',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Send Funnel Event
     * method for FACEBOOK_ADS_SEND_FUNNEL_EVENT
     */
    facebookAdsSendFunnelEvent: (inputs, options) => {
      return new ActionStep({
        intent: 'FACEBOOK_ADS_SEND_FUNNEL_EVENT',
        actionType: 'facebookAds',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
  },

  /**
   * trigger step methods
   */
  triggers: {},
};
