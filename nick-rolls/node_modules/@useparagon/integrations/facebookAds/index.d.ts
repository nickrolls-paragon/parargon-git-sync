import { ActionStep } from '@useparagon/core';
import {
  CustomDropdownField,
  DynamicMappingField,
} from '@useparagon/core/inputs';
import { IntegrationOptions } from '@useparagon/core/integration';

import { IntentToInputOutput } from './intents';

type IFacebookAdsIntegrationUserDefinedInput = {
  id: string;
  title: string;
  required?: boolean;
  tooltip?: string;
} & (
  | {
      type:
        | 'text'
        | 'number'
        | 'email'
        | 'url'
        | 'boolean'
        | 'password'
        | 'page'
        | 'pixel'
        | 'campaign';
    }
  | {
      type: 'custom_dropdown';
      key: string;
      customDropdownOptions?: CustomDropdownField[];
    }
  | {
      type: 'custom_field_mapping';
      objectName: string;
      // these object types values will be used in preview portal
      mockObjectTypes?: DynamicMappingField[];
      // these integration fields values will be used in preview portal
      mockIntegrationFields?: DynamicMappingField[];
    }
);

/**
 * map b/w input type to result
 */
export type InputResultMap = {
  email: string;
  url: string;
  password: string;
  boolean: boolean;
  text: string;
  number: number;
  custom_dropdown: string;
  custom_field_mapping: {
    object: string;
    fields: Record<string, any>;
  };
  page: string;
  pixel: string;
  campaign: string;
};

/**
 * pass { variableName for input => Input }
 * this should be used whenever we are creating inputs for integrations/workflows
 * as it will infer proper types
 */
export declare const createInputs: <
  T extends Record<string, IFacebookAdsIntegrationUserDefinedInput>,
>(
  inputs: T,
) => T;

/**
 * integration type for facebookAds
 */
export type IFacebookAdsIntegration = {
  /**
   * name of integration
   */
  name: string;

  /**
   * action step methods
   */
  actions: {
    /**
     * Create Campaign
     * method for FACEBOOK_ADS_CREATE_CAMPAIGN
     */
    facebookAdsCreateCampaign: (
      inputs: IntentToInputOutput['FACEBOOK_ADS_CREATE_CAMPAIGN'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['FACEBOOK_ADS_CREATE_CAMPAIGN'][0],
      IntentToInputOutput['FACEBOOK_ADS_CREATE_CAMPAIGN'][1]
    >;

    /**
     * Update Campaign
     * method for FACEBOOK_ADS_UPDATE_CAMPAIGN
     */
    facebookAdsUpdateCampaign: (
      inputs: IntentToInputOutput['FACEBOOK_ADS_UPDATE_CAMPAIGN'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['FACEBOOK_ADS_UPDATE_CAMPAIGN'][0],
      IntentToInputOutput['FACEBOOK_ADS_UPDATE_CAMPAIGN'][1]
    >;

    /**
     * Get Campaigns
     * method for FACEBOOK_ADS_GET_CAMPAIGNS
     */
    facebookAdsGetCampaigns: (
      inputs: IntentToInputOutput['FACEBOOK_ADS_GET_CAMPAIGNS'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['FACEBOOK_ADS_GET_CAMPAIGNS'][0],
      IntentToInputOutput['FACEBOOK_ADS_GET_CAMPAIGNS'][1]
    >;

    /**
     * Get Campaign by ID
     * method for FACEBOOK_ADS_GET_CAMPAIGN_BY_ID
     */
    facebookAdsGetCampaignById: (
      inputs: IntentToInputOutput['FACEBOOK_ADS_GET_CAMPAIGN_BY_ID'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['FACEBOOK_ADS_GET_CAMPAIGN_BY_ID'][0],
      IntentToInputOutput['FACEBOOK_ADS_GET_CAMPAIGN_BY_ID'][1]
    >;

    /**
     * Create Ad Set
     * method for FACEBOOK_ADS_CREATE_AD_SET
     */
    facebookAdsCreateAdSet: (
      inputs: IntentToInputOutput['FACEBOOK_ADS_CREATE_AD_SET'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['FACEBOOK_ADS_CREATE_AD_SET'][0],
      IntentToInputOutput['FACEBOOK_ADS_CREATE_AD_SET'][1]
    >;

    /**
     * Update Ad Set
     * method for FACEBOOK_ADS_UPDATE_AD_SET
     */
    facebookAdsUpdateAdSet: (
      inputs: IntentToInputOutput['FACEBOOK_ADS_UPDATE_AD_SET'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['FACEBOOK_ADS_UPDATE_AD_SET'][0],
      IntentToInputOutput['FACEBOOK_ADS_UPDATE_AD_SET'][1]
    >;

    /**
     * Get Ad Sets
     * method for FACEBOOK_ADS_GET_AD_SETS
     */
    facebookAdsGetAdSets: (
      inputs: IntentToInputOutput['FACEBOOK_ADS_GET_AD_SETS'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['FACEBOOK_ADS_GET_AD_SETS'][0],
      IntentToInputOutput['FACEBOOK_ADS_GET_AD_SETS'][1]
    >;

    /**
     * Get Ad Set by ID
     * method for FACEBOOK_ADS_GET_AD_SET_BY_ID
     */
    facebookAdsGetAdSetById: (
      inputs: IntentToInputOutput['FACEBOOK_ADS_GET_AD_SET_BY_ID'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['FACEBOOK_ADS_GET_AD_SET_BY_ID'][0],
      IntentToInputOutput['FACEBOOK_ADS_GET_AD_SET_BY_ID'][1]
    >;

    /**
     * Create Ad
     * method for FACEBOOK_ADS_CREATE_AD
     */
    facebookAdsCreateAd: (
      inputs: IntentToInputOutput['FACEBOOK_ADS_CREATE_AD'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['FACEBOOK_ADS_CREATE_AD'][0],
      IntentToInputOutput['FACEBOOK_ADS_CREATE_AD'][1]
    >;

    /**
     * Update Ad
     * method for FACEBOOK_ADS_UPDATE_AD
     */
    facebookAdsUpdateAd: (
      inputs: IntentToInputOutput['FACEBOOK_ADS_UPDATE_AD'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['FACEBOOK_ADS_UPDATE_AD'][0],
      IntentToInputOutput['FACEBOOK_ADS_UPDATE_AD'][1]
    >;

    /**
     * Get Ad by ID
     * method for FACEBOOK_ADS_GET_AD_BY_ID
     */
    facebookAdsGetAdById: (
      inputs: IntentToInputOutput['FACEBOOK_ADS_GET_AD_BY_ID'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['FACEBOOK_ADS_GET_AD_BY_ID'][0],
      IntentToInputOutput['FACEBOOK_ADS_GET_AD_BY_ID'][1]
    >;

    /**
     * Build Ad Creative Object
     * method for FACEBOOK_ADS_BUILD_AD_CREATIVE_OBJECT
     */
    facebookAdsBuildAdCreativeObject: (
      inputs: IntentToInputOutput['FACEBOOK_ADS_BUILD_AD_CREATIVE_OBJECT'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['FACEBOOK_ADS_BUILD_AD_CREATIVE_OBJECT'][0],
      IntentToInputOutput['FACEBOOK_ADS_BUILD_AD_CREATIVE_OBJECT'][1]
    >;

    /**
     * Create Ad Creative
     * method for FACEBOOK_ADS_CREATE_AD_CREATIVE
     */
    facebookAdsCreateAdCreative: (
      inputs: IntentToInputOutput['FACEBOOK_ADS_CREATE_AD_CREATIVE'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['FACEBOOK_ADS_CREATE_AD_CREATIVE'][0],
      IntentToInputOutput['FACEBOOK_ADS_CREATE_AD_CREATIVE'][1]
    >;

    /**
     * Create Lead Gen Form
     * method for FACEBOOK_ADS_CREATE_LEAD_GEN_FORM
     */
    facebookAdsCreateLeadGenForm: (
      inputs: IntentToInputOutput['FACEBOOK_ADS_CREATE_LEAD_GEN_FORM'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['FACEBOOK_ADS_CREATE_LEAD_GEN_FORM'][0],
      IntentToInputOutput['FACEBOOK_ADS_CREATE_LEAD_GEN_FORM'][1]
    >;

    /**
     * Send Purchase Event
     * method for FACEBOOK_ADS_SEND_PURCHASE_EVENT
     */
    facebookAdsSendPurchaseEvent: (
      inputs: IntentToInputOutput['FACEBOOK_ADS_SEND_PURCHASE_EVENT'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['FACEBOOK_ADS_SEND_PURCHASE_EVENT'][0],
      IntentToInputOutput['FACEBOOK_ADS_SEND_PURCHASE_EVENT'][1]
    >;

    /**
     * Send Lead Event
     * method for FACEBOOK_ADS_SEND_LEAD_EVENT
     */
    facebookAdsSendLeadEvent: (
      inputs: IntentToInputOutput['FACEBOOK_ADS_SEND_LEAD_EVENT'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['FACEBOOK_ADS_SEND_LEAD_EVENT'][0],
      IntentToInputOutput['FACEBOOK_ADS_SEND_LEAD_EVENT'][1]
    >;

    /**
     * Send Funnel Event
     * method for FACEBOOK_ADS_SEND_FUNNEL_EVENT
     */
    facebookAdsSendFunnelEvent: (
      inputs: IntentToInputOutput['FACEBOOK_ADS_SEND_FUNNEL_EVENT'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['FACEBOOK_ADS_SEND_FUNNEL_EVENT'][0],
      IntentToInputOutput['FACEBOOK_ADS_SEND_FUNNEL_EVENT'][1]
    >;
  };

  /**
   * trigger step methods
   */
  triggers: {};
};
