import { ActionStep } from '@useparagon/core';
import {
  CustomDropdownField,
  UserDefinedFieldMappingOptions,
} from '@useparagon/core/inputs';
import { IntegrationOptions } from '@useparagon/core/integration';

import { IntentToInputOutput } from './intents';

type IServicenowIntegrationUserDefinedInput = {
  id: string;
  title: string;
  required?: boolean;
  tooltip?: string;
} & (
  | {
      type:
        | 'text'
        | 'number'
        | 'email'
        | 'url'
        | 'boolean'
        | 'password'
        | 'incident_status'
        | 'task_status';
    }
  | {
      type: 'custom_dropdown';
      key: string;
      customDropdownOptions?: CustomDropdownField[];
    }
  | ({
      type: 'field_mapping';
    } & UserDefinedFieldMappingOptions)
);

/**
 * map b/w input type to result
 */
export type InputResultMap = {
  email: string;
  url: string;
  password: string;
  boolean: boolean;
  text: string;
  number: number;
  custom_dropdown: string;

  incident_status: string;
  task_status: string;
  field_mapping: {
    record_type: string;
    fields: Record<string, any>;
  };
};

/**
 * pass { variableName for input => Input }
 * this should be used whenever we are creating inputs for integrations/workflows
 * as it will infer proper types
 */
export declare const createInputs: <
  T extends Record<string, IServicenowIntegrationUserDefinedInput>,
>(
  inputs: T,
) => T;

/**
 * integration type for servicenow
 */
export type IServicenowIntegration = {
  /**
   * name of integration
   */
  name: string;

  /**
   * action step methods
   */
  actions: {
    /**
     * Create Ticket
     * method for SERVICENOW_CREATE_TICKET
     */
    createTicket: (
      inputs: IntentToInputOutput['SERVICENOW_CREATE_TICKET'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SERVICENOW_CREATE_TICKET'][0],
      IntentToInputOutput['SERVICENOW_CREATE_TICKET'][1]
    >;

    /**
     * Update Ticket
     * method for SERVICENOW_UPDATE_TICKET
     */
    updateTicket: (
      inputs: IntentToInputOutput['SERVICENOW_UPDATE_TICKET'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SERVICENOW_UPDATE_TICKET'][0],
      IntentToInputOutput['SERVICENOW_UPDATE_TICKET'][1]
    >;

    /**
     * Get Tickets
     * method for SERVICENOW_GET_TICKETS
     */
    getTickets: (
      inputs: IntentToInputOutput['SERVICENOW_GET_TICKETS'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SERVICENOW_GET_TICKETS'][0],
      IntentToInputOutput['SERVICENOW_GET_TICKETS'][1]
    >;

    /**
     * Get Ticket by ID
     * method for SERVICENOW_GET_TICKET_BY_ID
     */
    getTicketById: (
      inputs: IntentToInputOutput['SERVICENOW_GET_TICKET_BY_ID'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SERVICENOW_GET_TICKET_BY_ID'][0],
      IntentToInputOutput['SERVICENOW_GET_TICKET_BY_ID'][1]
    >;
  };

  /**
   * trigger step methods
   */
  triggers: {};
};
