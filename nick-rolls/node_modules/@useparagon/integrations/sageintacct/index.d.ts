import { ActionStep, ActionTriggerStep } from '@useparagon/core';
import {
  CustomDropdownField,
  UserDefinedFieldMappingOptions,
} from '@useparagon/core/inputs';
import { IntegrationOptions } from '@useparagon/core/integration';

import { IntentToInputOutput } from './intents';
import { IntentToInputOutput as TriggerIntentToInputOutput } from './triggers';

type ISageintacctIntegrationUserDefinedInput = {
  id: string;
  title: string;
  required?: boolean;
  tooltip?: string;
} & (
  | {
      type:
        | 'text'
        | 'number'
        | 'email'
        | 'url'
        | 'boolean'
        | 'password'
        | 'dimension'
        | 'vendor_type'
        | 'general_ledger_account'
        | 'payment_term';
    }
  | {
      type: 'custom_dropdown';
      key: string;
      customDropdownOptions?: CustomDropdownField[];
    }
  | ({
      type: 'custom_dimension_mapping' | 'field_mapping';
    } & UserDefinedFieldMappingOptions)
);

/**
 * map b/w input type to result
 */
export type InputResultMap = {
  email: string;
  url: string;
  password: string;
  boolean: boolean;
  text: string;
  number: number;
  custom_dropdown: string;

  dimension: string;
  vendor_type: string;
  general_ledger_account: string;
  payment_term: string;
  custom_dimension_mapping: {
    entities: string;
    dimension: Record<string, any>;
  };
  field_mapping: {
    record_type: string;
    fields: Record<string, any>;
  };
};

/**
 * pass { variableName for input => Input }
 * this should be used whenever we are creating inputs for integrations/workflows
 * as it will infer proper types
 */
export declare const createInputs: <
  T extends Record<string, ISageintacctIntegrationUserDefinedInput>,
>(
  inputs: T,
) => T;

/**
 * integration type for sageintacct
 */
export type ISageintacctIntegration = {
  /**
   * name of integration
   */
  name: string;

  /**
   * action step methods
   */
  actions: {
    /**
     * Create Vendor
     * method for SAGE_INTACCT_CREATE_VENDOR
     */
    sageIntacctCreateVendor: (
      inputs: IntentToInputOutput['SAGE_INTACCT_CREATE_VENDOR'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SAGE_INTACCT_CREATE_VENDOR'][0],
      IntentToInputOutput['SAGE_INTACCT_CREATE_VENDOR'][1]
    >;

    /**
     * Update Vendor
     * method for SAGE_INTACCT_UPDATE_VENDOR
     */
    sageIntacctUpdateVendor: (
      inputs: IntentToInputOutput['SAGE_INTACCT_UPDATE_VENDOR'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SAGE_INTACCT_UPDATE_VENDOR'][0],
      IntentToInputOutput['SAGE_INTACCT_UPDATE_VENDOR'][1]
    >;

    /**
     * Delete Vendor
     * method for SAGE_INTACCT_DELETE_VENDOR
     */
    sageIntacctDeleteVendor: (
      inputs: IntentToInputOutput['SAGE_INTACCT_DELETE_VENDOR'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SAGE_INTACCT_DELETE_VENDOR'][0],
      IntentToInputOutput['SAGE_INTACCT_DELETE_VENDOR'][1]
    >;

    /**
     * Search Vendors
     * method for SAGE_INTACCT_SEARCH_VENDORS
     */
    sageIntacctSearchVendors: (
      inputs: IntentToInputOutput['SAGE_INTACCT_SEARCH_VENDORS'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SAGE_INTACCT_SEARCH_VENDORS'][0],
      IntentToInputOutput['SAGE_INTACCT_SEARCH_VENDORS'][1]
    >;

    /**
     * Get Vendor by ID
     * method for SAGE_INTACCT_GET_VENDOR_BY_ID
     */
    sageIntacctGetVendorById: (
      inputs: IntentToInputOutput['SAGE_INTACCT_GET_VENDOR_BY_ID'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SAGE_INTACCT_GET_VENDOR_BY_ID'][0],
      IntentToInputOutput['SAGE_INTACCT_GET_VENDOR_BY_ID'][1]
    >;

    /**
     * Search Vendor Types
     * method for SAGE_INTACCT_SEARCH_VENDOR_TYPES
     */
    sageIntacctSearchVendorTypes: (
      inputs: IntentToInputOutput['SAGE_INTACCT_SEARCH_VENDOR_TYPES'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SAGE_INTACCT_SEARCH_VENDOR_TYPES'][0],
      IntentToInputOutput['SAGE_INTACCT_SEARCH_VENDOR_TYPES'][1]
    >;

    /**
     * Create Bill
     * method for SAGE_INTACCT_CREATE_BILL
     */
    sageIntacctCreateBill: (
      inputs: IntentToInputOutput['SAGE_INTACCT_CREATE_BILL'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SAGE_INTACCT_CREATE_BILL'][0],
      IntentToInputOutput['SAGE_INTACCT_CREATE_BILL'][1]
    >;

    /**
     * Update Bill
     * method for SAGE_INTACCT_UPDATE_BILL
     */
    sageIntacctUpdateBill: (
      inputs: IntentToInputOutput['SAGE_INTACCT_UPDATE_BILL'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SAGE_INTACCT_UPDATE_BILL'][0],
      IntentToInputOutput['SAGE_INTACCT_UPDATE_BILL'][1]
    >;

    /**
     * Delete Bill
     * method for SAGE_INTACCT_DELETE_BILL
     */
    sageIntacctDeleteBill: (
      inputs: IntentToInputOutput['SAGE_INTACCT_DELETE_BILL'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SAGE_INTACCT_DELETE_BILL'][0],
      IntentToInputOutput['SAGE_INTACCT_DELETE_BILL'][1]
    >;

    /**
     * Search Bills
     * method for SAGE_INTACCT_SEARCH_BILLS
     */
    sageIntacctSearchBills: (
      inputs: IntentToInputOutput['SAGE_INTACCT_SEARCH_BILLS'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SAGE_INTACCT_SEARCH_BILLS'][0],
      IntentToInputOutput['SAGE_INTACCT_SEARCH_BILLS'][1]
    >;

    /**
     * Get Bill by ID
     * method for SAGE_INTACCT_GET_BILLS_BY_ID
     */
    sageIntacctGetBillsById: (
      inputs: IntentToInputOutput['SAGE_INTACCT_GET_BILLS_BY_ID'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SAGE_INTACCT_GET_BILLS_BY_ID'][0],
      IntentToInputOutput['SAGE_INTACCT_GET_BILLS_BY_ID'][1]
    >;

    /**
     * Search Payment Terms
     * method for SAGE_INTACCT_SEARCH_PAYMENT_TERMS
     */
    sageIntacctSearchPaymentTerms: (
      inputs: IntentToInputOutput['SAGE_INTACCT_SEARCH_PAYMENT_TERMS'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SAGE_INTACCT_SEARCH_PAYMENT_TERMS'][0],
      IntentToInputOutput['SAGE_INTACCT_SEARCH_PAYMENT_TERMS'][1]
    >;

    /**
     * Get Payment Term by ID
     * method for SAGE_INTACCT_GET_PAYMENT_TERM_BY_ID
     */
    sageIntacctGetPaymentTermById: (
      inputs: IntentToInputOutput['SAGE_INTACCT_GET_PAYMENT_TERM_BY_ID'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SAGE_INTACCT_GET_PAYMENT_TERM_BY_ID'][0],
      IntentToInputOutput['SAGE_INTACCT_GET_PAYMENT_TERM_BY_ID'][1]
    >;

    /**
     * Search Accounts
     * method for SAGE_INTACCT_SEARCH_ACCOUNTS
     */
    sageIntacctSearchAccounts: (
      inputs: IntentToInputOutput['SAGE_INTACCT_SEARCH_ACCOUNTS'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SAGE_INTACCT_SEARCH_ACCOUNTS'][0],
      IntentToInputOutput['SAGE_INTACCT_SEARCH_ACCOUNTS'][1]
    >;

    /**
     * Get Account by ID
     * method for SAGE_INTACCT_GET_ACCOUNT_BY_ID
     */
    sageIntacctGetAccountById: (
      inputs: IntentToInputOutput['SAGE_INTACCT_GET_ACCOUNT_BY_ID'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SAGE_INTACCT_GET_ACCOUNT_BY_ID'][0],
      IntentToInputOutput['SAGE_INTACCT_GET_ACCOUNT_BY_ID'][1]
    >;

    /**
     * Get Dimensions
     * method for SAGE_INTACCT_GET_DIMENSIONS
     */
    sageIntacctGetDimensions: (
      inputs: IntentToInputOutput['SAGE_INTACCT_GET_DIMENSIONS'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SAGE_INTACCT_GET_DIMENSIONS'][0],
      IntentToInputOutput['SAGE_INTACCT_GET_DIMENSIONS'][1]
    >;
  };

  /**
   * trigger step methods
   */
  triggers: {
    /**
     * New Record
     * method for SAGE_INTACCT_TRIGGER_RECORD_CREATED
     */
    sageIntacctTriggerRecordCreated: (
      inputs: TriggerIntentToInputOutput['SAGE_INTACCT_TRIGGER_RECORD_CREATED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['SAGE_INTACCT_TRIGGER_RECORD_CREATED'][0],
      TriggerIntentToInputOutput['SAGE_INTACCT_TRIGGER_RECORD_CREATED'][1]
    >;

    /**
     * Record Updated
     * method for SAGE_INTACCT_TRIGGER_RECORD_UPDATED
     */
    sageIntacctTriggerRecordUpdated: (
      inputs: TriggerIntentToInputOutput['SAGE_INTACCT_TRIGGER_RECORD_UPDATED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['SAGE_INTACCT_TRIGGER_RECORD_UPDATED'][0],
      TriggerIntentToInputOutput['SAGE_INTACCT_TRIGGER_RECORD_UPDATED'][1]
    >;
  };
};
