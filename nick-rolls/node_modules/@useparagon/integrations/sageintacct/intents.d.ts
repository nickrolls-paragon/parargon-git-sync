import { ConditionalInput } from '@useparagon/core/steps/library/conditional';

/**
 * Create Vendor intent type
 */
type SageIntacctCreateVendor = {
  /**
   * Name
   * The name of the vendor.
   *
   */
  name: string;

  /**
   * Status
   * Defaults to Active.
   *
   */
  status?: 'active' | 'inactive';

  /**
   * Primary Contact: Print As
   * The display name to print as the contact info for the vendor.
   *
   * **Example**:
   * ```
   * Acme Widget Company, Inc.
   * ```
   */
  printAs: string;

  /**
   * Primary Contact: First Name
   *
   */
  firstName?: string;

  /**
   * Primary Contact: Last Name
   *
   */
  lastName?: string;

  /**
   * Primary Contact: Phone Number
   *
   */
  phoneNumber?: string;

  /**
   * Primary Contact: Email Address
   *
   * **Example**:
   * ```
   * sean@example.com
   * ```
   */
  email?: string;

  /**
   * Company URL
   *
   * **Example**:
   * ```
   * https://example.com
   * ```
   */
  url?: string;

  /**
   * Address Line 1
   *
   */
  addressLine1?: string;

  /**
   * Address Line 2
   *
   */
  addressLine2?: string;

  /**
   * City
   *
   */
  city?: string;

  /**
   * State
   * Use state or province.
   *
   */
  state?: string;

  /**
   * ZIP
   * Use ZIP or postal code, if applicable.
   *
   */
  zip?: string;

  /**
   * Country
   *
   */
  country?: string;

  /**
   * Vendor Type
   * The name of the Vendor Type. Use Connect Portal User Settings to allow users to specify a Vendor Type.
   *
   * **Example**:
   * ```
   * Commercial & Retail Products
   * ```
   */
  vendorType?: string;

  /**
   * Parent
   * The ID of the parent vendor, if applicable.
   *
   */
  parent?: string;

  /**
   * GL Group
   * The name of the GL group this vendor should be included in.
   *
   */
  glGroup?: string;

  /**
   * Tax ID
   *
   * **Example**:
   * ```
   * 12-3456789
   * ```
   */
  taxId?: string;

  /**
   * Form 1099 Name
   *
   * **Example**:
   * ```
   * Acme Co Inc.
   * ```
   */
  form1099Name?: string;

  /**
   * Form 1099 Type
   *
   * **Example**:
   * ```
   * MISC
   * ```
   */
  form1099Type?: string;

  /**
   * Form 1099 Box
   *
   * **Example**:
   * ```
   * 3
   * ```
   */
  form1099Box?: string;

  /**
   * Default Expense Account
   * The GL Account used for expenses from this vendor. Use Connect Portal User Settings to allow your user to select a GL Account.
   *
   * **Example**:
   * ```
   * 1000
   * ```
   */
  defaultExpenseAccount?: string;

  /**
   * Credit Limit
   *
   * **Example**:
   * ```
   * 1234.56
   * ```
   */
  creditLimit?: string;

  /**
   * On Hold
   *
   */
  onHold?: boolean;

  /**
   * Do Not Pay
   *
   */
  doNotPay?: boolean;

  /**
   * Billing Comments
   *
   */
  billingComments?: string;

  /**
   * Taxable
   *
   */
  taxable?: boolean;

  /**
   * Contact Tax Group
   * The name of the tax group this vendor should be included in.
   *
   */
  contactTaxGroup?: string;

  /**
   * Preferred Payment Method
   *
   */
  preferredPaymentMethod?:
    | 'Printed Check'
    | 'Charge Card'
    | 'EFT'
    | 'Cash'
    | 'ACH';

  /**
   * Payment Priority
   *
   */
  paymentPriority?: 'Urgent' | 'High' | 'Normal' | 'Low';

  /**
   * Billing Type
   *
   */
  billingType?: 'openitem' | 'balanceforward';

  /**
   * Term
   * The name of the payment term for this vendor. Use Connect Portal User Settings to allow your user to select a term.
   *
   * **Example**:
   * ```
   * Net 30
   * ```
   */
  term?: string;

  /**
   * Merge Payment Requests
   *
   */
  mergePaymentRequests?: boolean;

  /**
   * Send Automatic Payment Notification
   *
   */
  sendPaymentNotification?: boolean;

  /**
   * Display Term Discount
   * Determines if term discount appears on the check stub.
   *
   */
  displayTermDiscount?: boolean;

  /**
   * Additional Fields
   * Specify any additional fields to be included in this vendor.
   *
   * **Example**:
   * ```
   * {
   *  "ACHENABLED": true,
   *  "ACHBANKROUTINGNUMBER": "xxx",
   *  "ACHACCOUNTNUMBER": "xxx"
   *}
   * ```
   */
  additionalFields?: string;
};

/**
 * Update Vendor intent type
 */
type SageIntacctUpdateVendor = {
  /**
   * Record Number
   * The record number of the vendor to update.
   *
   * **Example**:
   * ```
   * 123
   * ```
   */
  recordNumber: string;

  /**
   * Name
   * The name of the vendor.
   *
   */
  name?: string;

  /**
   * Status
   * Defaults to Active.
   *
   */
  status?: 'active' | 'inactive';

  /**
   * Primary Contact: Print As
   * The display name to print as the contact info for the vendor.
   *
   * **Example**:
   * ```
   * Acme Widget Company, Inc.
   * ```
   */
  printAs?: string;

  /**
   * Primary Contact: First Name
   *
   */
  firstName?: string;

  /**
   * Primary Contact: Last Name
   *
   */
  lastName?: string;

  /**
   * Primary Contact: Phone Number
   *
   */
  phoneNumber?: string;

  /**
   * Primary Contact: Email Address
   *
   * **Example**:
   * ```
   * sean@example.com
   * ```
   */
  email?: string;

  /**
   * Company URL
   *
   * **Example**:
   * ```
   * https://example.com
   * ```
   */
  url?: string;

  /**
   * Address Line 1
   *
   */
  addressLine1?: string;

  /**
   * Address Line 2
   *
   */
  addressLine2?: string;

  /**
   * City
   *
   */
  city?: string;

  /**
   * State
   * Use state or province.
   *
   */
  state?: string;

  /**
   * ZIP
   * Use ZIP or postal code, if applicable.
   *
   */
  zip?: string;

  /**
   * Country
   *
   */
  country?: string;

  /**
   * Vendor Type
   * The name of the Vendor Type. Use Connect Portal User Settings to allow users to specify a Vendor Type.
   *
   * **Example**:
   * ```
   * Commercial & Retail Products
   * ```
   */
  vendorType?: string;

  /**
   * Parent
   * The ID of the parent vendor, if applicable.
   *
   */
  parent?: string;

  /**
   * GL Group
   * The name of the GL group this vendor should be included in.
   *
   */
  glGroup?: string;

  /**
   * Tax ID
   *
   * **Example**:
   * ```
   * 12-3456789
   * ```
   */
  taxId?: string;

  /**
   * Form 1099 Name
   *
   * **Example**:
   * ```
   * Acme Co Inc.
   * ```
   */
  form1099Name?: string;

  /**
   * Form 1099 Type
   *
   * **Example**:
   * ```
   * MISC
   * ```
   */
  form1099Type?: string;

  /**
   * Form 1099 Box
   *
   * **Example**:
   * ```
   * 3
   * ```
   */
  form1099Box?: string;

  /**
   * Default Expense Account
   * The GL Account used for expenses from this vendor. Use Connect Portal User Settings to allow your user to select a GL Account.
   *
   * **Example**:
   * ```
   * 1000
   * ```
   */
  defaultExpenseAccount?: string;

  /**
   * Credit Limit
   *
   * **Example**:
   * ```
   * 1234.56
   * ```
   */
  creditLimit?: string;

  /**
   * On Hold
   *
   */
  onHold?: boolean;

  /**
   * Do Not Pay
   *
   */
  doNotPay?: boolean;

  /**
   * Billing Comments
   *
   */
  billingComments?: string;

  /**
   * Taxable
   *
   */
  taxable?: boolean;

  /**
   * Contact Tax Group
   * The name of the tax group this vendor should be included in.
   *
   */
  contactTaxGroup?: string;

  /**
   * Preferred Payment Method
   *
   */
  preferredPaymentMethod?:
    | 'Printed Check'
    | 'Charge Card'
    | 'EFT'
    | 'Cash'
    | 'ACH';

  /**
   * Payment Priority
   *
   */
  paymentPriority?: 'Urgent' | 'High' | 'Normal' | 'Low';

  /**
   * Billing Type
   *
   */
  billingType?: 'openitem' | 'balanceforward';

  /**
   * Term
   * The name of the payment term for this vendor. Use Connect Portal User Settings to allow your user to select a term.
   *
   * **Example**:
   * ```
   * Net 30
   * ```
   */
  term?: string;

  /**
   * Merge Payment Requests
   *
   */
  mergePaymentRequests?: boolean;

  /**
   * Send Automatic Payment Notification
   *
   */
  sendPaymentNotification?: boolean;

  /**
   * Display Term Discount
   * Determines if term discount appears on the check stub.
   *
   */
  displayTermDiscount?: boolean;

  /**
   * Additional Fields
   * Specify any additional fields to be included in this vendor.
   *
   * **Example**:
   * ```
   * {
   *  "ACHENABLED": true,
   *  "ACHBANKROUTINGNUMBER": "xxx",
   *  "ACHACCOUNTNUMBER": "xxx"
   *}
   * ```
   */
  additionalFields?: string;
};

/**
 * Delete Vendor intent type
 */
type SageIntacctDeleteVendor = {
  /**
   * Record Number
   * The record number of the  vendor to delete.
   *
   * **Example**:
   * ```
   * 123
   * ```
   */
  recordNumber: string;
};

/**
 * Search Vendors intent type
 */
type SageIntacctSearchVendors = {
  /**
   * Filter search
   * Search for records that match specified filters.
   *
   */
  vendorFilterFormula?: ConditionalInput;
};

/**
 * Get Vendor by ID intent type
 */
type SageIntacctGetVendorById = {
  /**
   * Vendor ID
   * ID of the vendor to get.
   *
   */
  vendorId?: string;

  /**
   * Record Number
   * The record number of the vendor to get.
   *
   * **Example**:
   * ```
   * 123
   * ```
   */
  recordNumber?: string;
};

/**
 * Search Vendor Types intent type
 */
type SageIntacctSearchVendorTypes = {
  /**
   * Filter search
   * Search for records that match specified filters.
   *
   */
  vendorTypesFilterFormula?: ConditionalInput;
};

/**
 * Create Bill intent type
 */
type SageIntacctCreateBill = {
  /**
   * Vendor ID
   * The vendor ID this bill is for.
   *
   */
  vendorId: string;

  /**
   * Date
   * Transaction date for when this bill was created. Format as MM/DD/YYYY.
   *
   * **Example**:
   * ```
   * 12/15/2030
   * ```
   */
  date: string;

  /**
   * Due Date
   * Due date for this bill. Format as MM/DD/YYYY.
   *
   * **Example**:
   * ```
   * 12/15/2030
   * ```
   */
  dueDate: string;

  /**
   * Bill Items
   *
   * **Example**:
   * ```
   * [{
   *  ACCOUNTNO: "1010",
   *  TRX_AMOUNT: 500.00,
   *  ENTRYDESCRIPTION: "Bill line 1"
   *}]
   * ```
   */
  billItems: string;

  /**
   * Pay To
   * Name of contact to pay to.
   *
   */
  payTo?: string;

  /**
   * Return To
   * Name of contact to return to.
   *
   */
  returnTo?: string;

  /**
   * Bill Number
   * ID for the bill.
   *
   */
  billNumber?: string;

  /**
   * Reference Number
   * Reference number for the bill.
   *
   */
  referenceNumber?: string;

  /**
   * Payment Term
   * Use Connect Portal User Settings to allow your user to select a Payment Term.
   *
   * **Example**:
   * ```
   * Net 30
   * ```
   */
  paymentTerm?: string;

  /**
   * Recommended Payment Date
   * Format as MM/DD/YYYY.
   *
   */
  recommendPaymentDate?: string;

  /**
   * On Hold
   *
   */
  onHold?: boolean;

  /**
   * Attachment
   * Specify an ID for an attachment to include in this bill.
   *
   */
  attachment?: string;

  /**
   * Description
   *
   */
  description?: string;
};

/**
 * Update Bill intent type
 */
type SageIntacctUpdateBill = {
  /**
   * Record Number
   * The record number of the bill to update.
   *
   */
  recordNumber: string;

  /**
   * Vendor ID
   * The vendor ID this bill is for.
   *
   */
  vendorId?: string;

  /**
   * Date
   * Transaction date for when this bill was created. Format as MM/DD/YYYY.
   *
   * **Example**:
   * ```
   * 12/15/2030
   * ```
   */
  date?: string;

  /**
   * Due Date
   * Due date for this bill. Format as MM/DD/YYYY.
   *
   * **Example**:
   * ```
   * 12/15/2030
   * ```
   */
  dueDate: string;

  /**
   * Bill Items
   *
   * **Example**:
   * ```
   * [{
   *  ACCOUNTNO: "1010",
   *  TRX_AMOUNT: 500.00,
   *  ENTRYDESCRIPTION: "Bill line 1"
   *}]
   * ```
   */
  billItems?: string;

  /**
   * Pay To
   * Name of contact to pay to.
   *
   */
  payTo?: string;

  /**
   * Return To
   * Name of contact to return to.
   *
   */
  returnTo?: string;

  /**
   * Bill Number
   * ID for the bill.
   *
   */
  billNumber?: string;

  /**
   * Reference Number
   * Reference number for the bill.
   *
   */
  referenceNumber?: string;

  /**
   * Payment Term
   * Use Connect Portal User Settings to allow your user to select a Payment Term.
   *
   * **Example**:
   * ```
   * Net 30
   * ```
   */
  paymentTerm?: string;

  /**
   * Recommended Payment Date
   * Format as MM/DD/YYYY.
   *
   */
  recommendPaymentDate?: string;

  /**
   * On Hold
   *
   */
  onHold?: boolean;

  /**
   * Attachment
   * Specify an ID for an attachment to include in this bill.
   *
   */
  attachment?: string;

  /**
   * Description
   *
   */
  description?: string;
};

/**
 * Delete Bill intent type
 */
type SageIntacctDeleteBill = {
  /**
   * Record Number
   * The record number of the bill to delete.
   *
   */
  recordNumber: string;
};

/**
 * Search Bills intent type
 */
type SageIntacctSearchBills = {
  /**
   * Filter search
   * Search for records that match specified filters.
   *
   */
  billFilterFormula?: ConditionalInput;
};

/**
 * Get Bill by ID intent type
 */
type SageIntacctGetBillsById = {
  /**
   * Record Number
   * The record number of the bill to get.
   *
   */
  recordNumber: string;
};

/**
 * Search Payment Terms intent type
 */
type SageIntacctSearchPaymentTerms = {
  /**
   * Filter search
   * Search for records that match specified filters.
   *
   */
  paymentTermsFilterFormula?: ConditionalInput;
};

/**
 * Get Payment Term by ID intent type
 */
type SageIntacctGetPaymentTermById = {
  /**
   * Payment Term ID
   * The ID of the term to get.
   *
   * **Example**:
   * ```
   * Net 30
   * ```
   */
  paymentTerm: string;
};

/**
 * Search Accounts intent type
 */
type SageIntacctSearchAccounts = {
  /**
   * Filter search
   * Search for records that match specified filters.
   *
   */
  accountFilterFormula?: ConditionalInput;
};

/**
 * Get Account by ID intent type
 */
type SageIntacctGetAccountById = {
  /**
   * Account ID
   * The ID of the account to get.
   *
   * **Example**:
   * ```
   * 6700
   * ```
   */
  accountId: string;
};

/**
 * Get Dimensions intent type
 */
type SageIntacctGetDimensions = {};

export type IntentToInputOutput = {
  /**
   * SAGE_INTACCT_CREATE_VENDOR
   */
  SAGE_INTACCT_CREATE_VENDOR: [SageIntacctCreateVendor, any];

  /**
   * SAGE_INTACCT_UPDATE_VENDOR
   */
  SAGE_INTACCT_UPDATE_VENDOR: [SageIntacctUpdateVendor, any];

  /**
   * SAGE_INTACCT_DELETE_VENDOR
   */
  SAGE_INTACCT_DELETE_VENDOR: [SageIntacctDeleteVendor, any];

  /**
   * SAGE_INTACCT_SEARCH_VENDORS
   */
  SAGE_INTACCT_SEARCH_VENDORS: [SageIntacctSearchVendors, any];

  /**
   * SAGE_INTACCT_GET_VENDOR_BY_ID
   */
  SAGE_INTACCT_GET_VENDOR_BY_ID: [SageIntacctGetVendorById, any];

  /**
   * SAGE_INTACCT_SEARCH_VENDOR_TYPES
   */
  SAGE_INTACCT_SEARCH_VENDOR_TYPES: [SageIntacctSearchVendorTypes, any];

  /**
   * SAGE_INTACCT_CREATE_BILL
   */
  SAGE_INTACCT_CREATE_BILL: [SageIntacctCreateBill, any];

  /**
   * SAGE_INTACCT_UPDATE_BILL
   */
  SAGE_INTACCT_UPDATE_BILL: [SageIntacctUpdateBill, any];

  /**
   * SAGE_INTACCT_DELETE_BILL
   */
  SAGE_INTACCT_DELETE_BILL: [SageIntacctDeleteBill, any];

  /**
   * SAGE_INTACCT_SEARCH_BILLS
   */
  SAGE_INTACCT_SEARCH_BILLS: [SageIntacctSearchBills, any];

  /**
   * SAGE_INTACCT_GET_BILLS_BY_ID
   */
  SAGE_INTACCT_GET_BILLS_BY_ID: [SageIntacctGetBillsById, any];

  /**
   * SAGE_INTACCT_SEARCH_PAYMENT_TERMS
   */
  SAGE_INTACCT_SEARCH_PAYMENT_TERMS: [SageIntacctSearchPaymentTerms, any];

  /**
   * SAGE_INTACCT_GET_PAYMENT_TERM_BY_ID
   */
  SAGE_INTACCT_GET_PAYMENT_TERM_BY_ID: [SageIntacctGetPaymentTermById, any];

  /**
   * SAGE_INTACCT_SEARCH_ACCOUNTS
   */
  SAGE_INTACCT_SEARCH_ACCOUNTS: [SageIntacctSearchAccounts, any];

  /**
   * SAGE_INTACCT_GET_ACCOUNT_BY_ID
   */
  SAGE_INTACCT_GET_ACCOUNT_BY_ID: [SageIntacctGetAccountById, any];

  /**
   * SAGE_INTACCT_GET_DIMENSIONS
   */
  SAGE_INTACCT_GET_DIMENSIONS: [SageIntacctGetDimensions, any];
};
