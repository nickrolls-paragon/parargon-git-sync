const { ActionStep, ActionTriggerStep } = require('@useparagon/core');

/**
 * this should be used whenever we are creating inputs for integrations/workflows
 */
exports.createInputs = (inputs) => inputs;

/**
 * inputs for sageintacct
 */
exports.inputs = [
  {
    id: 'cacheDimensions',
    title: 'Dimension',
    type: 'DYNAMIC_DATA_SOURCE',
  },
  {
    id: 'cacheVendorTypes',
    title: 'Vendor Type',
    type: 'DYNAMIC_DATA_SOURCE',
  },
  {
    id: 'cacheGeneralLedgerAccount',
    title: 'General Ledger Account',
    type: 'DYNAMIC_DATA_SOURCE',
  },
  {
    id: 'cachePaymentTerm',
    title: 'Payment Term',
    type: 'DYNAMIC_DATA_SOURCE',
  },
  {
    id: 'customDimensionMapping',
    title: 'Custom Dimension Mapping',
    type: 'FIELD_MAPPER_DATA_SOURCE',
    fieldSource: {
      id: 'cacheDimensions',
      title: 'Dimension',
      type: 'DYNAMIC_DATA_SOURCE',
    },
    recordSource: {
      id: 'cacheEntities',
      title: 'Entities',
      type: 'DYNAMIC_DATA_SOURCE',
    },
  },
  {
    id: 'mapSageIntacctFields',
    title: 'Field Mapping',
    type: 'FIELD_MAPPER_DATA_SOURCE',
    fieldSource: {
      id: 'getFields',
      title: 'Fields',
      type: 'DYNAMIC_DATA_SOURCE',
    },
    recordSource: {
      id: 'recordType',
      title: 'Record Type',
      type: 'DYNAMIC_DATA_SOURCE',
    },
  },
];

/**
 * triggers for sageintacct
 */
exports.triggers = [
  {
    title: 'New Record',
    name: 'SAGE_INTACCT_TRIGGER_RECORD_CREATED',
    output: [],
    inputs: [
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'ENUM',
        required: true,
        values: ['BILL', 'VENDOR'],
      },
    ],
  },
  {
    title: 'Record Updated',
    name: 'SAGE_INTACCT_TRIGGER_RECORD_UPDATED',
    output: [],
    inputs: [
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'ENUM',
        required: true,
        values: ['BILL', 'VENDOR'],
      },
    ],
  },
];

/**
 * intents for sageintacct
 */
exports.intents = [
  {
    title: 'Create Vendor',
    name: 'SAGE_INTACCT_CREATE_VENDOR',
    output: [],
    inputs: [
      {
        id: 'name',
        title: 'Name',
        type: 'TEXTAREA',
        subtitle: 'The name of the vendor.',
        required: true,
      },
      {
        id: 'status',
        title: 'Status',
        type: 'EDITABLE_ENUM',
        subtitle: 'Defaults to Active.',
        defaultValue: 'active',
        values: ['active', 'inactive'],
      },
      {
        id: 'printAs',
        title: 'Primary Contact: Print As',
        type: 'TEXTAREA',
        subtitle:
          'The display name to print as the contact info for the vendor.',
        placeholder: 'Acme Widget Company, Inc.',
        required: true,
      },
      {
        id: 'firstName',
        title: 'Primary Contact: First Name',
        type: 'TEXTAREA',
      },
      {
        id: 'lastName',
        title: 'Primary Contact: Last Name',
        type: 'TEXTAREA',
      },
      {
        id: 'phoneNumber',
        title: 'Primary Contact: Phone Number',
        type: 'TEXTAREA',
      },
      {
        id: 'email',
        title: 'Primary Contact: Email Address',
        type: 'TEXTAREA',
        placeholder: 'sean@example.com',
      },
      {
        id: 'url',
        title: 'Company URL',
        type: 'TEXTAREA',
        placeholder: 'https://example.com',
      },
      {
        id: 'addressLine1',
        title: 'Address Line 1',
        type: 'TEXTAREA',
      },
      {
        id: 'addressLine2',
        title: 'Address Line 2',
        type: 'TEXTAREA',
      },
      {
        id: 'city',
        title: 'City',
        type: 'TEXTAREA',
      },
      {
        id: 'state',
        title: 'State',
        type: 'TEXTAREA',
        subtitle: 'Use state or province.',
      },
      {
        id: 'zip',
        title: 'ZIP',
        type: 'TEXTAREA',
        subtitle: 'Use ZIP or postal code, if applicable.',
      },
      {
        id: 'country',
        title: 'Country',
        type: 'TEXTAREA',
      },
      {
        id: 'vendorType',
        title: 'Vendor Type',
        type: 'TEXTAREA',
        subtitle:
          'The name of the Vendor Type. Use Connect Portal User Settings to allow users to specify a Vendor Type.',
        placeholder: 'Commercial & Retail Products',
      },
      {
        id: 'parent',
        title: 'Parent',
        type: 'TEXTAREA',
        subtitle: 'The ID of the parent vendor, if applicable.',
      },
      {
        id: 'glGroup',
        title: 'GL Group',
        type: 'TEXTAREA',
        subtitle: 'The name of the GL group this vendor should be included in.',
      },
      {
        id: 'taxId',
        title: 'Tax ID',
        type: 'TEXTAREA',
        placeholder: '12-3456789',
      },
      {
        id: 'form1099Name',
        title: 'Form 1099 Name',
        type: 'TEXTAREA',
        placeholder: 'Acme Co Inc.',
      },
      {
        id: 'form1099Type',
        title: 'Form 1099 Type',
        type: 'TEXTAREA',
        placeholder: 'MISC',
      },
      {
        id: 'form1099Box',
        title: 'Form 1099 Box',
        type: 'TEXTAREA',
        placeholder: '3',
      },
      {
        id: 'defaultExpenseAccount',
        title: 'Default Expense Account',
        type: 'TEXTAREA',
        subtitle:
          'The GL Account used for expenses from this vendor. Use Connect Portal User Settings to allow your user to select a GL Account.',
        placeholder: '1000',
      },
      {
        id: 'creditLimit',
        title: 'Credit Limit',
        type: 'TEXTAREA',
        placeholder: '1234.56',
      },
      {
        id: 'onHold',
        title: 'On Hold',
        type: 'BOOLEAN_INPUT',
        defaultValue: false,
      },
      {
        id: 'doNotPay',
        title: 'Do Not Pay',
        type: 'BOOLEAN_INPUT',
        defaultValue: false,
      },
      {
        id: 'billingComments',
        title: 'Billing Comments',
        type: 'TEXTAREA',
      },
      {
        id: 'taxable',
        title: 'Taxable',
        type: 'BOOLEAN_INPUT',
        defaultValue: true,
      },
      {
        id: 'contactTaxGroup',
        title: 'Contact Tax Group',
        type: 'TEXTAREA',
        subtitle:
          'The name of the tax group this vendor should be included in.',
      },
      {
        id: 'preferredPaymentMethod',
        title: 'Preferred Payment Method',
        type: 'EDITABLE_ENUM',
        values: ['Printed Check', 'Charge Card', 'EFT', 'Cash', 'ACH'],
      },
      {
        id: 'paymentPriority',
        title: 'Payment Priority',
        type: 'EDITABLE_ENUM',
        values: ['Urgent', 'High', 'Normal', 'Low'],
      },
      {
        id: 'billingType',
        title: 'Billing Type',
        type: 'EDITABLE_ENUM',
        values: ['openitem', 'balanceforward'],
      },
      {
        id: 'term',
        title: 'Term',
        type: 'TEXTAREA',
        subtitle:
          'The name of the payment term for this vendor. Use Connect Portal User Settings to allow your user to select a term.',
        placeholder: 'Net 30',
      },
      {
        id: 'mergePaymentRequests',
        title: 'Merge Payment Requests',
        type: 'BOOLEAN_INPUT',
        defaultValue: true,
      },
      {
        id: 'sendPaymentNotification',
        title: 'Send Automatic Payment Notification',
        type: 'BOOLEAN_INPUT',
        defaultValue: false,
      },
      {
        id: 'displayTermDiscount',
        title: 'Display Term Discount',
        type: 'BOOLEAN_INPUT',
        subtitle: 'Determines if term discount appears on the check stub.',
        defaultValue: false,
      },
      {
        id: 'additionalFields',
        title: 'Additional Fields',
        type: 'CODE',
        subtitle:
          'Specify any additional fields to be included in this vendor.',
        placeholder:
          '{\n  "ACHENABLED": true,\n  "ACHBANKROUTINGNUMBER": "xxx",\n  "ACHACCOUNTNUMBER": "xxx"\n}',
      },
    ],
  },
  {
    title: 'Update Vendor',
    name: 'SAGE_INTACCT_UPDATE_VENDOR',
    output: [],
    inputs: [
      {
        id: 'recordNumber',
        title: 'Record Number',
        type: 'TEXTAREA',
        subtitle: 'The record number of the vendor to update.',
        placeholder: '123',
        required: true,
      },
      {
        id: 'name',
        title: 'Name',
        type: 'TEXTAREA',
        subtitle: 'The name of the vendor.',
      },
      {
        id: 'status',
        title: 'Status',
        type: 'EDITABLE_ENUM',
        subtitle: 'Defaults to Active.',
        defaultValue: 'active',
        values: ['active', 'inactive'],
      },
      {
        id: 'printAs',
        title: 'Primary Contact: Print As',
        type: 'TEXTAREA',
        subtitle:
          'The display name to print as the contact info for the vendor.',
        placeholder: 'Acme Widget Company, Inc.',
      },
      {
        id: 'firstName',
        title: 'Primary Contact: First Name',
        type: 'TEXTAREA',
      },
      {
        id: 'lastName',
        title: 'Primary Contact: Last Name',
        type: 'TEXTAREA',
      },
      {
        id: 'phoneNumber',
        title: 'Primary Contact: Phone Number',
        type: 'TEXTAREA',
      },
      {
        id: 'email',
        title: 'Primary Contact: Email Address',
        type: 'TEXTAREA',
        placeholder: 'sean@example.com',
      },
      {
        id: 'url',
        title: 'Company URL',
        type: 'TEXTAREA',
        placeholder: 'https://example.com',
      },
      {
        id: 'addressLine1',
        title: 'Address Line 1',
        type: 'TEXTAREA',
      },
      {
        id: 'addressLine2',
        title: 'Address Line 2',
        type: 'TEXTAREA',
      },
      {
        id: 'city',
        title: 'City',
        type: 'TEXTAREA',
      },
      {
        id: 'state',
        title: 'State',
        type: 'TEXTAREA',
        subtitle: 'Use state or province.',
      },
      {
        id: 'zip',
        title: 'ZIP',
        type: 'TEXTAREA',
        subtitle: 'Use ZIP or postal code, if applicable.',
      },
      {
        id: 'country',
        title: 'Country',
        type: 'TEXTAREA',
      },
      {
        id: 'vendorType',
        title: 'Vendor Type',
        type: 'TEXTAREA',
        subtitle:
          'The name of the Vendor Type. Use Connect Portal User Settings to allow users to specify a Vendor Type.',
        placeholder: 'Commercial & Retail Products',
      },
      {
        id: 'parent',
        title: 'Parent',
        type: 'TEXTAREA',
        subtitle: 'The ID of the parent vendor, if applicable.',
      },
      {
        id: 'glGroup',
        title: 'GL Group',
        type: 'TEXTAREA',
        subtitle: 'The name of the GL group this vendor should be included in.',
      },
      {
        id: 'taxId',
        title: 'Tax ID',
        type: 'TEXTAREA',
        placeholder: '12-3456789',
      },
      {
        id: 'form1099Name',
        title: 'Form 1099 Name',
        type: 'TEXTAREA',
        placeholder: 'Acme Co Inc.',
      },
      {
        id: 'form1099Type',
        title: 'Form 1099 Type',
        type: 'TEXTAREA',
        placeholder: 'MISC',
      },
      {
        id: 'form1099Box',
        title: 'Form 1099 Box',
        type: 'TEXTAREA',
        placeholder: '3',
      },
      {
        id: 'defaultExpenseAccount',
        title: 'Default Expense Account',
        type: 'TEXTAREA',
        subtitle:
          'The GL Account used for expenses from this vendor. Use Connect Portal User Settings to allow your user to select a GL Account.',
        placeholder: '1000',
      },
      {
        id: 'creditLimit',
        title: 'Credit Limit',
        type: 'TEXTAREA',
        placeholder: '1234.56',
      },
      {
        id: 'onHold',
        title: 'On Hold',
        type: 'BOOLEAN_INPUT',
        defaultValue: false,
      },
      {
        id: 'doNotPay',
        title: 'Do Not Pay',
        type: 'BOOLEAN_INPUT',
        defaultValue: false,
      },
      {
        id: 'billingComments',
        title: 'Billing Comments',
        type: 'TEXTAREA',
      },
      {
        id: 'taxable',
        title: 'Taxable',
        type: 'BOOLEAN_INPUT',
        defaultValue: true,
      },
      {
        id: 'contactTaxGroup',
        title: 'Contact Tax Group',
        type: 'TEXTAREA',
        subtitle:
          'The name of the tax group this vendor should be included in.',
      },
      {
        id: 'preferredPaymentMethod',
        title: 'Preferred Payment Method',
        type: 'EDITABLE_ENUM',
        values: ['Printed Check', 'Charge Card', 'EFT', 'Cash', 'ACH'],
      },
      {
        id: 'paymentPriority',
        title: 'Payment Priority',
        type: 'EDITABLE_ENUM',
        values: ['Urgent', 'High', 'Normal', 'Low'],
      },
      {
        id: 'billingType',
        title: 'Billing Type',
        type: 'EDITABLE_ENUM',
        values: ['openitem', 'balanceforward'],
      },
      {
        id: 'term',
        title: 'Term',
        type: 'TEXTAREA',
        subtitle:
          'The name of the payment term for this vendor. Use Connect Portal User Settings to allow your user to select a term.',
        placeholder: 'Net 30',
      },
      {
        id: 'mergePaymentRequests',
        title: 'Merge Payment Requests',
        type: 'BOOLEAN_INPUT',
        defaultValue: true,
      },
      {
        id: 'sendPaymentNotification',
        title: 'Send Automatic Payment Notification',
        type: 'BOOLEAN_INPUT',
        defaultValue: false,
      },
      {
        id: 'displayTermDiscount',
        title: 'Display Term Discount',
        type: 'BOOLEAN_INPUT',
        subtitle: 'Determines if term discount appears on the check stub.',
        defaultValue: false,
      },
      {
        id: 'additionalFields',
        title: 'Additional Fields',
        type: 'CODE',
        subtitle:
          'Specify any additional fields to be included in this vendor.',
        placeholder:
          '{\n  "ACHENABLED": true,\n  "ACHBANKROUTINGNUMBER": "xxx",\n  "ACHACCOUNTNUMBER": "xxx"\n}',
      },
    ],
  },
  {
    title: 'Delete Vendor',
    name: 'SAGE_INTACCT_DELETE_VENDOR',
    output: [],
    inputs: [
      {
        id: 'recordNumber',
        title: 'Record Number',
        type: 'TEXTAREA',
        subtitle: 'The record number of the  vendor to delete.',
        placeholder: '123',
        required: true,
      },
    ],
  },
  {
    title: 'Search Vendors',
    name: 'SAGE_INTACCT_SEARCH_VENDORS',
    output: [],
    inputs: [
      {
        id: 'vendorFilterFormula',
        title: 'Filter search',
        type: 'CONDITIONAL',
        subtitle: 'Search for records that match specified filters.',
        supportedOperators: [
          '$stringExactlyMatches',
          '$stringDoesNotExactlyMatch',
          '$stringLessThan',
          '$numberLessThanOrEqualTo',
          '$stringGreaterThan',
          '$numberGreaterThanOrEqualTo',
          '$exists',
          '$doesNotExist',
          '$stringContains',
          '$stringDoesNotContain',
        ],
      },
    ],
  },
  {
    title: 'Get Vendor by ID',
    name: 'SAGE_INTACCT_GET_VENDOR_BY_ID',
    output: [],
    inputs: [
      {
        id: 'vendorId',
        title: 'Vendor ID',
        type: 'TEXTAREA',
        subtitle: 'ID of the vendor to get.',
      },
      {
        id: 'recordNumber',
        title: 'Record Number',
        type: 'TEXTAREA',
        subtitle: 'The record number of the vendor to get.',
        placeholder: '123',
      },
    ],
  },
  {
    title: 'Search Vendor Types',
    name: 'SAGE_INTACCT_SEARCH_VENDOR_TYPES',
    output: [],
    inputs: [
      {
        id: 'vendorTypesFilterFormula',
        title: 'Filter search',
        type: 'CONDITIONAL',
        subtitle: 'Search for records that match specified filters.',
        supportedKeys: ['NAME', 'STATUS'],
        supportedOperators: [
          '$stringExactlyMatches',
          '$stringDoesNotExactlyMatch',
          '$stringLessThan',
          '$numberLessThanOrEqualTo',
          '$stringGreaterThan',
          '$numberGreaterThanOrEqualTo',
          '$exists',
          '$doesNotExist',
          '$stringContains',
          '$stringDoesNotContain',
        ],
      },
    ],
  },
  {
    title: 'Create Bill',
    name: 'SAGE_INTACCT_CREATE_BILL',
    output: [],
    inputs: [
      {
        id: 'vendorId',
        title: 'Vendor ID',
        type: 'TEXTAREA',
        subtitle: 'The vendor ID this bill is for.',
        required: true,
      },
      {
        id: 'date',
        title: 'Date',
        type: 'TEXTAREA',
        subtitle:
          'Transaction date for when this bill was created. Format as MM/DD/YYYY.',
        placeholder: '12/15/2030',
        required: true,
      },
      {
        id: 'dueDate',
        title: 'Due Date',
        type: 'TEXTAREA',
        subtitle: 'Due date for this bill. Format as MM/DD/YYYY.',
        placeholder: '12/15/2030',
        required: true,
      },
      {
        id: 'billItems',
        title: 'Bill Items',
        type: 'CODE',
        placeholder:
          '[{\n  ACCOUNTNO: "1010",\n  TRX_AMOUNT: 500.00,\n  ENTRYDESCRIPTION: "Bill line 1"\n}]',
        required: true,
      },
      {
        id: 'payTo',
        title: 'Pay To',
        type: 'TEXTAREA',
        subtitle: 'Name of contact to pay to.',
      },
      {
        id: 'returnTo',
        title: 'Return To',
        type: 'TEXTAREA',
        subtitle: 'Name of contact to return to.',
      },
      {
        id: 'billNumber',
        title: 'Bill Number',
        type: 'TEXTAREA',
        subtitle: 'ID for the bill.',
      },
      {
        id: 'referenceNumber',
        title: 'Reference Number',
        type: 'TEXTAREA',
        subtitle: 'Reference number for the bill.',
      },
      {
        id: 'paymentTerm',
        title: 'Payment Term',
        type: 'TEXTAREA',
        subtitle:
          'Use Connect Portal User Settings to allow your user to select a Payment Term.',
        placeholder: 'Net 30',
      },
      {
        id: 'recommendPaymentDate',
        title: 'Recommended Payment Date',
        type: 'TEXTAREA',
        subtitle: 'Format as MM/DD/YYYY.',
      },
      {
        id: 'onHold',
        title: 'On Hold',
        type: 'BOOLEAN_INPUT',
        defaultValue: false,
      },
      {
        id: 'attachment',
        title: 'Attachment',
        type: 'TEXTAREA',
        subtitle: 'Specify an ID for an attachment to include in this bill.',
      },
      {
        id: 'description',
        title: 'Description',
        type: 'TEXTAREA',
      },
    ],
  },
  {
    title: 'Update Bill',
    name: 'SAGE_INTACCT_UPDATE_BILL',
    output: [],
    inputs: [
      {
        id: 'recordNumber',
        title: 'Record Number',
        type: 'TEXTAREA',
        subtitle: 'The record number of the bill to update.',
        required: true,
      },
      {
        id: 'vendorId',
        title: 'Vendor ID',
        type: 'TEXTAREA',
        subtitle: 'The vendor ID this bill is for.',
      },
      {
        id: 'date',
        title: 'Date',
        type: 'TEXTAREA',
        subtitle:
          'Transaction date for when this bill was created. Format as MM/DD/YYYY.',
        placeholder: '12/15/2030',
      },
      {
        id: 'dueDate',
        title: 'Due Date',
        type: 'TEXTAREA',
        subtitle: 'Due date for this bill. Format as MM/DD/YYYY.',
        placeholder: '12/15/2030',
        required: true,
      },
      {
        id: 'billItems',
        title: 'Bill Items',
        type: 'CODE',
        placeholder:
          '[{\n  ACCOUNTNO: "1010",\n  TRX_AMOUNT: 500.00,\n  ENTRYDESCRIPTION: "Bill line 1"\n}]',
      },
      {
        id: 'payTo',
        title: 'Pay To',
        type: 'TEXTAREA',
        subtitle: 'Name of contact to pay to.',
      },
      {
        id: 'returnTo',
        title: 'Return To',
        type: 'TEXTAREA',
        subtitle: 'Name of contact to return to.',
      },
      {
        id: 'billNumber',
        title: 'Bill Number',
        type: 'TEXTAREA',
        subtitle: 'ID for the bill.',
      },
      {
        id: 'referenceNumber',
        title: 'Reference Number',
        type: 'TEXTAREA',
        subtitle: 'Reference number for the bill.',
      },
      {
        id: 'paymentTerm',
        title: 'Payment Term',
        type: 'TEXTAREA',
        subtitle:
          'Use Connect Portal User Settings to allow your user to select a Payment Term.',
        placeholder: 'Net 30',
      },
      {
        id: 'recommendPaymentDate',
        title: 'Recommended Payment Date',
        type: 'TEXTAREA',
        subtitle: 'Format as MM/DD/YYYY.',
      },
      {
        id: 'onHold',
        title: 'On Hold',
        type: 'BOOLEAN_INPUT',
        defaultValue: false,
      },
      {
        id: 'attachment',
        title: 'Attachment',
        type: 'TEXTAREA',
        subtitle: 'Specify an ID for an attachment to include in this bill.',
      },
      {
        id: 'description',
        title: 'Description',
        type: 'TEXTAREA',
      },
    ],
  },
  {
    title: 'Delete Bill',
    name: 'SAGE_INTACCT_DELETE_BILL',
    output: [],
    inputs: [
      {
        id: 'recordNumber',
        title: 'Record Number',
        type: 'TEXTAREA',
        subtitle: 'The record number of the bill to delete.',
        required: true,
      },
    ],
  },
  {
    title: 'Search Bills',
    name: 'SAGE_INTACCT_SEARCH_BILLS',
    output: [],
    inputs: [
      {
        id: 'billFilterFormula',
        title: 'Filter search',
        type: 'CONDITIONAL',
        subtitle: 'Search for records that match specified filters.',
        supportedKeys: [
          'VENDORID',
          'RECORDNO',
          'RECORDID',
          'DOCNUMBER',
          'WHENCREATED',
          'WHENDUE',
          'ONHOLD',
          'STATE',
        ],
        supportedOperators: [
          '$stringExactlyMatches',
          '$stringDoesNotExactlyMatch',
          '$stringLessThan',
          '$numberLessThanOrEqualTo',
          '$stringGreaterThan',
          '$numberGreaterThanOrEqualTo',
          '$exists',
          '$doesNotExist',
          '$stringContains',
          '$stringDoesNotContain',
        ],
      },
    ],
  },
  {
    title: 'Get Bill by ID',
    name: 'SAGE_INTACCT_GET_BILLS_BY_ID',
    output: [],
    inputs: [
      {
        id: 'recordNumber',
        title: 'Record Number',
        type: 'TEXTAREA',
        subtitle: 'The record number of the bill to get.',
        required: true,
      },
    ],
  },
  {
    title: 'Search Payment Terms',
    name: 'SAGE_INTACCT_SEARCH_PAYMENT_TERMS',
    output: [],
    inputs: [
      {
        id: 'paymentTermsFilterFormula',
        title: 'Filter search',
        type: 'CONDITIONAL',
        subtitle: 'Search for records that match specified filters.',
        supportedKeys: ['NAME', 'DESCRIPTION'],
        supportedOperators: [
          '$stringExactlyMatches',
          '$stringDoesNotExactlyMatch',
          '$stringLessThan',
          '$numberLessThanOrEqualTo',
          '$stringGreaterThan',
          '$numberGreaterThanOrEqualTo',
          '$exists',
          '$doesNotExist',
          '$stringContains',
          '$stringDoesNotContain',
        ],
      },
    ],
  },
  {
    title: 'Get Payment Term by ID',
    name: 'SAGE_INTACCT_GET_PAYMENT_TERM_BY_ID',
    output: [],
    inputs: [
      {
        id: 'paymentTerm',
        title: 'Payment Term ID',
        type: 'TEXTAREA',
        subtitle: 'The ID of the term to get.',
        placeholder: 'Net 30',
        required: true,
      },
    ],
  },
  {
    title: 'Search Accounts',
    name: 'SAGE_INTACCT_SEARCH_ACCOUNTS',
    output: [],
    inputs: [
      {
        id: 'accountFilterFormula',
        title: 'Filter search',
        type: 'CONDITIONAL',
        subtitle: 'Search for records that match specified filters.',
        supportedKeys: ['ACCOUNTNO', 'ACCOUNTTYPE', 'TITLE', 'CATEGORY'],
        supportedOperators: [
          '$stringExactlyMatches',
          '$stringDoesNotExactlyMatch',
          '$stringLessThan',
          '$numberLessThanOrEqualTo',
          '$stringGreaterThan',
          '$numberGreaterThanOrEqualTo',
          '$exists',
          '$doesNotExist',
          '$stringContains',
          '$stringDoesNotContain',
        ],
      },
    ],
  },
  {
    title: 'Get Account by ID',
    name: 'SAGE_INTACCT_GET_ACCOUNT_BY_ID',
    output: [],
    inputs: [
      {
        id: 'accountId',
        title: 'Account ID',
        type: 'TEXTAREA',
        subtitle: 'The ID of the account to get.',
        placeholder: '6700',
        required: true,
      },
    ],
  },
  {
    title: 'Get Dimensions',
    name: 'SAGE_INTACCT_GET_DIMENSIONS',
    output: [],
    inputs: [],
  },
];

/**
 * integration class for sageintacct
 */
exports.integration = {
  /**
   * name of integration
   */
  name: 'sageintacct',

  /**
   * action step methods
   */
  actions: {
    /**
     * Create Vendor
     * method for SAGE_INTACCT_CREATE_VENDOR
     */
    sageIntacctCreateVendor: (inputs, options) => {
      return new ActionStep({
        intent: 'SAGE_INTACCT_CREATE_VENDOR',
        actionType: 'sageintacct',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Update Vendor
     * method for SAGE_INTACCT_UPDATE_VENDOR
     */
    sageIntacctUpdateVendor: (inputs, options) => {
      return new ActionStep({
        intent: 'SAGE_INTACCT_UPDATE_VENDOR',
        actionType: 'sageintacct',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Delete Vendor
     * method for SAGE_INTACCT_DELETE_VENDOR
     */
    sageIntacctDeleteVendor: (inputs, options) => {
      return new ActionStep({
        intent: 'SAGE_INTACCT_DELETE_VENDOR',
        actionType: 'sageintacct',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Search Vendors
     * method for SAGE_INTACCT_SEARCH_VENDORS
     */
    sageIntacctSearchVendors: (inputs, options) => {
      return new ActionStep({
        intent: 'SAGE_INTACCT_SEARCH_VENDORS',
        actionType: 'sageintacct',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Vendor by ID
     * method for SAGE_INTACCT_GET_VENDOR_BY_ID
     */
    sageIntacctGetVendorById: (inputs, options) => {
      return new ActionStep({
        intent: 'SAGE_INTACCT_GET_VENDOR_BY_ID',
        actionType: 'sageintacct',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Search Vendor Types
     * method for SAGE_INTACCT_SEARCH_VENDOR_TYPES
     */
    sageIntacctSearchVendorTypes: (inputs, options) => {
      return new ActionStep({
        intent: 'SAGE_INTACCT_SEARCH_VENDOR_TYPES',
        actionType: 'sageintacct',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Create Bill
     * method for SAGE_INTACCT_CREATE_BILL
     */
    sageIntacctCreateBill: (inputs, options) => {
      return new ActionStep({
        intent: 'SAGE_INTACCT_CREATE_BILL',
        actionType: 'sageintacct',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Update Bill
     * method for SAGE_INTACCT_UPDATE_BILL
     */
    sageIntacctUpdateBill: (inputs, options) => {
      return new ActionStep({
        intent: 'SAGE_INTACCT_UPDATE_BILL',
        actionType: 'sageintacct',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Delete Bill
     * method for SAGE_INTACCT_DELETE_BILL
     */
    sageIntacctDeleteBill: (inputs, options) => {
      return new ActionStep({
        intent: 'SAGE_INTACCT_DELETE_BILL',
        actionType: 'sageintacct',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Search Bills
     * method for SAGE_INTACCT_SEARCH_BILLS
     */
    sageIntacctSearchBills: (inputs, options) => {
      return new ActionStep({
        intent: 'SAGE_INTACCT_SEARCH_BILLS',
        actionType: 'sageintacct',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Bill by ID
     * method for SAGE_INTACCT_GET_BILLS_BY_ID
     */
    sageIntacctGetBillsById: (inputs, options) => {
      return new ActionStep({
        intent: 'SAGE_INTACCT_GET_BILLS_BY_ID',
        actionType: 'sageintacct',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Search Payment Terms
     * method for SAGE_INTACCT_SEARCH_PAYMENT_TERMS
     */
    sageIntacctSearchPaymentTerms: (inputs, options) => {
      return new ActionStep({
        intent: 'SAGE_INTACCT_SEARCH_PAYMENT_TERMS',
        actionType: 'sageintacct',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Payment Term by ID
     * method for SAGE_INTACCT_GET_PAYMENT_TERM_BY_ID
     */
    sageIntacctGetPaymentTermById: (inputs, options) => {
      return new ActionStep({
        intent: 'SAGE_INTACCT_GET_PAYMENT_TERM_BY_ID',
        actionType: 'sageintacct',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Search Accounts
     * method for SAGE_INTACCT_SEARCH_ACCOUNTS
     */
    sageIntacctSearchAccounts: (inputs, options) => {
      return new ActionStep({
        intent: 'SAGE_INTACCT_SEARCH_ACCOUNTS',
        actionType: 'sageintacct',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Account by ID
     * method for SAGE_INTACCT_GET_ACCOUNT_BY_ID
     */
    sageIntacctGetAccountById: (inputs, options) => {
      return new ActionStep({
        intent: 'SAGE_INTACCT_GET_ACCOUNT_BY_ID',
        actionType: 'sageintacct',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Dimensions
     * method for SAGE_INTACCT_GET_DIMENSIONS
     */
    sageIntacctGetDimensions: (inputs, options) => {
      return new ActionStep({
        intent: 'SAGE_INTACCT_GET_DIMENSIONS',
        actionType: 'sageintacct',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
  },

  /**
   * trigger step methods
   */
  triggers: {
    /**
     * New Record
     * method for SAGE_INTACCT_TRIGGER_RECORD_CREATED
     */
    sageIntacctTriggerRecordCreated: (inputs) => {
      return new ActionTriggerStep({
        intent: 'SAGE_INTACCT_TRIGGER_RECORD_CREATED',
        actionType: 'sageintacct',
        parameters: inputs,
      });
    },
    /**
     * Record Updated
     * method for SAGE_INTACCT_TRIGGER_RECORD_UPDATED
     */
    sageIntacctTriggerRecordUpdated: (inputs) => {
      return new ActionTriggerStep({
        intent: 'SAGE_INTACCT_TRIGGER_RECORD_UPDATED',
        actionType: 'sageintacct',
        parameters: inputs,
      });
    },
  },
};
