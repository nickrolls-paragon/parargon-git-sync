import { ConditionalInput } from '@useparagon/core/steps/library/conditional';

/**
 * Get File Metadata intent type
 */
type GoogleDriveGetFileById = {
  /**
   * File ID
   * The ID of the file.
   *
   * **Example**:
   * ```
   * 1PVW0QtmQv-829KNvV3DLbYL8WrpS4zhtPx2Ok
   * ```
   */
  fileId: string;

  /**
   * Additional Fields
   *
   * **Example**:
   * ```
   *
   *  {
   *    "supportsAllDrives": true
   *  }
   * ```
   */
  additionalFields?: string;

  /**
   * Include File Contents
   *
   */
  includeFileContents?: boolean;
};

/**
 * Upload File intent type
 */
type GoogleDriveSaveFile = {
  /**
   * File
   *
   */
  file: string;

  /**
   * Folder
   * Use Connect Portal Workflow Settings to allow users to select which Folder to save files to. Defaults to the user’s root folder if left blank.
   *
   * **Example**:
   * ```
   * {{settings.folder}}
   * ```
   */
  parentId?: string;

  /**
   * Shared Drive
   * Specify whether the upload target is a shared drive. Defaults to false.
   *
   */
  sharedDrive?: boolean;

  /**
   * File Name
   * Defaults to origin file name if left blank.
   *
   */
  filename?: string;

  /**
   * Additional Fields
   * Specify any other fields that should be updated in JSON below. Use Connect Portal Workflow Settings to allow users to select which fields to update.
   *
   * **Example**:
   * ```
   *
   *  {
   *    "supportsAllDrives": true
   *  }
   * ```
   */
  additionalFields?: string;
};

/**
 * Download Google Doc intent type
 */
type GoogleDriveExportDoc = {
  /**
   * File ID
   * Specify the ID of the File to export
   *
   * **Example**:
   * ```
   * 2HlC2Zf57zAst33ht0MEi3WA0_ig4xVKx3-RvzkbvIfE
   * ```
   */
  fileId: string;

  /**
   * MIME Type
   *
   * **Example**:
   * ```
   * application/pdf
   * ```
   */
  mimeType: string;
};

/**
 * Create Folder intent type
 */
type GoogleDriveCreateFolder = {
  /**
   * Folder Name
   * Specify a name for the folder.
   *
   * **Example**:
   * ```
   * Folder 1
   * ```
   */
  folderName: string;

  /**
   * Parent ID
   * Specify the parent ID to create folder within the parent
   *
   */
  parentId?: string;
};

/**
 * Delete Folder intent type
 */
type GoogleDriveDeleteFolder = {
  /**
   * Folder ID
   * The ID of the folder.
   *
   * **Example**:
   * ```
   * 1PVW0QtmQv-829KNvV3DLbYL8WrpS4zhtPx2Ok
   * ```
   */
  folderId: string;
};

/**
 * Get Folder by ID intent type
 */
type GoogleDriveGetFolderById = {
  /**
   * Folder ID
   * The ID of the folder.
   *
   * **Example**:
   * ```
   * 1PVW0QtmQv-829KNvV3DLbYL8WrpS4zhtPx2Ok
   * ```
   */
  folderId: string;
};

/**
 * Move Folder intent type
 */
type GoogleDriveMoveFolder = {
  /**
   * Folder ID
   * The ID of the folder.
   *
   * **Example**:
   * ```
   * 1PVW0QtmQv-829KNvV3DLbYL8WrpS4zhtPx2Ok
   * ```
   */
  folderId: string;

  /**
   * Parent ID
   * Specify the parent ID to move folder within the parent
   *
   * **Example**:
   * ```
   * 1PVW0QtmQv-829KNvV3DLbYL8WrpS4zhtPx2Ok
   * ```
   */
  parentId: string;
};

/**
 * Get Files intent type
 */
type GoogleDriveListFiles = {
  /**
   * Include Folders
   *
   */
  includeFolders: boolean;

  /**
   * Folder
   * Use Connect Portal Workflow Settings to allow users to select which Folder to get files from. Defaults to the user’s root folder if unspecified.
   *
   * **Example**:
   * ```
   * {{settings.folder}}
   * ```
   */
  parentId?: string;

  /**
   * Page Size
   * Specify the number of files to include on a page. Accepts values from 1 to 1000. Defaults to 100 if unspecified.
   *
   * **Example**:
   * ```
   * 100
   * ```
   */
  pageSize?: string;

  /**
   * Include Shared Drive Items
   * Specify whether search results should include files in shared drives. Defaults to false.
   *
   */
  includeSharedItems?: boolean;

  /**
   * Additional Fields
   * Specify any other fields that should be updated in JSON below. Use Connect Portal Workflow Settings to allow users to select which fields to update.
   *
   * **Example**:
   * ```
   *
   *  {
   *    "supportsAllDrives": true
   *  }
   * ```
   */
  additionalFields?: string;
};

/**
 * Search Folders intent type
 */
type GoogleDriveSearchFolders = {
  /**
   * Parent ID
   * Specify the parent ID to search within the parent
   *
   */
  parentId?: string;

  /**
   * Drive ID
   * Search for shared drives inside shared parents
   *
   */
  driveId?: string;

  /**
   * Page Size
   * Specify the number of folders to include on a page. Accepts values from 1 to 1000. Defaults to 100 if unspecified.
   *
   */
  pageSize?: string;

  /**
   * Filter Search
   *
   */
  filterFormula?: ConditionalInput;
};

export type IntentToInputOutput = {
  /**
   * GOOGLE_DRIVE_GET_FILE_BY_ID
   */
  GOOGLE_DRIVE_GET_FILE_BY_ID: [GoogleDriveGetFileById, any];

  /**
   * GOOGLE_DRIVE_SAVE_FILE
   */
  GOOGLE_DRIVE_SAVE_FILE: [GoogleDriveSaveFile, any];

  /**
   * GOOGLE_DRIVE_EXPORT_DOC
   */
  GOOGLE_DRIVE_EXPORT_DOC: [GoogleDriveExportDoc, any];

  /**
   * GOOGLE_DRIVE_CREATE_FOLDER
   */
  GOOGLE_DRIVE_CREATE_FOLDER: [GoogleDriveCreateFolder, any];

  /**
   * GOOGLE_DRIVE_DELETE_FOLDER
   */
  GOOGLE_DRIVE_DELETE_FOLDER: [GoogleDriveDeleteFolder, any];

  /**
   * GOOGLE_DRIVE_GET_FOLDER_BY_ID
   */
  GOOGLE_DRIVE_GET_FOLDER_BY_ID: [GoogleDriveGetFolderById, any];

  /**
   * GOOGLE_DRIVE_MOVE_FOLDER
   */
  GOOGLE_DRIVE_MOVE_FOLDER: [GoogleDriveMoveFolder, any];

  /**
   * GOOGLE_DRIVE_LIST_FILES
   */
  GOOGLE_DRIVE_LIST_FILES: [GoogleDriveListFiles, any];

  /**
   * GOOGLE_DRIVE_SEARCH_FOLDERS
   */
  GOOGLE_DRIVE_SEARCH_FOLDERS: [GoogleDriveSearchFolders, any];
};
