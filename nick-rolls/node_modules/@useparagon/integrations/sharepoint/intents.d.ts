import { ConditionalInput } from '@useparagon/core/steps/library/conditional';

/**
 * Create Item intent type
 */
type SharepointCreateItem = {
  /**
   * Title
   *
   */
  title: string;

  /**
   * List ID
   * The List ID to create the item in. Use Connect Portal User Settings to allow users to select a List.
   *
   * **Example**:
   * ```
   * 22e03ef3-6ef4-424d-a1d3-92a337807c30
   * ```
   */
  listId: string;

  /**
   * Fields
   * The column values of the new item.  Use Connect Portal Workflow Settings to allow users to select which item columns to update.
   *
   */
  fields?: string;
};

/**
 * Update Item intent type
 */
type SharepointUpdateItem = {
  /**
   * Item ID
   * The ID of the item to update.
   *
   */
  itemId: string;

  /**
   * Title
   *
   */
  title: string;

  /**
   * List ID
   * The List ID to update the item in. Use Connect Portal User Settings to allow users to select a List.
   *
   * **Example**:
   * ```
   * 22e03ef3-6ef4-424d-a1d3-92a337807c30
   * ```
   */
  listId: string;

  /**
   * Fields
   * The column values of the new item.  Use Connect Portal Workflow Settings to allow users to select which item columns to update.
   *
   */
  fields?: string;
};

/**
 * Get Item by ID intent type
 */
type SharepointGetItemById = {
  /**
   * Item ID
   * The ID of the item to get.
   *
   */
  itemId: string;

  /**
   * List ID
   * The List ID to get the item from. Use Connect Portal User Settings to allow users to select a List.
   *
   * **Example**:
   * ```
   * 22e03ef3-6ef4-424d-a1d3-92a337807c30
   * ```
   */
  listId: string;
};

/**
 * Get Items in a List intent type
 */
type SharepointGetItemsInAList = {
  /**
   * List ID
   * The List ID to get items from. Use Connect Portal User Settings to allow users to select a List.
   *
   * **Example**:
   * ```
   * 22e03ef3-6ef4-424d-a1d3-92a337807c30
   * ```
   */
  listId: string;

  /**
   * Filter search
   * Search for items that match specified filters.
   *
   */
  itemsFilterFormula?: ConditionalInput;
};

/**
 * Delete Item intent type
 */
type SharepointDeleteItem = {
  /**
   * Item ID
   * The ID of the item to delete.
   *
   */
  itemId: string;

  /**
   * List ID
   * The List ID to delete the item from. Use Connect Portal User Settings to allow users to select a List.
   *
   * **Example**:
   * ```
   * 22e03ef3-6ef4-424d-a1d3-92a337807c30
   * ```
   */
  listId: string;
};

/**
 * Create List intent type
 */
type SharepointCreateList = {
  /**
   * Name
   *
   */
  name: string;

  /**
   * Description
   * Description or acceptance criteria for this epic to be considered complete.
   *
   */
  description?: string;
};

/**
 * Get List by ID intent type
 */
type SharepointGetListById = {
  /**
   * List ID
   * The ID of the list to get. Use Connect Portal User Settings to allow users to select a List.
   *
   * **Example**:
   * ```
   * 22e03ef3-6ef4-424d-a1d3-92a337807c30
   * ```
   */
  listId: string;
};

/**
 * Get Lists intent type
 */
type SharepointGetLists = {
  /**
   * Filter search
   * Search for items that match specified filters.
   *
   */
  listsFilterFormula?: ConditionalInput;
};

/**
 * Create List column intent type
 */
type SharepointCreateListColumn = {
  /**
   * List ID
   * The List ID to create the column in. Use Connect Portal User Settings to allow users to select a List.
   *
   * **Example**:
   * ```
   * 22e03ef3-6ef4-424d-a1d3-92a337807c30
   * ```
   */
  listId: string;

  /**
   * Display Name
   * The user-facing name of the column.
   *
   */
  displayName: string;

  /**
   * Api Name
   * The API-facing name of the column as it appears in the fields on a List Item.
   *
   */
  apiName: string;

  /**
   * Description
   * Description or acceptance criteria for this epic to be considered complete.
   *
   */
  description?: string;

  /**
   * Default Value
   * The default value for this column.
   *
   */
  defaultValue?: string;

  /**
   * Hidden
   *
   */
  hidden?: boolean;

  /**
   * Read-only
   *
   */
  readOnly?: boolean;
};

/**
 * Get List columns intent type
 */
type SharepointGetListColumns = {
  /**
   * List ID
   * The ID of the list to get. Use Connect Portal User Settings to allow users to select a List.
   *
   * **Example**:
   * ```
   * 22e03ef3-6ef4-424d-a1d3-92a337807c30
   * ```
   */
  listId: string;
};

export type IntentToInputOutput = {
  /**
   * SHAREPOINT_CREATE_ITEM
   */
  SHAREPOINT_CREATE_ITEM: [SharepointCreateItem, any];

  /**
   * SHAREPOINT_UPDATE_ITEM
   */
  SHAREPOINT_UPDATE_ITEM: [SharepointUpdateItem, any];

  /**
   * SHAREPOINT_GET_ITEM_BY_ID
   */
  SHAREPOINT_GET_ITEM_BY_ID: [SharepointGetItemById, any];

  /**
   * SHAREPOINT_GET_ITEMS_IN_A_LIST
   */
  SHAREPOINT_GET_ITEMS_IN_A_LIST: [SharepointGetItemsInAList, any];

  /**
   * SHAREPOINT_DELETE_ITEM
   */
  SHAREPOINT_DELETE_ITEM: [SharepointDeleteItem, any];

  /**
   * SHAREPOINT_CREATE_LIST
   */
  SHAREPOINT_CREATE_LIST: [SharepointCreateList, any];

  /**
   * SHAREPOINT_GET_LIST_BY_ID
   */
  SHAREPOINT_GET_LIST_BY_ID: [SharepointGetListById, any];

  /**
   * SHAREPOINT_GET_LISTS
   */
  SHAREPOINT_GET_LISTS: [SharepointGetLists, any];

  /**
   * SHAREPOINT_CREATE_LIST_COLUMN
   */
  SHAREPOINT_CREATE_LIST_COLUMN: [SharepointCreateListColumn, any];

  /**
   * SHAREPOINT_GET_LIST_COLUMNS
   */
  SHAREPOINT_GET_LIST_COLUMNS: [SharepointGetListColumns, any];
};
