const { ActionStep, ActionTriggerStep } = require('@useparagon/core');

/**
 * this should be used whenever we are creating inputs for integrations/workflows
 */
exports.createInputs = (inputs) => inputs;

/**
 * inputs for onedrive
 */
exports.inputs = [
  {
    id: 'folders',
    title: 'Folder',
    type: 'DYNAMIC_DATA_SOURCE',
  },
  {
    id: 'projectIssueStatusTypeCombo',
    title: 'Get folder children',
    type: 'COMBO_INPUT_DATA_SOURCE',
    mainInputSource: {
      id: 'folders',
      title: 'Folder',
      type: 'DYNAMIC_DATA_SOURCE',
    },
    dependentInputSource: {
      id: 'children',
      title: 'Children',
      type: 'DYNAMIC_DATA_SOURCE',
    },
  },
];

/**
 * triggers for onedrive
 */
exports.triggers = [
  {
    title: 'File Change',
    name: 'ONEDRIVE_TRIGGER_FILE_CHANGE',
    output: [],
    inputs: [],
  },
];

/**
 * intents for onedrive
 */
exports.intents = [
  {
    title: 'Upload File',
    name: 'ONEDRIVE_SAVE_FILE',
    output: [],
    inputs: [
      {
        id: 'file',
        title: 'File',
        type: 'TEXTAREA',
        subtitle: 'This method only supports files up to 4MB in size.',
        placeholder: 'choose a file',
        required: true,
      },
      {
        id: 'fileName',
        title: 'File Name',
        type: 'TEXTAREA',
        placeholder: 'filename.pdf',
        required: true,
      },
      {
        id: 'folder',
        title: 'Folder',
        type: 'TEXTAREA',
        subtitle:
          'Use Connect Portal Workflow Settings to allow users to select which Folder to save files to. Defaults to the userâ€™s root folder if left blank.',
        placeholder: '{{settings.folder}}',
      },
    ],
  },
  {
    title: 'Get File Metadata',
    name: 'ONEDRIVE_GET_FILE_BY_ID',
    output: [],
    inputs: [
      {
        id: 'fileId',
        title: 'File Path or Item ID',
        type: 'TEXTAREA',
        subtitle:
          'Provide either the file system path(root or root:/filename.pdf) or Item ID.',
        placeholder: 'Choose a file',
        required: true,
      },
    ],
  },
  {
    title: 'List Files',
    name: 'ONEDRIVE_LIST_CONTENTS',
    output: [],
    inputs: [
      {
        id: 'filePath',
        title: 'File Path',
        type: 'TEXTAREA',
        subtitle:
          'Use Connect Portal Workflow Settings to allow users to select which Folder to list files from.',
        placeholder: '{{settings.folder}}',
        required: true,
      },
    ],
  },
  {
    title: 'Download File',
    name: 'ONEDRIVE_DOWNLOAD_FILE',
    output: [],
    inputs: [
      {
        id: 'itemId',
        title: 'Item ID',
        type: 'TEXTAREA',
        subtitle: 'Specify the Item ID of the drive File to fetch.',
        placeholder: '01MCUCZsDUeM7T5BUNXNDLPZAP6OBVJT82',
        required: true,
      },
    ],
  },
  {
    title: 'Create Folder',
    name: 'ONEDRIVE_CREATE_FOLDER',
    output: [],
    inputs: [
      {
        id: 'folderName',
        title: 'Folder Name',
        type: 'TEXTAREA',
        subtitle: 'Specify the Folder Name',
        placeholder: 'example folder',
        required: true,
      },
      {
        id: 'parentId',
        title: 'Parent Folder ID',
        type: 'TEXTAREA',
        subtitle: 'Specify the Parent Folder ID.',
        placeholder: '01MCUCZUFVXTSCIFNST5HJ4BDTK3YQYYCF',
      },
    ],
  },
  {
    title: 'Get Folder by ID',
    name: 'ONEDRIVE_GET_FOLDER_BY_ID',
    output: [],
    inputs: [
      {
        id: 'folderId',
        title: 'Folder ID',
        type: 'TEXTAREA',
        subtitle: 'Specify the Folder ID.',
        placeholder: '01MCUCZUFVXTSCIFNST5HJ4BDTK3YQYYCF',
        required: true,
      },
    ],
  },
  {
    title: 'Search Folders',
    name: 'ONEDRIVE_SEARCH_FOLDERS',
    output: [],
    inputs: [
      {
        id: 'folderName',
        title: 'Folder Name',
        type: 'TEXTAREA',
        subtitle: 'Specify the Folder Name',
        placeholder: 'example folder',
      },
    ],
  },
  {
    title: 'Move Folder',
    name: 'ONEDRIVE_MOVE_FOLDER',
    output: [],
    inputs: [
      {
        id: 'folderId',
        title: 'Folder ID',
        type: 'TEXTAREA',
        subtitle: 'Specify the Folder ID.',
        placeholder: '01MCUCZUFVXTSCIFNST5HJ4BDTK3YQYYCF',
        required: true,
      },
      {
        id: 'parentId',
        title: 'Parent Folder ID',
        type: 'TEXTAREA',
        subtitle: 'Specify the Parent Folder ID.',
        placeholder: '01MCUCZUFVXTSCIFNST5HJ4BDTK3YQYYCF',
        required: true,
      },
    ],
  },
  {
    title: 'Delete Folder',
    name: 'ONEDRIVE_DELETE_FOLDER',
    output: [],
    inputs: [
      {
        id: 'folderId',
        title: 'Folder ID',
        type: 'TEXTAREA',
        subtitle: 'Specify the Folder ID to delete',
        placeholder: '01MCUCZUFVXTSCIFNST5HJ4BDTK3YQYYCF',
        required: true,
      },
    ],
  },
];

/**
 * integration class for onedrive
 */
exports.integration = {
  /**
   * name of integration
   */
  name: 'onedrive',

  /**
   * action step methods
   */
  actions: {
    /**
     * Upload File
     * method for ONEDRIVE_SAVE_FILE
     */
    saveFile: (inputs, options) => {
      return new ActionStep({
        intent: 'ONEDRIVE_SAVE_FILE',
        actionType: 'onedrive',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get File Metadata
     * method for ONEDRIVE_GET_FILE_BY_ID
     */
    getFileById: (inputs, options) => {
      return new ActionStep({
        intent: 'ONEDRIVE_GET_FILE_BY_ID',
        actionType: 'onedrive',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * List Files
     * method for ONEDRIVE_LIST_CONTENTS
     */
    listContents: (inputs, options) => {
      return new ActionStep({
        intent: 'ONEDRIVE_LIST_CONTENTS',
        actionType: 'onedrive',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Download File
     * method for ONEDRIVE_DOWNLOAD_FILE
     */
    downloadFile: (inputs, options) => {
      return new ActionStep({
        intent: 'ONEDRIVE_DOWNLOAD_FILE',
        actionType: 'onedrive',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Create Folder
     * method for ONEDRIVE_CREATE_FOLDER
     */
    createFolder: (inputs, options) => {
      return new ActionStep({
        intent: 'ONEDRIVE_CREATE_FOLDER',
        actionType: 'onedrive',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Folder by ID
     * method for ONEDRIVE_GET_FOLDER_BY_ID
     */
    getFolderById: (inputs, options) => {
      return new ActionStep({
        intent: 'ONEDRIVE_GET_FOLDER_BY_ID',
        actionType: 'onedrive',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Search Folders
     * method for ONEDRIVE_SEARCH_FOLDERS
     */
    searchFolders: (inputs, options) => {
      return new ActionStep({
        intent: 'ONEDRIVE_SEARCH_FOLDERS',
        actionType: 'onedrive',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Move Folder
     * method for ONEDRIVE_MOVE_FOLDER
     */
    moveFolder: (inputs, options) => {
      return new ActionStep({
        intent: 'ONEDRIVE_MOVE_FOLDER',
        actionType: 'onedrive',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Delete Folder
     * method for ONEDRIVE_DELETE_FOLDER
     */
    deleteFolder: (inputs, options) => {
      return new ActionStep({
        intent: 'ONEDRIVE_DELETE_FOLDER',
        actionType: 'onedrive',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
  },

  /**
   * trigger step methods
   */
  triggers: {
    /**
     * File Change
     * method for ONEDRIVE_TRIGGER_FILE_CHANGE
     */
    fileChange: (inputs) => {
      return new ActionTriggerStep({
        intent: 'ONEDRIVE_TRIGGER_FILE_CHANGE',
        actionType: 'onedrive',
        parameters: inputs,
      });
    },
  },
};
