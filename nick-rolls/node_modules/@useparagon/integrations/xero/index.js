const { ActionStep, ActionTriggerStep } = require('@useparagon/core');

/**
 * this should be used whenever we are creating inputs for integrations/workflows
 */
exports.createInputs = (inputs) => inputs;

/**
 * inputs for xero
 */
exports.inputs = [
  {
    id: 'account',
    title: 'Account',
    type: 'DYNAMIC_DATA_SOURCE',
  },
  {
    id: 'mapXeroFields',
    title: 'Field Mapping',
    type: 'FIELD_MAPPER_DATA_SOURCE',
    fieldSource: {
      id: 'getFields',
      title: 'Fields',
      type: 'DYNAMIC_DATA_SOURCE',
    },
    recordSource: {
      id: 'recordType',
      title: 'Record Type',
      type: 'DYNAMIC_DATA_SOURCE',
    },
  },
];

/**
 * triggers for xero
 */
exports.triggers = [
  {
    title: 'New Account',
    name: 'XERO_TRIGGER_ACCOUNT_CREATED',
    output: [],
    inputs: [],
  },
  {
    title: 'New Customer',
    name: 'XERO_TRIGGER_CUSTOMER_CREATED',
    output: [],
    inputs: [],
  },
  {
    title: 'New Invoice',
    name: 'XERO_TRIGGER_INVOICE_CREATED',
    output: [],
    inputs: [],
  },
];

/**
 * intents for xero
 */
exports.intents = [
  {
    title: 'Get Accounts',
    name: 'XERO_GET_ACCOUNTS',
    output: [],
    inputs: [
      {
        id: 'accountsFilterFormula',
        title: 'Filter search',
        type: 'CONDITIONAL',
        subtitle: 'Get Accounts that match the specified filters.',
        placeholder: 'field',
        supportedKeys: ['Id', 'name', 'type', 'CurrencyCode'],
        supportedOperators: [
          '$stringExactlyMatches',
          '$stringDoesNotExactlyMatch',
          '$dateTimeEquals',
          '$dateTimeBefore',
          '$dateTimeAfter',
          '$booleanTrue',
          '$booleanFalse',
        ],
      },
    ],
  },
  {
    title: 'Get Contacts',
    name: 'XERO_GET_CONTACTS',
    output: [],
    inputs: [
      {
        id: 'contactsFilterFormula',
        title: 'Filter search',
        type: 'CONDITIONAL',
        subtitle: 'Get Customers that match the specified filters.',
        placeholder: 'field',
        supportedKeys: [
          'Id',
          'name',
          'EmailAddress',
          'AccountNumber',
          'ContactStatus',
        ],
        supportedOperators: [
          '$stringExactlyMatches',
          '$stringDoesNotExactlyMatch',
          '$dateTimeEquals',
          '$dateTimeBefore',
          '$dateTimeAfter',
          '$booleanTrue',
          '$booleanFalse',
        ],
      },
    ],
  },
  {
    title: 'Create Customer',
    name: 'XERO_CREATE_CUSTOMER',
    output: [],
    inputs: [
      {
        id: 'name',
        title: 'Name',
        type: 'TEXTAREA',
        subtitle: 'Full name of contact/organization',
        required: true,
      },
      {
        id: 'firstName',
        title: 'First name',
        type: 'TEXTAREA',
        required: true,
      },
      {
        id: 'lastName',
        title: 'Last name',
        type: 'TEXTAREA',
        required: true,
      },
      {
        id: 'email',
        title: 'Email address',
        type: 'TEXTAREA',
      },
      {
        id: 'phone',
        title: 'Phone number',
        type: 'TEXTAREA',
      },
      {
        id: 'accountNumber',
        title: 'Account number',
        type: 'TEXTAREA',
      },
      {
        id: 'addressLine1',
        title: 'Billing street address',
        type: 'TEXTAREA',
      },
      {
        id: 'addressLine2',
        title: 'Billing street address line 2',
        type: 'TEXTAREA',
      },
      {
        id: 'billingCity',
        title: 'Billing city',
        type: 'TEXTAREA',
      },
      {
        id: 'state',
        title: 'Billing State or country subdivision code',
        type: 'TEXTAREA',
      },
      {
        id: 'country',
        title: 'Billing country',
        type: 'TEXTAREA',
      },
      {
        id: 'postalCode',
        title: 'Billing postal code',
        type: 'TEXTAREA',
      },
    ],
  },
  {
    title: 'Update Customer',
    name: 'XERO_UPDATE_CUSTOMER',
    output: [],
    inputs: [
      {
        id: 'name',
        title: 'Name',
        type: 'TEXTAREA',
        subtitle: 'Full name of contact/organization',
        required: true,
      },
      {
        id: 'customerId',
        title: 'Customer ID',
        type: 'TEXTAREA',
        subtitle: 'The ID of the customer to update.',
        placeholder: 'Customer ID',
        required: true,
      },
      {
        id: 'firstName',
        title: 'First name',
        type: 'TEXTAREA',
      },
      {
        id: 'lastName',
        title: 'Last name',
        type: 'TEXTAREA',
      },
      {
        id: 'email',
        title: 'Email address',
        type: 'TEXTAREA',
      },
      {
        id: 'phone',
        title: 'Phone number',
        type: 'TEXTAREA',
      },
      {
        id: 'accountNumber',
        title: 'Account number',
        type: 'TEXTAREA',
      },
      {
        id: 'addressLine1',
        title: 'Billing street address',
        type: 'TEXTAREA',
      },
      {
        id: 'addressLine2',
        title: 'Billing street address line 2',
        type: 'TEXTAREA',
      },
      {
        id: 'billingCity',
        title: 'Billing city',
        type: 'TEXTAREA',
      },
      {
        id: 'state',
        title: 'Billing State or country subdivision code',
        type: 'TEXTAREA',
      },
      {
        id: 'country',
        title: 'Billing country',
        type: 'TEXTAREA',
      },
      {
        id: 'postalCode',
        title: 'Billing postal code',
        type: 'TEXTAREA',
      },
    ],
  },
  {
    title: 'Get invoices',
    name: 'XERO_GET_INVOICES',
    output: [],
    inputs: [
      {
        id: 'invoicesFilterFormula',
        title: 'Filter search',
        type: 'CONDITIONAL',
        subtitle: 'Get invoices that match the specified filters.',
        placeholder: 'field',
        supportedKeys: [
          'Id',
          'invoiceNumber',
          'Contact.Name',
          'name',
          'status',
          'Reference',
          'Date',
          'DueDate',
        ],
        supportedOperators: [
          '$stringExactlyMatches',
          '$stringDoesNotExactlyMatch',
          '$dateTimeEquals',
          '$dateTimeBefore',
          '$dateTimeAfter',
          '$booleanTrue',
          '$booleanFalse',
        ],
      },
    ],
  },
  {
    title: 'Create invoice',
    name: 'XERO_CREATE_INVOICE',
    output: [],
    inputs: [
      {
        id: 'invoiceType',
        title: 'Invoice Type',
        type: 'ENUM',
        required: true,
        defaultValue: 'ACCREC',
        values: ['ACCPAY', 'ACCREC'],
      },
      {
        id: 'contactId',
        title: 'Contact',
        type: 'TEXTAREA',
        subtitle: 'The customer this invoice is associated with.',
        placeholder: 'Contact ID',
        required: true,
      },
      {
        id: 'lineItems',
        title: 'Line items',
        type: 'CODE',
        subtitle:
          'Enter an array of Line items including the description, quantity, and amount for each Line item.',
        placeholder:
          '[\n  {\n    "Description": "White T-Shirt", \n    "Quantity": "2",\n    "UnitAmount": "20.00",\n    "AccountCode": "200"\n  }\n]  \n  ',
        required: true,
      },
      {
        id: 'invoiceStatus',
        title: 'Status',
        type: 'ENUM',
        values: ['DRAFT', 'SUBMITTED', 'AUTHORISED'],
      },
      {
        id: 'date',
        title: 'Date',
        type: 'TEXTAREA',
        subtitle: 'Date the invoice was issued.',
        placeholder: 'YYYY-MM-DD',
      },
      {
        id: 'dueDate',
        title: 'Due Date',
        type: 'TEXTAREA',
        subtitle: 'Date the invoice is due.',
        placeholder: 'YYYY-MM-DD',
      },
      {
        id: 'currency',
        title: 'Currency',
        type: 'TEXTAREA',
        placeholder: 'USD',
      },
      {
        id: 'invoiceNumber',
        title: 'Invoice Number',
        type: 'TEXT',
        subtitle: 'Alpha numeric code identifying the invoice',
        placeholder: 'OIT00546',
      },
      {
        id: 'reference',
        title: 'Reference',
        type: 'TEXT',
      },
    ],
  },
  {
    title: 'Update invoice',
    name: 'XERO_UPDATE_INVOICE',
    output: [],
    inputs: [
      {
        id: 'invoiceId',
        title: 'Invoice ID',
        type: 'TEXTAREA',
        required: true,
      },
      {
        id: 'invoiceStatus',
        title: 'Status',
        type: 'ENUM',
        values: ['DRAFT', 'SUBMITTED', 'AUTHORISED'],
      },
      {
        id: 'reference',
        title: 'Reference',
        type: 'TEXT',
      },
    ],
  },
  {
    title: 'Send invoice',
    name: 'XERO_SEND_INVOICE',
    output: [],
    inputs: [
      {
        id: 'invoiceId',
        title: 'Invoice ID',
        type: 'TEXTAREA',
        required: true,
      },
      {
        id: 'sendToEmail',
        title: 'Send to email address',
        type: 'TEXTAREA',
        subtitle:
          'Updates the invoice’s billing email address to the email provided. If left blank, sends to the invoice’s existing billing email address.',
        placeholder: 'name@example.com',
      },
    ],
  },
  {
    title: 'Get payments',
    name: 'XERO_GET_PAYMENTS',
    output: [],
    inputs: [
      {
        id: 'paymentsFilterFormula',
        title: 'Filter search',
        type: 'CONDITIONAL',
        subtitle: 'Get payments that match the specified filters.',
        placeholder: 'field',
        supportedKeys: [
          'Id',
          'name',
          'status',
          'Invoice.InvoiceId',
          'Date',
          'Reference',
        ],
        supportedOperators: [
          '$stringExactlyMatches',
          '$stringDoesNotExactlyMatch',
          '$dateTimeEquals',
          '$dateTimeBefore',
          '$dateTimeAfter',
          '$booleanTrue',
          '$booleanFalse',
        ],
      },
    ],
  },
  {
    title: 'Create payments',
    name: 'XERO_CREATE_PAYMENT',
    output: [],
    inputs: [
      {
        id: 'totalAmount',
        title: 'Total amount',
        type: 'TEXTAREA',
        placeholder: '25.0',
        required: true,
      },
      {
        id: 'linkedInvoice',
        title: 'Linked invoice',
        type: 'TEXTAREA',
        subtitle: 'Applies this payment to an existing invoice in Xero.',
      },
      {
        id: 'accountId',
        title: 'Account ID',
        type: 'TEXTAREA',
        subtitle: 'ID of the Account used to make the payment.',
        placeholder: '{{settings.accountID}}',
        required: true,
      },
      {
        id: 'currency',
        title: 'Currency',
        type: 'TEXTAREA',
        placeholder: 'USD',
      },
    ],
  },
];

/**
 * integration class for xero
 */
exports.integration = {
  /**
   * name of integration
   */
  name: 'xero',

  /**
   * action step methods
   */
  actions: {
    /**
     * Get Accounts
     * method for XERO_GET_ACCOUNTS
     */
    getAccounts: (inputs, options) => {
      return new ActionStep({
        intent: 'XERO_GET_ACCOUNTS',
        actionType: 'xero',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Contacts
     * method for XERO_GET_CONTACTS
     */
    getContacts: (inputs, options) => {
      return new ActionStep({
        intent: 'XERO_GET_CONTACTS',
        actionType: 'xero',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Create Customer
     * method for XERO_CREATE_CUSTOMER
     */
    createCustomer: (inputs, options) => {
      return new ActionStep({
        intent: 'XERO_CREATE_CUSTOMER',
        actionType: 'xero',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Update Customer
     * method for XERO_UPDATE_CUSTOMER
     */
    updateCustomer: (inputs, options) => {
      return new ActionStep({
        intent: 'XERO_UPDATE_CUSTOMER',
        actionType: 'xero',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get invoices
     * method for XERO_GET_INVOICES
     */
    getInvoices: (inputs, options) => {
      return new ActionStep({
        intent: 'XERO_GET_INVOICES',
        actionType: 'xero',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Create invoice
     * method for XERO_CREATE_INVOICE
     */
    createInvoice: (inputs, options) => {
      return new ActionStep({
        intent: 'XERO_CREATE_INVOICE',
        actionType: 'xero',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Update invoice
     * method for XERO_UPDATE_INVOICE
     */
    updateInvoice: (inputs, options) => {
      return new ActionStep({
        intent: 'XERO_UPDATE_INVOICE',
        actionType: 'xero',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Send invoice
     * method for XERO_SEND_INVOICE
     */
    sendInvoice: (inputs, options) => {
      return new ActionStep({
        intent: 'XERO_SEND_INVOICE',
        actionType: 'xero',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get payments
     * method for XERO_GET_PAYMENTS
     */
    getPayments: (inputs, options) => {
      return new ActionStep({
        intent: 'XERO_GET_PAYMENTS',
        actionType: 'xero',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Create payments
     * method for XERO_CREATE_PAYMENT
     */
    createPayment: (inputs, options) => {
      return new ActionStep({
        intent: 'XERO_CREATE_PAYMENT',
        actionType: 'xero',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
  },

  /**
   * trigger step methods
   */
  triggers: {
    /**
     * New Account
     * method for XERO_TRIGGER_ACCOUNT_CREATED
     */
    accountCreated: (inputs) => {
      return new ActionTriggerStep({
        intent: 'XERO_TRIGGER_ACCOUNT_CREATED',
        actionType: 'xero',
        parameters: inputs,
      });
    },
    /**
     * New Customer
     * method for XERO_TRIGGER_CUSTOMER_CREATED
     */
    customerCreated: (inputs) => {
      return new ActionTriggerStep({
        intent: 'XERO_TRIGGER_CUSTOMER_CREATED',
        actionType: 'xero',
        parameters: inputs,
      });
    },
    /**
     * New Invoice
     * method for XERO_TRIGGER_INVOICE_CREATED
     */
    invoiceCreated: (inputs) => {
      return new ActionTriggerStep({
        intent: 'XERO_TRIGGER_INVOICE_CREATED',
        actionType: 'xero',
        parameters: inputs,
      });
    },
  },
};
