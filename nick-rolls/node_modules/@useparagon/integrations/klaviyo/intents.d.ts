/**
 * Create Campaign intent type
 */
type KlaviyoCreateCampaign = {
  /**
   * List ID
   * The ID of the list that this subscriber will be added to. Use Connect Portal Workflow Settings to allow users to select a list.
   *
   */
  listId: string;

  /**
   * Template
   * The ID of the email template object that will be the content of this campaign. Use Connect Portal Workflow Settings to allow users to select an template.
   *
   */
  template: string;

  /**
   * Subject
   *
   */
  subject: string;

  /**
   * From email
   * The email address campaign emails will be sent from. Use Connect Portal Workflow Settings to allow users to enter an email address.
   *
   */
  email: string;

  /**
   * From name
   * The name or label associated with the email address you're sending from. Use Connect Portal Workflow Settings to allow users to enter an name.
   *
   */
  senderName: string;

  /**
   * Campaign name
   *
   */
  campaignName: string;

  /**
   * Use smart sending
   * Limits the number of emails sent to an individual within a short period.
   *
   */
  smartSending: 'True' | 'False';
};

/**
 * Get Campaigns intent type
 */
type KlaviyoGetCampaign = {
  /**
   * Campaign name
   * Only return campaigns that match the specified name.
   *
   */
  campaignName?: string;
};

/**
 * Send Campaign intent type
 */
type KlaviyoSendCampaign = {
  /**
   * Campaign ID
   * The ID of the campaign that will be sent. Use Connect Portal Workflow Settings to allow users to select a campaign.
   *
   */
  campaignName: string;
};

/**
 * Create List intent type
 */
type KlaviyoCreateList = {
  /**
   * List name
   *
   */
  listName: string;
};

/**
 * Add subscriber to list intent type
 */
type KlaviyoAddSubscriberToList = {
  /**
   * List ID
   * The ID of the list that this subscriber will be added to. Use Connect Portal Workflow Settings to allow users to select a list.
   *
   */
  listId: string;

  /**
   * Email address
   *
   */
  email: string;

  /**
   * Phone number
   *
   */
  phoneNumber: string;

  /**
   * First name
   *
   * **Example**:
   * ```
   * George
   * ```
   */
  firstName?: string;

  /**
   * Last name
   *
   * **Example**:
   * ```
   * Washington
   * ```
   */
  lastName?: string;

  /**
   * Title
   *
   * **Example**:
   * ```
   * President
   * ```
   */
  title?: string;

  /**
   * Organization
   *
   * **Example**:
   * ```
   * U.S. Government
   * ```
   */
  organization?: string;

  /**
   * City
   *
   * **Example**:
   * ```
   * Mount Vernon
   * ```
   */
  city?: string;

  /**
   * Region
   *
   * **Example**:
   * ```
   * Virginia
   * ```
   */
  region?: string;

  /**
   * Zip
   *
   * **Example**:
   * ```
   * 22121
   * ```
   */
  zip?: string;

  /**
   * Country
   *
   * **Example**:
   * ```
   * United States
   * ```
   */
  country?: string;

  /**
   * Timezone
   *
   * **Example**:
   * ```
   * US/Eastern
   * ```
   */
  timezone?: string;

  /**
   * Custom properties
   *
   * **Example**:
   * ```
   * {
   *"sms_consent": true,
   *"example_property": "example value"
   *}
   * ```
   */
  customProperties?: string;
} & (
  | {
      /**
       * Profile Creation
       * Select ID to fill in Profile ID otherwise, a new profile will be created.
       *
       */
      sendingOptions?: undefined;
    }
  | {
      /**
       * Profile Creation
       * Select ID to fill in Profile ID otherwise, a new profile will be created.
       *
       */
      sendingOptions: 'True';

      /**
       * Profile ID
       *
       */
      profileId: string;
    }
  | {
      /**
       * Profile Creation
       * Select ID to fill in Profile ID otherwise, a new profile will be created.
       *
       */
      sendingOptions: 'False';
    }
);

/**
 * Remove Subscriber from list intent type
 */
type KlaviyoUnsubscribeFromList = {
  /**
   * List ID
   * The ID of the list that this subscriber will be added to. Use Connect Portal Workflow Settings to allow users to select a list.
   *
   */
  listId: string;

  /**
   * Profile ID
   *
   */
  profileId: string;
};

/**
 * Get Lists intent type
 */
type KlaviyoGetLists = {
  /**
   * List name
   * Only return lists that match the specified name.
   *
   */
  listName?: string;
};

/**
 * Get List Subscribers intent type
 */
type KlaviyoGetListSubscriber = {
  /**
   * List ID
   * The ID of the list that this subscriber will be added to. Use Connect Portal Workflow Settings to allow users to select a list.
   *
   */
  listId: string;

  /**
   * Emails
   * Return subscribers with the email(s) provided. Accepts an array or comma-separated list of email addresses.
   *
   */
  emails?: string;

  /**
   * Phone numbers
   * Return subscribers with the phone number(s) provided. Accepts an array or comma-separated list of phone numbers.
   *
   */
  phoneNumbers?: string;

  /**
   * Push tokens
   * Return subscribers with the push token(s) provided. Accepts an array or comma-separated list of push tokens.
   *
   */
  pushTokens?: string;
};

/**
 * Get Profile intent type
 */
type KlaviyoGetProfile = {
  /**
   * Person ID
   * The ID of the person whose profile will be retrieved.
   *
   */
  personId: string;
};

/**
 * Update Profile intent type
 */
type KlaviyoUpdateProfile = {
  /**
   * Person ID
   * The ID of the person whose profile will be retrieved.
   *
   */
  personId: string;

  /**
   * Email address
   *
   */
  email: string;

  /**
   * Phone number
   *
   */
  phoneNumber: string;

  /**
   * First name
   *
   * **Example**:
   * ```
   * George
   * ```
   */
  firstName?: string;

  /**
   * Last name
   *
   * **Example**:
   * ```
   * Washington
   * ```
   */
  lastName?: string;

  /**
   * Title
   *
   * **Example**:
   * ```
   * President
   * ```
   */
  title?: string;

  /**
   * Organization
   *
   * **Example**:
   * ```
   * U.S. Government
   * ```
   */
  organization?: string;

  /**
   * City
   *
   * **Example**:
   * ```
   * Mount Vernon
   * ```
   */
  city?: string;

  /**
   * Region
   *
   * **Example**:
   * ```
   * Virginia
   * ```
   */
  region?: string;

  /**
   * Zip
   *
   * **Example**:
   * ```
   * 22121
   * ```
   */
  zip?: string;

  /**
   * Country
   *
   * **Example**:
   * ```
   * United States
   * ```
   */
  country?: string;

  /**
   * Timezone
   *
   * **Example**:
   * ```
   * US/Eastern
   * ```
   */
  timezone?: string;

  /**
   * Custom properties
   *
   * **Example**:
   * ```
   * {
   *"sms_consent": true,
   *"example_property": "example value"
   *}
   * ```
   */
  customProperties?: string;
};

/**
 * Create Template intent type
 */
type KlaviyoCreateTemplate = {
  /**
   * Template name
   *
   */
  name: string;

  /**
   * Template HTML
   *
   */
  html: string;

  /**
   * Text
   * The plaintext version of the template
   *
   */
  text?: string;
};

/**
 * Get Templates intent type
 */
type KlaviyoGetTemplates = {
  /**
   * Template name
   * Only return templates that match the specified name.
   *
   */
  templateName?: string;
};

/**
 * Get Segments intent type
 */
type KlaviyoGetSegements = {
  /**
   * Segment name
   * Only return segments that match the specified name.
   *
   */
  segmentName?: string;
};

/**
 * Get Segment Subscribers intent type
 */
type KlaviyoGetSegmentSubscribers = {
  /**
   * Segment ID
   * The ID of the Segment whose subscribers to segments.
   *
   */
  segmentId: string;

  /**
   * Emails
   * Return subscribers with the email(s) provided. Accepts an array or comma-separated list of email addresses.
   *
   */
  emails?: string;

  /**
   * Phone numbers
   * Return subscribers with the phone number(s) provided. Accepts an array or comma-separated list of phone numbers.
   *
   */
  phoneNumbers?: string;

  /**
   * Push tokens
   * Return subscribers with the push token(s) provided. Accepts an array or comma-separated list of push tokens.
   *
   */
  pushTokens: string;
};

export type IntentToInputOutput = {
  /**
   * KLAVIYO_CREATE_CAMPAIGN
   */
  KLAVIYO_CREATE_CAMPAIGN: [KlaviyoCreateCampaign, any];

  /**
   * KLAVIYO_GET_CAMPAIGN
   */
  KLAVIYO_GET_CAMPAIGN: [KlaviyoGetCampaign, any];

  /**
   * KLAVIYO_SEND_CAMPAIGN
   */
  KLAVIYO_SEND_CAMPAIGN: [KlaviyoSendCampaign, any];

  /**
   * KLAVIYO_CREATE_LIST
   */
  KLAVIYO_CREATE_LIST: [KlaviyoCreateList, any];

  /**
   * KLAVIYO_ADD_SUBSCRIBER_TO_LIST
   */
  KLAVIYO_ADD_SUBSCRIBER_TO_LIST: [KlaviyoAddSubscriberToList, any];

  /**
   * KLAVIYO_UNSUBSCRIBE_FROM_LIST
   */
  KLAVIYO_UNSUBSCRIBE_FROM_LIST: [KlaviyoUnsubscribeFromList, any];

  /**
   * KLAVIYO_GET_LISTS
   */
  KLAVIYO_GET_LISTS: [KlaviyoGetLists, any];

  /**
   * KLAVIYO_GET_LIST_SUBSCRIBER
   */
  KLAVIYO_GET_LIST_SUBSCRIBER: [KlaviyoGetListSubscriber, any];

  /**
   * KLAVIYO_GET_PROFILE
   */
  KLAVIYO_GET_PROFILE: [KlaviyoGetProfile, any];

  /**
   * KLAVIYO_UPDATE_PROFILE
   */
  KLAVIYO_UPDATE_PROFILE: [KlaviyoUpdateProfile, any];

  /**
   * KLAVIYO_CREATE_TEMPLATE
   */
  KLAVIYO_CREATE_TEMPLATE: [KlaviyoCreateTemplate, any];

  /**
   * KLAVIYO_GET_TEMPLATES
   */
  KLAVIYO_GET_TEMPLATES: [KlaviyoGetTemplates, any];

  /**
   * KLAVIYO_GET_SEGEMENTS
   */
  KLAVIYO_GET_SEGEMENTS: [KlaviyoGetSegements, any];

  /**
   * KLAVIYO_GET_SEGMENT_SUBSCRIBERS
   */
  KLAVIYO_GET_SEGMENT_SUBSCRIBERS: [KlaviyoGetSegmentSubscribers, any];
};
