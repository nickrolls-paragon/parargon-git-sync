const { ActionStep, ActionTriggerStep } = require('@useparagon/core');

/**
 * this should be used whenever we are creating inputs for integrations/workflows
 */
exports.createInputs = (inputs) => inputs;

/**
 * inputs for klaviyo
 */
exports.inputs = [
  {
    id: 'subscriberLists',
    title: 'List',
    type: 'DYNAMIC_DATA_SOURCE',
  },
  {
    id: 'allCampaigns',
    title: 'Campaign',
    type: 'DYNAMIC_DATA_SOURCE',
  },
  {
    id: 'templates',
    title: 'Template',
    type: 'DYNAMIC_DATA_SOURCE',
  },
];

/**
 * triggers for klaviyo
 */
exports.triggers = [];

/**
 * intents for klaviyo
 */
exports.intents = [
  {
    title: 'Create Campaign',
    name: 'KLAVIYO_CREATE_CAMPAIGN',
    output: [],
    inputs: [
      {
        id: 'listId',
        title: 'List ID',
        type: 'TEXTAREA',
        subtitle:
          'The ID of the list that this subscriber will be added to. Use Connect Portal Workflow Settings to allow users to select a list.',
        required: true,
      },
      {
        id: 'template',
        title: 'Template ',
        type: 'TEXTAREA',
        subtitle:
          'The ID of the email template object that will be the content of this campaign. Use Connect Portal Workflow Settings to allow users to select an template.',
        required: true,
      },
      {
        id: 'subject',
        title: 'Subject ',
        type: 'TEXTAREA',
        required: true,
      },
      {
        id: 'email',
        title: 'From email ',
        type: 'TEXTAREA',
        subtitle:
          'The email address campaign emails will be sent from. Use Connect Portal Workflow Settings to allow users to enter an email address.',
        required: true,
      },
      {
        id: 'senderName',
        title: 'From name ',
        type: 'TEXTAREA',
        subtitle:
          "The name or label associated with the email address you're sending from. Use Connect Portal Workflow Settings to allow users to enter an name.",
        required: true,
      },
      {
        id: 'campaignName',
        title: 'Campaign name ',
        type: 'TEXTAREA',
        required: true,
      },
      {
        id: 'smartSending',
        title: 'Use smart sending ',
        type: 'ENUM',
        subtitle:
          'Limits the number of emails sent to an individual within a short period.',
        required: true,
        defaultValue: 'True',
        values: ['True', 'False'],
      },
    ],
  },
  {
    title: 'Get Campaigns',
    name: 'KLAVIYO_GET_CAMPAIGN',
    output: [],
    inputs: [
      {
        id: 'campaignName',
        title: 'Campaign name ',
        type: 'TEXTAREA',
        subtitle: 'Only return campaigns that match the specified name.',
      },
    ],
  },
  {
    title: 'Send Campaign',
    name: 'KLAVIYO_SEND_CAMPAIGN',
    output: [],
    inputs: [
      {
        id: 'campaignName',
        title: 'Campaign ID',
        type: 'TEXTAREA',
        subtitle:
          'The ID of the campaign that will be sent. Use Connect Portal Workflow Settings to allow users to select a campaign.',
        required: true,
      },
    ],
  },
  {
    title: 'Create List',
    name: 'KLAVIYO_CREATE_LIST',
    output: [],
    inputs: [
      {
        id: 'listName',
        title: 'List name',
        type: 'TEXTAREA',
        required: true,
      },
    ],
  },
  {
    title: 'Add subscriber to list',
    name: 'KLAVIYO_ADD_SUBSCRIBER_TO_LIST',
    output: [],
    inputs: [
      {
        id: 'listId',
        title: 'List ID',
        type: 'TEXTAREA',
        subtitle:
          'The ID of the list that this subscriber will be added to. Use Connect Portal Workflow Settings to allow users to select a list.',
        required: true,
      },
      {
        id: 'sendingOptions',
        title: 'Profile Creation',
        type: 'ENUM',
        subtitle:
          'Select ID to fill in Profile ID otherwise, a new profile will be created.',
        defaultValue: 'True',
        values: [
          {
            value: 'True',
            dependentInputs: [
              {
                id: 'profileId',
                title: 'Profile ID',
                type: 'TEXTAREA',
                required: true,
              },
            ],
          },
          'False',
        ],
      },
      {
        id: 'email',
        title: 'Email address',
        type: 'TEXTAREA',
        required: true,
      },
      {
        id: 'phoneNumber',
        title: 'Phone number',
        type: 'TEXTAREA',
        required: true,
      },
      {
        id: 'firstName',
        title: 'First name',
        type: 'TEXTAREA',
        placeholder: 'George',
      },
      {
        id: 'lastName',
        title: 'Last name',
        type: 'TEXTAREA',
        placeholder: 'Washington',
      },
      {
        id: 'title',
        title: 'Title',
        type: 'TEXTAREA',
        placeholder: 'President',
      },
      {
        id: 'organization',
        title: 'Organization',
        type: 'TEXTAREA',
        placeholder: 'U.S. Government',
      },
      {
        id: 'city',
        title: 'City',
        type: 'TEXTAREA',
        placeholder: 'Mount Vernon',
      },
      {
        id: 'region',
        title: 'Region',
        type: 'TEXTAREA',
        placeholder: 'Virginia',
      },
      {
        id: 'zip',
        title: 'Zip',
        type: 'TEXTAREA',
        placeholder: '22121',
      },
      {
        id: 'country',
        title: 'Country',
        type: 'TEXTAREA',
        placeholder: 'United States',
      },
      {
        id: 'timezone',
        title: 'Timezone',
        type: 'TEXTAREA',
        placeholder: 'US/Eastern',
      },
      {
        id: 'customProperties',
        title: 'Custom properties',
        type: 'CODE',
        placeholder:
          '{\n"sms_consent": true,\n"example_property": "example value"\n}',
      },
    ],
  },
  {
    title: 'Remove Subscriber from list',
    name: 'KLAVIYO_UNSUBSCRIBE_FROM_LIST',
    output: [],
    inputs: [
      {
        id: 'listId',
        title: 'List ID',
        type: 'TEXTAREA',
        subtitle:
          'The ID of the list that this subscriber will be added to. Use Connect Portal Workflow Settings to allow users to select a list.',
        required: true,
      },
      {
        id: 'profileId',
        title: 'Profile ID',
        type: 'TEXTAREA',
        required: true,
      },
    ],
  },
  {
    title: 'Get Lists',
    name: 'KLAVIYO_GET_LISTS',
    output: [],
    inputs: [
      {
        id: 'listName',
        title: 'List name',
        type: 'TEXTAREA',
        subtitle: 'Only return lists that match the specified name.',
      },
    ],
  },
  {
    title: 'Get List Subscribers',
    name: 'KLAVIYO_GET_LIST_SUBSCRIBER',
    output: [],
    inputs: [
      {
        id: 'listId',
        title: 'List ID',
        type: 'TEXTAREA',
        subtitle:
          'The ID of the list that this subscriber will be added to. Use Connect Portal Workflow Settings to allow users to select a list.',
        required: true,
      },
      {
        id: 'emails',
        title: 'Emails',
        type: 'TEXTAREA',
        subtitle:
          'Return subscribers with the email(s) provided. Accepts an array or comma-separated list of email addresses. ',
      },
      {
        id: 'phoneNumbers',
        title: 'Phone numbers',
        type: 'TEXTAREA',
        subtitle:
          'Return subscribers with the phone number(s) provided. Accepts an array or comma-separated list of phone numbers.',
      },
      {
        id: 'pushTokens',
        title: 'Push tokens',
        type: 'TEXTAREA',
        subtitle:
          'Return subscribers with the push token(s) provided. Accepts an array or comma-separated list of push tokens.',
      },
    ],
  },
  {
    title: 'Get Profile',
    name: 'KLAVIYO_GET_PROFILE',
    output: [],
    inputs: [
      {
        id: 'personId',
        title: 'Person ID',
        type: 'TEXTAREA',
        subtitle: 'The ID of the person whose profile will be retrieved.',
        required: true,
      },
    ],
  },
  {
    title: 'Update Profile',
    name: 'KLAVIYO_UPDATE_PROFILE',
    output: [],
    inputs: [
      {
        id: 'personId',
        title: 'Person ID',
        type: 'TEXTAREA',
        subtitle: 'The ID of the person whose profile will be retrieved.',
        required: true,
      },
      {
        id: 'email',
        title: 'Email address',
        type: 'TEXTAREA',
        required: true,
      },
      {
        id: 'phoneNumber',
        title: 'Phone number',
        type: 'TEXTAREA',
        required: true,
      },
      {
        id: 'firstName',
        title: 'First name',
        type: 'TEXTAREA',
        placeholder: 'George',
      },
      {
        id: 'lastName',
        title: 'Last name',
        type: 'TEXTAREA',
        placeholder: 'Washington',
      },
      {
        id: 'title',
        title: 'Title',
        type: 'TEXTAREA',
        placeholder: 'President',
      },
      {
        id: 'organization',
        title: 'Organization',
        type: 'TEXTAREA',
        placeholder: 'U.S. Government',
      },
      {
        id: 'city',
        title: 'City',
        type: 'TEXTAREA',
        placeholder: 'Mount Vernon',
      },
      {
        id: 'region',
        title: 'Region',
        type: 'TEXTAREA',
        placeholder: 'Virginia',
      },
      {
        id: 'zip',
        title: 'Zip',
        type: 'TEXTAREA',
        placeholder: '22121',
      },
      {
        id: 'country',
        title: 'Country',
        type: 'TEXTAREA',
        placeholder: 'United States',
      },
      {
        id: 'timezone',
        title: 'Timezone',
        type: 'TEXTAREA',
        placeholder: 'US/Eastern',
      },
      {
        id: 'customProperties',
        title: 'Custom properties',
        type: 'CODE',
        placeholder:
          '{\n"sms_consent": true,\n"example_property": "example value"\n}',
      },
    ],
  },
  {
    title: 'Create Template',
    name: 'KLAVIYO_CREATE_TEMPLATE',
    output: [],
    inputs: [
      {
        id: 'name',
        title: 'Template name ',
        type: 'TEXTAREA',
        required: true,
      },
      {
        id: 'html',
        title: 'Template HTML ',
        type: 'TEXTAREA',
        required: true,
      },
      {
        id: 'text',
        title: 'Text',
        type: 'TEXTAREA',
        subtitle: 'The plaintext version of the template',
      },
    ],
  },
  {
    title: 'Get Templates',
    name: 'KLAVIYO_GET_TEMPLATES',
    output: [],
    inputs: [
      {
        id: 'templateName',
        title: 'Template name ',
        type: 'TEXTAREA',
        subtitle: 'Only return templates that match the specified name.',
      },
    ],
  },
  {
    title: 'Get Segments',
    name: 'KLAVIYO_GET_SEGEMENTS',
    output: [],
    inputs: [
      {
        id: 'segmentName',
        title: 'Segment name ',
        type: 'TEXTAREA',
        subtitle: 'Only return segments that match the specified name.',
      },
    ],
  },
  {
    title: 'Get Segment Subscribers',
    name: 'KLAVIYO_GET_SEGMENT_SUBSCRIBERS',
    output: [],
    inputs: [
      {
        id: 'segmentId',
        title: 'Segment ID',
        type: 'TEXTAREA',
        subtitle: 'The ID of the Segment whose subscribers to segments.',
        required: true,
      },
      {
        id: 'emails',
        title: 'Emails',
        type: 'TEXTAREA',
        subtitle:
          'Return subscribers with the email(s) provided. Accepts an array or comma-separated list of email addresses.',
      },
      {
        id: 'phoneNumbers',
        title: 'Phone numbers',
        type: 'TEXTAREA',
        subtitle:
          'Return subscribers with the phone number(s) provided. Accepts an array or comma-separated list of phone numbers.',
      },
      {
        id: 'pushTokens',
        title: 'Push tokens',
        type: 'TEXTAREA',
        subtitle:
          'Return subscribers with the push token(s) provided. Accepts an array or comma-separated list of push tokens.',
        required: true,
      },
    ],
  },
];

/**
 * integration class for klaviyo
 */
exports.integration = {
  /**
   * name of integration
   */
  name: 'klaviyo',

  /**
   * action step methods
   */
  actions: {
    /**
     * Create Campaign
     * method for KLAVIYO_CREATE_CAMPAIGN
     */
    createCampaign: (inputs, options) => {
      return new ActionStep({
        intent: 'KLAVIYO_CREATE_CAMPAIGN',
        actionType: 'klaviyo',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Campaigns
     * method for KLAVIYO_GET_CAMPAIGN
     */
    getCampaign: (inputs, options) => {
      return new ActionStep({
        intent: 'KLAVIYO_GET_CAMPAIGN',
        actionType: 'klaviyo',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Send Campaign
     * method for KLAVIYO_SEND_CAMPAIGN
     */
    sendCampaign: (inputs, options) => {
      return new ActionStep({
        intent: 'KLAVIYO_SEND_CAMPAIGN',
        actionType: 'klaviyo',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Create List
     * method for KLAVIYO_CREATE_LIST
     */
    createList: (inputs, options) => {
      return new ActionStep({
        intent: 'KLAVIYO_CREATE_LIST',
        actionType: 'klaviyo',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Add subscriber to list
     * method for KLAVIYO_ADD_SUBSCRIBER_TO_LIST
     */
    addSubscriberToList: (inputs, options) => {
      return new ActionStep({
        intent: 'KLAVIYO_ADD_SUBSCRIBER_TO_LIST',
        actionType: 'klaviyo',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Remove Subscriber from list
     * method for KLAVIYO_UNSUBSCRIBE_FROM_LIST
     */
    unsubscribeFromList: (inputs, options) => {
      return new ActionStep({
        intent: 'KLAVIYO_UNSUBSCRIBE_FROM_LIST',
        actionType: 'klaviyo',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Lists
     * method for KLAVIYO_GET_LISTS
     */
    getLists: (inputs, options) => {
      return new ActionStep({
        intent: 'KLAVIYO_GET_LISTS',
        actionType: 'klaviyo',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get List Subscribers
     * method for KLAVIYO_GET_LIST_SUBSCRIBER
     */
    getListSubscriber: (inputs, options) => {
      return new ActionStep({
        intent: 'KLAVIYO_GET_LIST_SUBSCRIBER',
        actionType: 'klaviyo',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Profile
     * method for KLAVIYO_GET_PROFILE
     */
    getProfile: (inputs, options) => {
      return new ActionStep({
        intent: 'KLAVIYO_GET_PROFILE',
        actionType: 'klaviyo',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Update Profile
     * method for KLAVIYO_UPDATE_PROFILE
     */
    updateProfile: (inputs, options) => {
      return new ActionStep({
        intent: 'KLAVIYO_UPDATE_PROFILE',
        actionType: 'klaviyo',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Create Template
     * method for KLAVIYO_CREATE_TEMPLATE
     */
    createTemplate: (inputs, options) => {
      return new ActionStep({
        intent: 'KLAVIYO_CREATE_TEMPLATE',
        actionType: 'klaviyo',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Templates
     * method for KLAVIYO_GET_TEMPLATES
     */
    getTemplates: (inputs, options) => {
      return new ActionStep({
        intent: 'KLAVIYO_GET_TEMPLATES',
        actionType: 'klaviyo',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Segments
     * method for KLAVIYO_GET_SEGEMENTS
     */
    getSegements: (inputs, options) => {
      return new ActionStep({
        intent: 'KLAVIYO_GET_SEGEMENTS',
        actionType: 'klaviyo',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Segment Subscribers
     * method for KLAVIYO_GET_SEGMENT_SUBSCRIBERS
     */
    getSegmentSubscribers: (inputs, options) => {
      return new ActionStep({
        intent: 'KLAVIYO_GET_SEGMENT_SUBSCRIBERS',
        actionType: 'klaviyo',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
  },

  /**
   * trigger step methods
   */
  triggers: {},
};
