const { ActionStep, ActionTriggerStep } = require('@useparagon/core');

/**
 * this should be used whenever we are creating inputs for integrations/workflows
 */
exports.createInputs = (inputs) => inputs;

/**
 * inputs for trello
 */
exports.inputs = [
  {
    id: 'boards',
    title: 'Board',
    type: 'DYNAMIC_DATA_SOURCE',
  },
  {
    id: 'comboFields',
    title: 'List',
    type: 'COMBO_INPUT_DATA_SOURCE',
    mainInputSource: {
      id: 'boards',
      title: 'Board',
      type: 'DYNAMIC_DATA_SOURCE',
    },
    dependentInputSource: {
      id: 'lists',
      title: 'List',
      type: 'DYNAMIC_DATA_SOURCE',
    },
  },
  {
    id: 'membersOfBoard',
    title: 'Member',
    type: 'COMBO_INPUT_DATA_SOURCE',
    mainInputSource: {
      id: 'boards',
      title: 'Board',
      type: 'DYNAMIC_DATA_SOURCE',
    },
    dependentInputSource: {
      id: 'members',
      title: 'Members',
      type: 'DYNAMIC_DATA_SOURCE',
    },
  },
];

/**
 * triggers for trello
 */
exports.triggers = [
  {
    title: 'Board Created',
    name: 'TRELLO_TRIGGER_BOARD_CREATED',
    output: [],
    inputs: [],
  },
  {
    title: 'Board Updated',
    name: 'TRELLO_TRIGGER_BOARD_UPDATED',
    output: [],
    inputs: [
      {
        id: 'boardId',
        title: 'Board',
        type: 'TEXTAREA',
        subtitle:
          'Select a Board to watch its updates. Use Connect Portal Workflow Settings to allow users to select a Trello Board.',
        placeholder: '{{settings.board}}',
        required: true,
      },
    ],
  },
  {
    title: 'Card Created',
    name: 'TRELLO_TRIGGER_CARD_CREATED',
    output: [],
    inputs: [
      {
        id: 'boardId',
        title: 'Board',
        type: 'TEXTAREA',
        subtitle:
          'Select a Board to watch for new cards. Use Connect Portal Workflow Settings to allow users to select a Trello Board.',
        placeholder: '{{settings.board}}',
        required: true,
      },
    ],
  },
  {
    title: 'Card Updated',
    name: 'TRELLO_TRIGGER_CARD_UPDATED',
    output: [],
    inputs: [
      {
        id: 'boardId',
        title: 'Board',
        type: 'TEXTAREA',
        subtitle:
          'Select a Board to watch for updated cards. Use Connect Portal Workflow Settings to allow users to select a Trello Board.',
        placeholder: '{{settings.board}}',
        required: true,
      },
    ],
  },
  {
    title: 'Comment Created',
    name: 'TRELLO_TRIGGER_COMMENT_CREATED',
    output: [],
    inputs: [
      {
        id: 'boardId',
        title: 'Board',
        type: 'TEXTAREA',
        subtitle:
          'Select a Board to watch for card comments. Use Connect Portal Workflow Settings to allow users to select a Trello Board.',
        placeholder: '{{settings.board}}',
        required: true,
      },
    ],
  },
];

/**
 * intents for trello
 */
exports.intents = [
  {
    title: 'Search Cards',
    name: 'TRELLO_SEARCH_CARDS',
    output: [],
    inputs: [
      {
        id: 'query',
        title: 'Search Query',
        type: 'TEXTAREA',
        subtitle:
          'Search for cards by a phrase in their title, description, or other properties.',
        required: true,
      },
    ],
  },
  {
    title: 'Get Cards In Board',
    name: 'TRELLO_GET_CARDS_IN_BOARD',
    output: [],
    inputs: [
      {
        id: 'boardId',
        title: 'Board',
        type: 'TEXTAREA',
        subtitle:
          'Select a Board to get cards from. Use Connect Portal Workflow Settings to allow users to select a Trello Board.',
        required: true,
      },
    ],
  },
  {
    title: 'Create Card',
    name: 'TRELLO_CREATE_CARD',
    output: [],
    inputs: [
      {
        id: 'listId',
        title: 'List',
        type: 'TEXTAREA',
        subtitle:
          'Select a List that this card should appear in. Use Connect Portal Workflow Settings to allow users to select a Trello List.',
        placeholder: '{{settings.list}}',
        required: true,
      },
      {
        id: 'name',
        title: 'Name',
        type: 'TEXTAREA',
      },
      {
        id: 'description',
        title: 'Description',
        type: 'TEXTAREA',
      },
      {
        id: 'position',
        title: 'Position',
        type: 'TEXTAREA',
        subtitle:
          'Set the position of the new card to top, bottom, or a positive number.',
      },
      {
        id: 'dueDate',
        title: 'Due Date',
        type: 'TEXTAREA',
        subtitle: 'Specify a date for this card to be due.',
      },
      {
        id: 'isDueDateComplete',
        title: 'Due Date Complete',
        type: 'ENUM',
        subtitle:
          'Specify whether or not the card’s due date should be marked complete.',
        defaultValue: 'no',
        values: ['no', 'yes'],
      },
      {
        id: 'memberIds',
        title: 'Member IDs',
        type: 'TEXTAREA',
        subtitle: 'Specify an array of member IDs to add to the card.',
      },
      {
        id: 'labelIds',
        title: 'Label IDs',
        type: 'TEXTAREA',
        subtitle: 'Specify an array of label IDs to add to the card.',
      },
      {
        id: 'address',
        title: 'Address',
        type: 'TEXTAREA',
        subtitle: 'For use with Trello’s Map View.',
      },
      {
        id: 'locationName',
        title: 'Location Name',
        type: 'TEXTAREA',
        subtitle: 'For use with Trello’s Map View.',
      },
      {
        id: 'coordinates',
        title: 'Coordinates',
        type: 'TEXTAREA',
        subtitle:
          'For use with Trello’s Map View. Use a lat,long-formatted string.',
      },
    ],
  },
  {
    title: 'Update Card',
    name: 'TRELLO_UPDATE_CARD',
    output: [],
    inputs: [
      {
        id: 'cardId',
        title: 'Card ID',
        type: 'TEXTAREA',
        subtitle: 'The ID of the card to update.',
        required: true,
      },
      {
        id: 'boardId',
        title: 'Board',
        type: 'TEXTAREA',
        subtitle:
          'Select a Board to move this card into. Use Connect Portal Workflow Settings to allow users to select a Trello Board. If this field is specified, a List must also be specified below.',
        placeholder: '{{settings.board}}',
      },
      {
        id: 'listId',
        title: 'List',
        type: 'TEXTAREA',
        subtitle:
          'Select a List that this card should appear in. Use Connect Portal Workflow Settings to allow users to select a Trello List.',
        placeholder: '{{settings.list}}',
      },
      {
        id: 'name',
        title: 'Name',
        type: 'TEXTAREA',
      },
      {
        id: 'description',
        title: 'Description',
        type: 'TEXTAREA',
      },
      {
        id: 'isClosed',
        title: 'Closed',
        type: 'ENUM',
        subtitle: 'Specify whether or not the card should be archived.',
        values: ['no', 'yes'],
      },
      {
        id: 'position',
        title: 'Position',
        type: 'TEXTAREA',
        subtitle:
          'Set the position of the new card to top, bottom, or a positive number.',
      },
      {
        id: 'dueDate',
        title: 'Due Date',
        type: 'TEXTAREA',
        subtitle: 'Specify a date for this card to be due.',
      },
      {
        id: 'isDueDateComplete',
        title: 'Due Date Complete',
        type: 'ENUM',
        subtitle:
          'Specify whether or not the card’s due date should be marked complete.',
        values: ['no', 'yes'],
      },
      {
        id: 'memberIds',
        title: 'Member IDs',
        type: 'TEXTAREA',
        subtitle: 'Specify an array of member IDs to add to the card.',
      },
      {
        id: 'labelIds',
        title: 'Label IDs',
        type: 'TEXTAREA',
        subtitle: 'Specify an array of label IDs to add to the card.',
      },
      {
        id: 'address',
        title: 'Address',
        type: 'TEXTAREA',
        subtitle: 'For use with Trello’s Map View.',
      },
      {
        id: 'locationName',
        title: 'Location Name',
        type: 'TEXTAREA',
        subtitle: 'For use with Trello’s Map View.',
      },
      {
        id: 'coordinates',
        title: 'Coordinates',
        type: 'TEXTAREA',
        subtitle:
          'For use with Trello’s Map View. Use a lat,long-formatted string.',
      },
    ],
  },
  {
    title: 'Delete Card',
    name: 'TRELLO_DELETE_CARD',
    output: [],
    inputs: [
      {
        id: 'cardId',
        title: 'Card ID',
        type: 'TEXTAREA',
        subtitle: 'The ID of the card to delete.',
        required: true,
      },
    ],
  },
  {
    title: 'Get Lists In Board',
    name: 'TRELLO_GET_LISTS_IN_BOARD',
    output: [],
    inputs: [
      {
        id: 'boardId',
        title: 'Board',
        type: 'TEXTAREA',
        subtitle:
          'Select a Board to get lists from. Use Connect Portal Workflow Settings to allow users to select a Trello Board.',
        required: true,
      },
    ],
  },
  {
    title: 'Search Boards',
    name: 'TRELLO_SEARCH_BOARDS',
    output: [],
    inputs: [
      {
        id: 'query',
        title: 'Search Query',
        type: 'TEXTAREA',
        subtitle:
          'Search for boards by a phrase in their title or other properties.',
        required: true,
      },
    ],
  },
];

/**
 * integration class for trello
 */
exports.integration = {
  /**
   * name of integration
   */
  name: 'trello',

  /**
   * action step methods
   */
  actions: {
    /**
     * Search Cards
     * method for TRELLO_SEARCH_CARDS
     */
    searchCards: (inputs, options) => {
      return new ActionStep({
        intent: 'TRELLO_SEARCH_CARDS',
        actionType: 'trello',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Cards In Board
     * method for TRELLO_GET_CARDS_IN_BOARD
     */
    getCardsInBoard: (inputs, options) => {
      return new ActionStep({
        intent: 'TRELLO_GET_CARDS_IN_BOARD',
        actionType: 'trello',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Create Card
     * method for TRELLO_CREATE_CARD
     */
    createCard: (inputs, options) => {
      return new ActionStep({
        intent: 'TRELLO_CREATE_CARD',
        actionType: 'trello',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Update Card
     * method for TRELLO_UPDATE_CARD
     */
    updateCard: (inputs, options) => {
      return new ActionStep({
        intent: 'TRELLO_UPDATE_CARD',
        actionType: 'trello',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Delete Card
     * method for TRELLO_DELETE_CARD
     */
    deleteCard: (inputs, options) => {
      return new ActionStep({
        intent: 'TRELLO_DELETE_CARD',
        actionType: 'trello',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Lists In Board
     * method for TRELLO_GET_LISTS_IN_BOARD
     */
    getListsInBoard: (inputs, options) => {
      return new ActionStep({
        intent: 'TRELLO_GET_LISTS_IN_BOARD',
        actionType: 'trello',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Search Boards
     * method for TRELLO_SEARCH_BOARDS
     */
    searchBoards: (inputs, options) => {
      return new ActionStep({
        intent: 'TRELLO_SEARCH_BOARDS',
        actionType: 'trello',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
  },

  /**
   * trigger step methods
   */
  triggers: {
    /**
     * Board Created
     * method for TRELLO_TRIGGER_BOARD_CREATED
     */
    boardCreated: (inputs) => {
      return new ActionTriggerStep({
        intent: 'TRELLO_TRIGGER_BOARD_CREATED',
        actionType: 'trello',
        parameters: inputs,
      });
    },
    /**
     * Board Updated
     * method for TRELLO_TRIGGER_BOARD_UPDATED
     */
    boardUpdated: (inputs) => {
      return new ActionTriggerStep({
        intent: 'TRELLO_TRIGGER_BOARD_UPDATED',
        actionType: 'trello',
        parameters: inputs,
      });
    },
    /**
     * Card Created
     * method for TRELLO_TRIGGER_CARD_CREATED
     */
    cardCreated: (inputs) => {
      return new ActionTriggerStep({
        intent: 'TRELLO_TRIGGER_CARD_CREATED',
        actionType: 'trello',
        parameters: inputs,
      });
    },
    /**
     * Card Updated
     * method for TRELLO_TRIGGER_CARD_UPDATED
     */
    cardUpdated: (inputs) => {
      return new ActionTriggerStep({
        intent: 'TRELLO_TRIGGER_CARD_UPDATED',
        actionType: 'trello',
        parameters: inputs,
      });
    },
    /**
     * Comment Created
     * method for TRELLO_TRIGGER_COMMENT_CREATED
     */
    commentCreated: (inputs) => {
      return new ActionTriggerStep({
        intent: 'TRELLO_TRIGGER_COMMENT_CREATED',
        actionType: 'trello',
        parameters: inputs,
      });
    },
  },
};
