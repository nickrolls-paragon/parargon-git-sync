const { ActionStep, ActionTriggerStep } = require('@useparagon/core');

/**
 * this should be used whenever we are creating inputs for integrations/workflows
 */
exports.createInputs = (inputs) => inputs;

/**
 * inputs for dynamicsfinance
 */
exports.inputs = [];

/**
 * triggers for dynamicsfinance
 */
exports.triggers = [];

/**
 * intents for dynamicsfinance
 */
exports.intents = [
  {
    title: 'Get Accounts',
    name: 'DYNAMICS_365_FINANCE_GET_ACCOUNTS',
    output: [],
    inputs: [
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
    ],
  },
  {
    title: 'Create Vendor',
    name: 'DYNAMICS_365_FINANCE_CREATE_VENDOR',
    output: [],
    inputs: [
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
      {
        id: 'VendorAccountNumber',
        title: 'Vendor Account',
        type: 'TEXTAREA',
        subtitle: 'Specify a unique identifier for the Vendor Account.',
        required: true,
      },
      {
        id: 'VendorName',
        title: 'Name',
        type: 'TEXTAREA',
        subtitle: 'Specify the display name of the Vendor.',
        required: true,
      },
      {
        id: 'VendorGroupId',
        title: 'Group',
        type: 'TEXTAREA',
        subtitle: 'Specify the Vendor Group for the new vendor.',
        required: true,
      },
      {
        id: 'OrganizationNumber',
        title: 'Organization Number',
        type: 'TEXTAREA',
      },
      {
        id: 'VendorPartyType',
        title: 'Type',
        type: 'EDITABLE_ENUM',
        subtitle: 'Specify the type of vendor.',
        defaultValue: 'Organization',
        values: ['Organization', 'Person'],
      },
      {
        id: 'vendorAdditionalFields',
        title: 'Additional Fields',
        type: 'CODE',
        subtitle:
          'Specify additional fields to include on this vendor as JSON. For example, you may specify a different billing address here. See the metadata for available fields.',
        placeholder:
          '[\n    {\n      "AddressCity": "Seattle",\n      "AddressZipCode": "98104",\n    },\n  ]',
      },
    ],
  },
  {
    title: 'Update Vendor',
    name: 'DYNAMICS_365_FINANCE_UPDATE_VENDOR',
    output: [],
    inputs: [
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
      {
        id: 'vendorId',
        title: 'Vendor ID',
        type: 'TEXTAREA',
        subtitle: 'Specify the VendorAccountNumber of the Vendor to update.',
        required: true,
      },
      {
        id: 'VendorName',
        title: 'Name',
        type: 'TEXTAREA',
        subtitle: 'Specify the display name of the Vendor.',
      },
      {
        id: 'VendorGroupId',
        title: 'Group',
        type: 'TEXTAREA',
        subtitle: 'Specify the Vendor Group for the new vendor.',
      },
      {
        id: 'OrganizationNumber',
        title: 'Organization Number',
        type: 'TEXTAREA',
      },
      {
        id: 'VendorPartyType',
        title: 'Type',
        type: 'EDITABLE_ENUM',
        subtitle: 'Specify the type of vendor.',
        values: ['Organization', 'Person'],
      },
      {
        id: 'vendorAdditionalFields',
        title: 'Additional Fields',
        type: 'CODE',
        subtitle:
          'Specify additional fields to include on this vendor as JSON. For example, you may specify a different billing address here. See the metadata for available fields.',
        placeholder:
          '[\n    {\n      "AddressCity": "Seattle",\n      "AddressZipCode": "98104",\n    },\n  ]',
      },
    ],
  },
  {
    title: 'Get Vendor by ID',
    name: 'DYNAMICS_365_FINANCE_GET_VENDOR_BY_ID',
    output: [],
    inputs: [
      {
        id: 'vendorId',
        title: 'Vendor ID',
        type: 'TEXTAREA',
        subtitle: 'Specify the VendorAccountNumber of the Vendor to Search.',
        required: true,
      },
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
    ],
  },
  {
    title: 'Search for Vendor',
    name: 'DYNAMICS_365_FINANCE_SEARCH_VENDORS',
    output: [],
    inputs: [
      {
        id: 'vendorFilterFormula',
        title: 'Filter search',
        type: 'CONDITIONAL',
        subtitle: 'Search for records that match specified filters.',
        supportedKeys: [
          'VendorAccountNumber',
          'VendorName',
          'VendorGroupId',
          'OrganizationNumber',
          'PrimaryEmailAddress',
        ],
        supportedOperators: [
          '$stringExactlyMatches',
          '$stringDoesNotExactlyMatch',
          '$stringContains',
        ],
      },
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
    ],
  },
  {
    title: 'Create Bill',
    name: 'DYNAMICS_365_FINANCE_CREATE_BILL',
    output: [],
    inputs: [
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
      {
        id: 'dataAreaId',
        title: 'Company',
        type: 'TEXTAREA',
        subtitle: 'Specify the company code of the company incurring the bill.',
        placeholder: 'dat',
        required: true,
      },
      {
        id: 'InvoiceAccount',
        title: 'Invoice Account',
        type: 'TEXTAREA',
        subtitle: 'Specify the vendor account sending the bill.',
        required: true,
      },
      {
        id: 'InvoiceNumber',
        title: 'Invoice Number',
        type: 'TEXTAREA',
        subtitle: 'Specify an internal invoice identification number.',
        placeholder: '001',
        required: true,
      },
      {
        id: 'InvoiceDescription',
        title: 'Invoice Description',
        type: 'TEXTAREA',
      },
      {
        id: 'InvoiceDate',
        title: 'Invoice Date',
        type: 'TEXTAREA',
        placeholder: '2022-01-01',
      },
      {
        id: 'Date',
        title: 'Posting Date',
        type: 'TEXTAREA',
        placeholder: '2022-01-01',
      },
      {
        id: 'DueDate',
        title: 'Due Date',
        type: 'TEXTAREA',
        placeholder: '2022-01-01',
      },
      {
        id: 'IsOnHold',
        title: 'Invoice On Hold Status',
        type: 'EDITABLE_ENUM',
        values: ['Yes', 'No'],
      },
      {
        id: 'billAdditionalFields',
        title: 'Additional Fields',
        type: 'CODE',
        subtitle:
          'Specify additional fields to include on this bill as JSON. For example, you may specify a cash discount date here. See the metadata for available fields.',
        placeholder:
          '[\n    {\n      "CashDiscountDate": "2022-10-01",\n      "PrimaryContactTwitter": "iamjohn@twitter"\n    },\n  ]',
      },
    ],
  },
  {
    title: 'Update Bill',
    name: 'DYNAMICS_365_FINANCE_UPDATE_BILL',
    output: [],
    inputs: [
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
      {
        id: 'billId',
        title: 'Bill Header Reference',
        type: 'TEXTAREA',
        subtitle: 'Specify the bill header reference of the bill to update.',
        placeholder: 'DAT-000055',
        required: true,
      },
      {
        id: 'InvoiceAccount',
        title: 'Invoice Account',
        type: 'TEXTAREA',
        subtitle: 'Specify the vendor account sending the bill.',
      },
      {
        id: 'InvoiceNumber',
        title: 'Invoice Number',
        type: 'TEXTAREA',
        subtitle: 'Specify an internal invoice identification number.',
        placeholder: '001',
      },
      {
        id: 'InvoiceDescription',
        title: 'Invoice Description',
        type: 'TEXTAREA',
      },
      {
        id: 'InvoiceDate',
        title: 'Invoice Date',
        type: 'TEXTAREA',
        placeholder: '2022-01-01',
      },
      {
        id: 'Date',
        title: 'Posting Date',
        type: 'TEXTAREA',
        placeholder: '2022-01-01',
      },
      {
        id: 'DueDate',
        title: 'Due Date',
        type: 'TEXTAREA',
        placeholder: '2022-01-01',
      },
      {
        id: 'IsOnHold',
        title: 'Invoice On Hold Status',
        type: 'EDITABLE_ENUM',
        values: ['Yes', 'No'],
      },
      {
        id: 'billAdditionalFields',
        title: 'Additional Fields',
        type: 'CODE',
        subtitle:
          'Specify additional fields to include on this bill as JSON. For example, you may specify a cash discount date here. See the metadata for available fields.',
        placeholder:
          '[\n    {\n      "CashDiscountDate": "2022-10-01",\n      "PrimaryContactTwitter": "iamjohn@twitter"\n    },\n  ]',
      },
    ],
  },
  {
    title: 'Get Bill by ID',
    name: 'DYNAMICS_365_FINANCE_GET_BILL_BY_ID',
    output: [],
    inputs: [
      {
        id: 'billId',
        title: 'Bill Header Reference',
        type: 'TEXTAREA',
        subtitle: 'Specify the bill header reference of the Bill to fetch.',
        placeholder: 'DAT-000055',
        required: true,
      },
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
    ],
  },
  {
    title: 'Search for Bill',
    name: 'DYNAMICS_365_FINANCE_SEARCH_BILLS',
    output: [],
    inputs: [
      {
        id: 'billFilterFormula',
        title: 'Filter search',
        type: 'CONDITIONAL',
        subtitle: 'Search for records that match specified filters.',
        supportedKeys: [
          'InvoiceAccount',
          'InvoiceNumber',
          'InvoiceDate',
          'Date',
          'DueDate',
          'IsOnHold',
        ],
        supportedOperators: [
          '$stringExactlyMatches',
          '$stringDoesNotExactlyMatch',
          '$stringContains',
          '$dateTimeAfter',
          '$dateTimeBefore',
          '$dateTimeEquals',
          '$booleanFalse',
          '$booleanTrue',
        ],
      },
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
    ],
  },
  {
    title: 'Delete Bill',
    name: 'DYNAMICS_365_FINANCE_DELETE_BILL',
    output: [],
    inputs: [
      {
        id: 'billId',
        title: 'Bill Header Reference',
        type: 'TEXTAREA',
        subtitle: 'Specify the bill header reference of the Bill to delete.',
        placeholder: 'DAT-000055',
        required: true,
      },
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
    ],
  },
  {
    title: 'Create Bill Line Item',
    name: 'DYNAMICS_365_FINANCE_CREATE_BILL_LINE_ITEM',
    output: [],
    inputs: [
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
      {
        id: 'HeaderReference',
        title: 'Parent Bill Header Reference',
        type: 'TEXTAREA',
        subtitle: 'Specify the Header Reference of the Parent Bill.',
        placeholder: 'DAT-000052',
        required: true,
      },
      {
        id: 'ItemNumber',
        title: 'Item Number',
        type: 'TEXTAREA',
        required: true,
      },
      {
        id: 'ProcurementCategoryName',
        title: 'Procurement Category',
        type: 'TEXTAREA',
        placeholder: 'CORP PROCUREMENT CATEGORIES',
      },
      {
        id: 'ReceiveNow',
        title: 'Quantity',
        type: 'TEXTAREA',
        placeholder: '1',
      },
      {
        id: 'Unit',
        title: 'Unit',
        type: 'TEXTAREA',
      },
    ],
  },
  {
    title: 'Update Bill Line Item',
    name: 'DYNAMICS_365_FINANCE_UPDATE_BILL_LINE_ITEM',
    output: [],
    inputs: [
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
      {
        id: 'HeaderReference',
        title: 'Parent Bill Header Reference',
        type: 'TEXTAREA',
        subtitle: 'Specify the Header Reference of the Parent Bill.',
        placeholder: 'DAT-000052',
        required: true,
      },
      {
        id: 'InvoiceLineNumber',
        title: 'Invoice Line Number',
        type: 'TEXTAREA',
        subtitle: 'Specify the record ID of the Bill Line Item to update.',
        placeholder: '2',
        required: true,
      },
      {
        id: 'ProcurementCategoryName',
        title: 'Procurement Category',
        type: 'TEXTAREA',
        placeholder: 'CORP PROCUREMENT CATEGORIES',
      },
      {
        id: 'ReceiveNow',
        title: 'Quantity',
        type: 'TEXTAREA',
        placeholder: '1',
      },
      {
        id: 'Unit',
        title: 'Unit',
        type: 'TEXTAREA',
      },
    ],
  },
  {
    title: 'Get Bill Line Item by ID',
    name: 'DYNAMICS_365_FINANCE_GET_BILL_LINE_ITEM_BY_ID',
    output: [],
    inputs: [
      {
        id: 'HeaderReference',
        title: 'Parent Bill Header Reference',
        type: 'TEXTAREA',
        subtitle: 'Specify the Header Reference of the Parent Bill.',
        placeholder: 'DAT-000052',
        required: true,
      },
      {
        id: 'InvoiceLineNumber',
        title: 'Invoice Line Number',
        type: 'TEXTAREA',
        subtitle:
          'Specify the invoice line number of the Bill Line Item to fetch.',
        placeholder: '2',
        required: true,
      },
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
    ],
  },
  {
    title: 'Search for Bill Line Item',
    name: 'DYNAMICS_365_FINANCE_SEARCH_BILL_LINE_ITEMS',
    output: [],
    inputs: [
      {
        id: 'billLineItemFilterFormula',
        title: 'Filter search',
        type: 'CONDITIONAL',
        subtitle: 'Search for records that match specified filters.',
        supportedKeys: [
          'ItemNumber',
          'ItemName',
          'ProcurementCategoryName',
          'UnitPrice',
          'HeaderReference',
        ],
        supportedOperators: [
          '$stringExactlyMatches',
          '$stringDoesNotExactlyMatch',
          '$stringContains',
          '$numberEquals',
          '$numberDoesNotEqual',
          '$numberGreaterThan',
          '$numberLessThan',
        ],
      },
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
    ],
  },
  {
    title: 'Delete Bill Line Item',
    name: 'DYNAMICS_365_FINANCE_DELETE_BILL_LINE_ITEM',
    output: [],
    inputs: [
      {
        id: 'HeaderReference',
        title: 'Parent Bill Header Reference',
        type: 'TEXTAREA',
        subtitle:
          'Specify the record ID of the parent Bill of the Bill Line Item to delete.',
        placeholder: 'DAT-000052',
        required: true,
      },
      {
        id: 'InvoiceLineNumber',
        title: 'Invoice Line Number',
        type: 'TEXTAREA',
        subtitle:
          'Specify the invoice line number of the Bill Line Item to delete.',
        placeholder: '2',
        required: true,
      },
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
    ],
  },
  {
    title: 'Create Customer',
    name: 'DYNAMICS_365_FINANCE_CREATE_CUSTOMER',
    output: [],
    inputs: [
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
      {
        id: 'CustomerAccount',
        title: 'Customer Account',
        type: 'TEXTAREA',
        subtitle: 'Specify a unique identifier for the Customer Account.',
        required: true,
      },
      {
        id: 'Name',
        title: 'Name',
        type: 'TEXTAREA',
        required: true,
      },
      {
        id: 'CustomerGroupId',
        title: 'Customer Group',
        type: 'TEXTAREA',
        subtitle: 'Specify the Customer Group for the new customer.',
        required: true,
      },
      {
        id: 'OrganizationNumber',
        title: 'Organization Number',
        type: 'TEXTAREA',
      },
      {
        id: 'PartyType',
        title: 'Type',
        type: 'EDITABLE_ENUM',
        subtitle: 'Specify the type of customer.',
        defaultValue: 'Organization',
        values: ['Organization', 'Person'],
      },
      {
        id: 'SalesCurrencyCode',
        title: 'Currency',
        type: 'TEXTAREA',
        subtitle:
          'The three-letter currency code associated with this customer.',
        defaultValue: 'USD',
      },
      {
        id: 'PartyCountry',
        title: 'Country',
        type: 'TEXTAREA',
        defaultValue: 'USA',
      },
      {
        id: 'AddressStreet',
        title: 'Street Address',
        type: 'TEXTAREA',
      },
      {
        id: 'AddressCity',
        title: 'City',
        type: 'TEXTAREA',
      },
      {
        id: 'AddressZipCode',
        title: 'Zip Code',
        type: 'TEXTAREA',
      },
      {
        id: 'PrimaryContactPhone',
        title: 'Phone Number',
        type: 'TEXTAREA',
      },
      {
        id: 'PrimaryContactEmail',
        title: 'Email Address',
        type: 'TEXTAREA',
      },
      {
        id: 'customerAdditionalFields',
        title: 'Additional Fields',
        type: 'CODE',
        subtitle:
          'Specify additional fields to include on this customer as JSON. For example, you may specify a different billing address here. See the metadata for available fields.',
        placeholder:
          '[\n    {\n      "InvoiceAddressCity": "N.Y",\n      "PrimaryContactTwitter": "iamjohn@twitter"\n    },\n  ]',
      },
    ],
  },
  {
    title: 'Update Customer',
    name: 'DYNAMICS_365_FINANCE_UPDATE_CUSTOMER',
    output: [],
    inputs: [
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
      {
        id: 'customerId',
        title: 'Customer Account Code',
        type: 'TEXTAREA',
        subtitle:
          'Specify the customer account code of the customer to update.',
        placeholder: 'DAK',
        required: true,
      },
      {
        id: 'Name',
        title: 'Name',
        type: 'TEXTAREA',
      },
      {
        id: 'CustomerGroupId',
        title: 'Customer Group',
        type: 'TEXTAREA',
        subtitle: 'Specify the Customer Group for the new customer.',
      },
      {
        id: 'OrganizationNumber',
        title: 'Organization Number',
        type: 'TEXTAREA',
      },
      {
        id: 'PartyType',
        title: 'Type',
        type: 'EDITABLE_ENUM',
        subtitle: 'Specify the type of customer.',
        values: ['Organization', 'Person'],
      },
      {
        id: 'SalesCurrencyCode',
        title: 'Currency',
        type: 'TEXTAREA',
        subtitle:
          'The three-letter currency code associated with this customer.',
      },
      {
        id: 'PartyCountry',
        title: 'Country',
        type: 'TEXTAREA',
      },
      {
        id: 'AddressStreet',
        title: 'Street Address',
        type: 'TEXTAREA',
      },
      {
        id: 'AddressCity',
        title: 'City',
        type: 'TEXTAREA',
      },
      {
        id: 'AddressZipCode',
        title: 'Zip Code',
        type: 'TEXTAREA',
      },
      {
        id: 'PrimaryContactPhone',
        title: 'Phone Number',
        type: 'TEXTAREA',
      },
      {
        id: 'PrimaryContactEmail',
        title: 'Email Address',
        type: 'TEXTAREA',
      },
      {
        id: 'customerAdditionalFields',
        title: 'Additional Fields',
        type: 'CODE',
        subtitle:
          'Specify additional fields to include on this customer as JSON. For example, you may specify a different billing address here. See the metadata for available fields.',
        placeholder:
          '[\n    {\n      "InvoiceAddressCity": "N.Y",\n      "PrimaryContactTwitter": "iamjohn@twitter"\n    },\n  ]',
      },
    ],
  },
  {
    title: 'Get Customer by ID',
    name: 'DYNAMICS_365_FINANCE_GET_CUSTOMER_BY_ID',
    output: [],
    inputs: [
      {
        id: 'customerId',
        title: 'Customer Account Code',
        type: 'TEXTAREA',
        subtitle: 'Specify the customer account code of the customer to fetch.',
        placeholder: 'DAK',
        required: true,
      },
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
    ],
  },
  {
    title: 'Search for Customer',
    name: 'DYNAMICS_365_FINANCE_SEARCH_CUSTOMERS',
    output: [],
    inputs: [
      {
        id: 'customerFilterFormula',
        title: 'Filter search',
        type: 'CONDITIONAL',
        subtitle: 'Search for records that match specified filters.',
        supportedKeys: [
          'CustomerAccount',
          'Name',
          'CustomerGroupId',
          'OrganizationNumber',
          'PartyType',
        ],
        supportedOperators: [
          '$stringExactlyMatches',
          '$stringDoesNotExactlyMatch',
          '$stringContains',
        ],
      },
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
    ],
  },
  {
    title: 'Delete Customer',
    name: 'DYNAMICS_365_FINANCE_DELETE_CUSTOMER',
    output: [],
    inputs: [
      {
        id: 'customerId',
        title: 'Customer Account Code',
        type: 'TEXTAREA',
        subtitle:
          'Specify the customer account code of the customer to delete.',
        placeholder: 'DAK',
        required: true,
      },
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
    ],
  },
  {
    title: 'Create Invoice',
    name: 'DYNAMICS_365_FINANCE_CREATE_INVOICE',
    output: [],
    inputs: [
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
      {
        id: 'CustomerAccount',
        title: 'Customer Account',
        type: 'TEXTAREA',
        subtitle:
          'Specify the Customer Account of the recipient of this invoice.',
        required: true,
      },
      {
        id: 'InvoiceAccount',
        title: 'Invoice Account',
        type: 'TEXTAREA',
        required: true,
      },
      {
        id: 'CurrencyCode',
        title: 'Currency',
        type: 'TEXTAREA',
        subtitle:
          'The three-letter currency code associated with this invoice.',
        required: true,
        defaultValue: 'USD',
      },
      {
        id: 'InvoiceDate',
        title: 'Invoice Date',
        type: 'TEXTAREA',
        subtitle: 'Accepts ISO 8601 date format.',
        placeholder: '2022-01-01',
        required: true,
      },
      {
        id: 'DueDate',
        title: 'Due Date',
        type: 'TEXTAREA',
        placeholder: '2022-01-01',
      },
      {
        id: 'MethodOfPayment',
        title: 'Method of Payment',
        type: 'TEXTAREA',
      },
      {
        id: 'TermsOfPayment',
        title: 'Terms of Payment',
        type: 'TEXTAREA',
      },
      {
        id: 'IsOneTimeCustomer',
        title: 'One-time customer',
        type: 'EDITABLE_ENUM',
        values: ['Yes', 'No'],
      },
    ],
  },
  {
    title: 'Update Invoice',
    name: 'DYNAMICS_365_FINANCE_UPDATE_INVOICE',
    output: [],
    inputs: [
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
      {
        id: 'InvoiceIdentifier',
        title: 'Invoice ID',
        type: 'TEXTAREA',
        subtitle: 'Specify the record ID of the Invoice to update.',
        required: true,
      },
      {
        id: 'CustomerAccount',
        title: 'Customer Account',
        type: 'TEXTAREA',
        subtitle:
          'Specify the Customer Account of the recipient of this invoice.',
      },
      {
        id: 'InvoiceAccount',
        title: 'Invoice Account',
        type: 'TEXTAREA',
      },
      {
        id: 'CurrencyCode',
        title: 'Currency',
        type: 'TEXTAREA',
        subtitle:
          'The three-letter currency code associated with this invoice.',
      },
      {
        id: 'InvoiceDate',
        title: 'Invoice Date',
        type: 'TEXTAREA',
        subtitle: 'Accepts ISO 8601 date format.',
        placeholder: '2022-01-01',
      },
      {
        id: 'DueDate',
        title: 'Due Date',
        type: 'TEXTAREA',
        placeholder: '2022-01-01',
      },
      {
        id: 'MethodOfPayment',
        title: 'Method of Payment',
        type: 'TEXTAREA',
      },
      {
        id: 'TermsOfPayment',
        title: 'Terms of Payment',
        type: 'TEXTAREA',
      },
      {
        id: 'IsOneTimeCustomer',
        title: 'One-time customer',
        type: 'EDITABLE_ENUM',
        values: ['Yes', 'No'],
      },
    ],
  },
  {
    title: 'Get Invoice by ID',
    name: 'DYNAMICS_365_FINANCE_GET_INVOICE_BY_ID',
    output: [],
    inputs: [
      {
        id: 'InvoiceIdentifier',
        title: 'Invoice ID',
        type: 'TEXTAREA',
        subtitle: 'Specify the record ID of the Invoice to fetch.',
        required: true,
      },
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
    ],
  },
  {
    title: 'Search for Invoice',
    name: 'DYNAMICS_365_FINANCE_SEARCH_INVOICES',
    output: [],
    inputs: [
      {
        id: 'invoiceFilterFormula',
        title: 'Filter search',
        type: 'CONDITIONAL',
        subtitle: 'Search for records that match specified filters.',
        supportedKeys: ['CustomerAccount', 'InvoiceDate', 'DueDate'],
        supportedOperators: [
          '$stringExactlyMatches',
          '$stringDoesNotExactlyMatch',
          '$stringContains',
          '$dateTimeAfter',
          '$dateTimeBefore',
          '$dateTimeEquals',
        ],
      },
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
    ],
  },
  {
    title: 'Delete Invoice',
    name: 'DYNAMICS_365_FINANCE_DELETE_INVOICE',
    output: [],
    inputs: [
      {
        id: 'InvoiceIdentifier',
        title: 'Invoice ID',
        type: 'TEXTAREA',
        subtitle: 'Specify the record ID of the Invoice to delete.',
        required: true,
      },
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
    ],
  },
  {
    title: 'Create Invoice Line Item',
    name: 'DYNAMICS_365_FINANCE_CREATE_INVOICE_LINE_ITEM',
    output: [],
    inputs: [
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
      {
        id: 'ParentRecId',
        title: 'Parent Invoice ID',
        type: 'TEXTAREA',
        subtitle:
          'Specify the record ID of the parent invoice to create line item.',
        placeholder: '5637146829',
        required: true,
      },
      {
        id: 'LineNumber',
        title: 'Invoice Line Item ID',
        type: 'TEXTAREA',
        subtitle:
          'Specify Line Number of the Invoice Line Item to create line item.',
        placeholder: '1',
        required: true,
      },
      {
        id: 'MainAccountDisplayValue',
        title: 'Main Account',
        type: 'TEXTAREA',
        subtitle:
          'Specify the revenue account to use to post to the general ledger.',
        required: true,
      },
      {
        id: 'Description',
        title: 'Description',
        type: 'TEXTAREA',
      },
      {
        id: 'SalesTaxGroupId',
        title: 'Sales Tax Group',
        type: 'TEXTAREA',
        subtitle: 'Specify the sales tax group for this line item',
      },
      {
        id: 'Quantity',
        title: 'Quantity',
        type: 'TEXTAREA',
        placeholder: '1',
      },
      {
        id: 'UnitPrice',
        title: 'Unit Price',
        type: 'TEXTAREA',
      },
    ],
  },
  {
    title: 'Update Invoice Line Item',
    name: 'DYNAMICS_365_FINANCE_UPDATE_INVOICE_LINE_ITEM',
    output: [],
    inputs: [
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
      {
        id: 'ParentRecId',
        title: 'Parent Invoice ID',
        type: 'TEXTAREA',
        subtitle:
          'Specify the record ID of the parent invoice for this Invoice Line Item.',
        placeholder: '5637146829',
        required: true,
      },
      {
        id: 'LineNumber',
        title: 'Invoice Line Item ID',
        type: 'TEXTAREA',
        subtitle: 'Specify Line Number of the Invoice Line Item to update.',
        placeholder: '1',
        required: true,
      },
      {
        id: 'MainAccountDisplayValue',
        title: 'Main Account',
        type: 'TEXTAREA',
        subtitle:
          'Specify the revenue account to use to post to the general ledger.',
      },
      {
        id: 'Description',
        title: 'Description',
        type: 'TEXTAREA',
      },
      {
        id: 'SalesTaxGroupId',
        title: 'Sales Tax Group',
        type: 'TEXTAREA',
        subtitle: 'Specify the sales tax group for this line item',
      },
      {
        id: 'Quantity',
        title: 'Quantity',
        type: 'TEXTAREA',
        placeholder: '1',
      },
      {
        id: 'UnitPrice',
        title: 'Unit Price',
        type: 'TEXTAREA',
      },
    ],
  },
  {
    title: 'Get Invoice Line Item by ID',
    name: 'DYNAMICS_365_FINANCE_GET_INVOICE_LINE_ITEM_BY_ID',
    output: [],
    inputs: [
      {
        id: 'ParentRecId',
        title: 'Parent Invoice ID',
        type: 'TEXTAREA',
        subtitle:
          'Specify the record ID of the parent invoice for the Invoice Line Item to fetch.',
        placeholder: '5637146829',
        required: true,
      },
      {
        id: 'LineNumber',
        title: 'Invoice Line Item ID',
        type: 'TEXTAREA',
        subtitle: 'Specify the Line Number of the Invoice Line Item to fetch.',
        placeholder: '1',
        required: true,
      },
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
    ],
  },
  {
    title: 'Search for Invoice Line Item',
    name: 'DYNAMICS_365_FINANCE_SEARCH_INVOICE_LINE_ITEMS',
    output: [],
    inputs: [
      {
        id: 'invoiceLineFilterFormula',
        title: 'Filter search',
        type: 'CONDITIONAL',
        subtitle: 'Search for records that match specified filters.',
        supportedKeys: [
          'Quantity',
          'MainAccountDisplayValue',
          'SalesTaxGroupId',
          'ParentRecId',
        ],
        supportedOperators: [
          '$stringExactlyMatches',
          '$stringDoesNotExactlyMatch',
          '$stringContains',
          '$numberEquals',
          '$numberDoesNotEqual',
          '$numberGreaterThan',
          '$numberLessThan',
        ],
      },
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
    ],
  },
  {
    title: 'Delete Invoice Line Item',
    name: 'DYNAMICS_365_FINANCE_DELETE_INVOICE_LINE_ITEM',
    output: [],
    inputs: [
      {
        id: 'ParentRecId',
        title: 'Parent Invoice ID',
        type: 'TEXTAREA',
        subtitle:
          'Specify the record ID of the parent invoice for the Invoice Line Item to delete.',
        placeholder: '5637146829',
        required: true,
      },
      {
        id: 'LineNumber',
        title: 'Invoice Line Item ID',
        type: 'TEXTAREA',
        subtitle: 'Specify the Line Number of the Invoice Line Item to delete.',
        placeholder: '1',
        required: true,
      },
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
    ],
  },
  {
    title: 'Create Payment Journal',
    name: 'DYNAMICS_365_FINANCE_CREATE_PAYMENT_JOURNAL',
    output: [],
    inputs: [
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
      {
        id: 'JournalName',
        title: 'Name',
        type: 'TEXTAREA',
        subtitle: 'Specify a Journal Name to use.',
        required: true,
      },
      {
        id: 'Description',
        title: 'Description',
        type: 'TEXTAREA',
      },
    ],
  },
  {
    title: 'Update Payment Journal',
    name: 'DYNAMICS_365_FINANCE_UPDATE_PAYMENT_JOURNAL',
    output: [],
    inputs: [
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
      {
        id: 'JournalBatchNumber',
        title: 'Journal Batch Number',
        type: 'TEXTAREA',
        subtitle:
          'Specify the Journal Batch Number of the Payment Journal to update.',
        placeholder: 'DAT-000001',
        required: true,
      },
      {
        id: 'Description',
        title: 'Description',
        type: 'TEXTAREA',
      },
    ],
  },
  {
    title: 'Get Payment Journal by ID',
    name: 'DYNAMICS_365_FINANCE_GET_PAYMENT_JOURNAL_BY_ID',
    output: [],
    inputs: [
      {
        id: 'JournalBatchNumber',
        title: 'Journal Batch Number',
        type: 'TEXTAREA',
        subtitle:
          'Specify the record ID of the Payment Journal to fetch all associated Payments.',
        placeholder: 'DAT-000001',
        required: true,
      },
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
    ],
  },
  {
    title: 'Search for Payment Journal',
    name: 'DYNAMICS_365_FINANCE_SEARCH_PAYMENT_JOURNALS',
    output: [],
    inputs: [
      {
        id: 'paymentJournalFilterFormula',
        title: 'Filter search',
        type: 'CONDITIONAL',
        subtitle: 'Search for records that match specified filters.',
        supportedKeys: ['JournalName', 'JournalBatchNumber'],
        supportedOperators: [
          '$stringExactlyMatches',
          '$stringDoesNotExactlyMatch',
          '$dateTimeAfter',
          '$dateTimeBefore',
          '$dateTimeEquals',
          '$booleanFalse',
          '$booleanTrue',
        ],
      },
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
    ],
  },
  {
    title: 'Delete Payment Journal',
    name: 'DYNAMICS_365_FINANCE_DELETE_PAYMENT_JOURNAL',
    output: [],
    inputs: [
      {
        id: 'JournalBatchNumber',
        title: 'Journal Batch Number',
        type: 'TEXTAREA',
        subtitle:
          'Specify the record ID of the Payment Journal to delete all associated Payments.',
        placeholder: 'DAT-000001',
        required: true,
      },
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
    ],
  },
  {
    title: 'Create Payment Journal Line Item',
    name: 'DYNAMICS_365_FINANCE_CREATE_PAYMENT_JOURNAL_LINE_ITEM',
    output: [],
    inputs: [
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
      {
        id: 'JournalBatchNumber',
        title: 'Journal Batch Number',
        type: 'TEXTAREA',
        subtitle:
          'Specify the batch number of the Parent Payment Journal to fetch all associated Payments.',
        placeholder: 'DAT-000001',
        required: true,
      },
      {
        id: 'LineNumber',
        title: 'Payment Journal Line Item ID',
        type: 'TEXTAREA',
        subtitle: 'Specify Line Number for the Payment Journal Line Item.',
        placeholder: '1',
        required: true,
      },
      {
        id: 'TransactionDate',
        title: 'Date',
        type: 'TEXTAREA',
        subtitle: 'Accepts ISO 8601 date format.',
        placeholder: '2022-01-01',
        required: true,
      },
      {
        id: 'Voucher',
        title: 'Voucher',
        type: 'TEXTAREA',
        subtitle:
          'Specify the voucher number for the transaction. Voucher series are set up in the Number sequences page in Dynamics Finance.',
        required: true,
      },
      {
        id: 'MarkedInvoice',
        title: 'Invoice ID',
        type: 'TEXTAREA',
      },
      {
        id: 'CreditAmount',
        title: 'Credit',
        type: 'TEXTAREA',
        subtitle:
          'Specify a credit amount in the currency that is selected for the journal line.',
      },
      {
        id: 'CurrencyCode',
        title: 'Currency',
        type: 'TEXTAREA',
        subtitle:
          'The three-letter currency code associated with this invoice.',
        required: true,
        defaultValue: 'USD',
      },
    ],
  },
  {
    title: 'Update Payment Journal Line Item',
    name: 'DYNAMICS_365_FINANCE_UPDATE_PAYMENT_JOURNAL_LINE_ITEM',
    output: [],
    inputs: [
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
      {
        id: 'JournalBatchNumber',
        title: 'Journal Batch Number',
        type: 'TEXTAREA',
        subtitle:
          'Specify the batch number of the Parent Payment Journal to update its child line item.',
        placeholder: 'DAT-000001',
        required: true,
      },
      {
        id: 'LineNumber',
        title: 'Payment Journal Line Item ID',
        type: 'TEXTAREA',
        subtitle:
          'Specify Line Number of the Payment Journal Line Item to update.',
        placeholder: '1',
        required: true,
      },
      {
        id: 'TransactionDate',
        title: 'Date',
        type: 'TEXTAREA',
        subtitle: 'Accepts ISO 8601 date format.',
        placeholder: '2022-01-01',
      },
      {
        id: 'Voucher',
        title: 'Voucher',
        type: 'TEXTAREA',
        subtitle:
          'Specify the voucher number for the transaction. Voucher series are set up in the Number sequences page in Dynamics Finance.',
      },
      {
        id: 'MarkedInvoice',
        title: 'Invoice ID',
        type: 'TEXTAREA',
      },
      {
        id: 'CreditAmount',
        title: 'Credit',
        type: 'TEXTAREA',
        subtitle:
          'Specify a credit amount in the currency that is selected for the journal line.',
      },
      {
        id: 'CurrencyCode',
        title: 'Currency',
        type: 'TEXTAREA',
        subtitle:
          'The three-letter currency code associated with this invoice.',
      },
    ],
  },
  {
    title: 'Get Payment Journal Line Item by ID',
    name: 'DYNAMICS_365_FINANCE_GET_PAYMENT_JOURNAL_LINE_ITEM_BY_ID',
    output: [],
    inputs: [
      {
        id: 'JournalBatchNumber',
        title: 'Journal Batch Number',
        type: 'TEXTAREA',
        subtitle:
          'Specify the record ID of the Payment Journal to fetch all associated Payments.',
        placeholder: 'DAT-000001',
        required: true,
      },
      {
        id: 'LineNumber',
        title: 'Payment Journal Line Item ID',
        type: 'TEXTAREA',
        subtitle:
          'Specify the Line Number of the Payment Journal Line Item to fetch.',
        placeholder: '1',
        required: true,
      },
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
    ],
  },
  {
    title: 'Search for Payment Journal Line Item',
    name: 'DYNAMICS_365_FINANCE_SEARCH_PAYMENT_JOURNAL_LINE_ITEMS',
    output: [],
    inputs: [
      {
        id: 'paymentJournalLineFilterFormula',
        title: 'Filter search',
        type: 'CONDITIONAL',
        subtitle: 'Search for records that match specified filters.',
        supportedKeys: ['TransactionDate', 'LineNumber'],
        supportedOperators: [
          '$stringExactlyMatches',
          '$stringDoesNotExactlyMatch',
          '$stringContains',
          '$numberEquals',
          '$numberDoesNotEqual',
          '$numberGreaterThan',
          '$numberLessThan',
          '$dateTimeAfter',
          '$dateTimeBefore',
          '$dateTimeEquals',
        ],
      },
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
    ],
  },
  {
    title: 'Delete Payment Journal Line Item',
    name: 'DYNAMICS_365_FINANCE_DELETE_PAYMENT_JOURNAL_LINE_ITEM',
    output: [],
    inputs: [
      {
        id: 'JournalBatchNumber',
        title: 'Journal Batch Number',
        type: 'TEXTAREA',
        subtitle:
          'Specify the batch number of the Parent Payment Journal to delete its child line item.',
        placeholder: 'DAT-000001',
        required: true,
      },
      {
        id: 'LineNumber',
        title: 'Payment Journal Line Item ID',
        type: 'TEXTAREA',
        subtitle:
          'Specify the Line Number of the Payment Journal Line Item to delete.',
        placeholder: '1',
        required: true,
      },
      {
        id: 'recordType',
        title: 'Record Type',
        type: 'TEXT',
      },
    ],
  },
];

/**
 * integration class for dynamicsfinance
 */
exports.integration = {
  /**
   * name of integration
   */
  name: 'dynamicsfinance',

  /**
   * action step methods
   */
  actions: {
    /**
     * Get Accounts
     * method for DYNAMICS_365_FINANCE_GET_ACCOUNTS
     */
    dynamics365FinanceGetAccounts: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_GET_ACCOUNTS',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Create Vendor
     * method for DYNAMICS_365_FINANCE_CREATE_VENDOR
     */
    dynamics365FinanceCreateVendor: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_CREATE_VENDOR',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Update Vendor
     * method for DYNAMICS_365_FINANCE_UPDATE_VENDOR
     */
    dynamics365FinanceUpdateVendor: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_UPDATE_VENDOR',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Vendor by ID
     * method for DYNAMICS_365_FINANCE_GET_VENDOR_BY_ID
     */
    dynamics365FinanceGetVendorById: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_GET_VENDOR_BY_ID',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Search for Vendor
     * method for DYNAMICS_365_FINANCE_SEARCH_VENDORS
     */
    dynamics365FinanceSearchVendors: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_SEARCH_VENDORS',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Create Bill
     * method for DYNAMICS_365_FINANCE_CREATE_BILL
     */
    dynamics365FinanceCreateBill: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_CREATE_BILL',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Update Bill
     * method for DYNAMICS_365_FINANCE_UPDATE_BILL
     */
    dynamics365FinanceUpdateBill: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_UPDATE_BILL',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Bill by ID
     * method for DYNAMICS_365_FINANCE_GET_BILL_BY_ID
     */
    dynamics365FinanceGetBillById: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_GET_BILL_BY_ID',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Search for Bill
     * method for DYNAMICS_365_FINANCE_SEARCH_BILLS
     */
    dynamics365FinanceSearchBills: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_SEARCH_BILLS',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Delete Bill
     * method for DYNAMICS_365_FINANCE_DELETE_BILL
     */
    dynamics365FinanceDeleteBill: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_DELETE_BILL',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Create Bill Line Item
     * method for DYNAMICS_365_FINANCE_CREATE_BILL_LINE_ITEM
     */
    dynamics365FinanceCreateBillLineItem: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_CREATE_BILL_LINE_ITEM',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Update Bill Line Item
     * method for DYNAMICS_365_FINANCE_UPDATE_BILL_LINE_ITEM
     */
    dynamics365FinanceUpdateBillLineItem: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_UPDATE_BILL_LINE_ITEM',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Bill Line Item by ID
     * method for DYNAMICS_365_FINANCE_GET_BILL_LINE_ITEM_BY_ID
     */
    dynamics365FinanceGetBillLineItemById: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_GET_BILL_LINE_ITEM_BY_ID',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Search for Bill Line Item
     * method for DYNAMICS_365_FINANCE_SEARCH_BILL_LINE_ITEMS
     */
    dynamics365FinanceSearchBillLineItems: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_SEARCH_BILL_LINE_ITEMS',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Delete Bill Line Item
     * method for DYNAMICS_365_FINANCE_DELETE_BILL_LINE_ITEM
     */
    dynamics365FinanceDeleteBillLineItem: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_DELETE_BILL_LINE_ITEM',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Create Customer
     * method for DYNAMICS_365_FINANCE_CREATE_CUSTOMER
     */
    dynamics365FinanceCreateCustomer: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_CREATE_CUSTOMER',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Update Customer
     * method for DYNAMICS_365_FINANCE_UPDATE_CUSTOMER
     */
    dynamics365FinanceUpdateCustomer: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_UPDATE_CUSTOMER',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Customer by ID
     * method for DYNAMICS_365_FINANCE_GET_CUSTOMER_BY_ID
     */
    dynamics365FinanceGetCustomerById: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_GET_CUSTOMER_BY_ID',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Search for Customer
     * method for DYNAMICS_365_FINANCE_SEARCH_CUSTOMERS
     */
    dynamics365FinanceSearchCustomers: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_SEARCH_CUSTOMERS',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Delete Customer
     * method for DYNAMICS_365_FINANCE_DELETE_CUSTOMER
     */
    dynamics365FinanceDeleteCustomer: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_DELETE_CUSTOMER',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Create Invoice
     * method for DYNAMICS_365_FINANCE_CREATE_INVOICE
     */
    dynamics365FinanceCreateInvoice: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_CREATE_INVOICE',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Update Invoice
     * method for DYNAMICS_365_FINANCE_UPDATE_INVOICE
     */
    dynamics365FinanceUpdateInvoice: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_UPDATE_INVOICE',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Invoice by ID
     * method for DYNAMICS_365_FINANCE_GET_INVOICE_BY_ID
     */
    dynamics365FinanceGetInvoiceById: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_GET_INVOICE_BY_ID',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Search for Invoice
     * method for DYNAMICS_365_FINANCE_SEARCH_INVOICES
     */
    dynamics365FinanceSearchInvoices: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_SEARCH_INVOICES',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Delete Invoice
     * method for DYNAMICS_365_FINANCE_DELETE_INVOICE
     */
    dynamics365FinanceDeleteInvoice: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_DELETE_INVOICE',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Create Invoice Line Item
     * method for DYNAMICS_365_FINANCE_CREATE_INVOICE_LINE_ITEM
     */
    dynamics365FinanceCreateInvoiceLineItem: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_CREATE_INVOICE_LINE_ITEM',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Update Invoice Line Item
     * method for DYNAMICS_365_FINANCE_UPDATE_INVOICE_LINE_ITEM
     */
    dynamics365FinanceUpdateInvoiceLineItem: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_UPDATE_INVOICE_LINE_ITEM',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Invoice Line Item by ID
     * method for DYNAMICS_365_FINANCE_GET_INVOICE_LINE_ITEM_BY_ID
     */
    dynamics365FinanceGetInvoiceLineItemById: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_GET_INVOICE_LINE_ITEM_BY_ID',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Search for Invoice Line Item
     * method for DYNAMICS_365_FINANCE_SEARCH_INVOICE_LINE_ITEMS
     */
    dynamics365FinanceSearchInvoiceLineItems: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_SEARCH_INVOICE_LINE_ITEMS',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Delete Invoice Line Item
     * method for DYNAMICS_365_FINANCE_DELETE_INVOICE_LINE_ITEM
     */
    dynamics365FinanceDeleteInvoiceLineItem: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_DELETE_INVOICE_LINE_ITEM',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Create Payment Journal
     * method for DYNAMICS_365_FINANCE_CREATE_PAYMENT_JOURNAL
     */
    dynamics365FinanceCreatePaymentJournal: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_CREATE_PAYMENT_JOURNAL',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Update Payment Journal
     * method for DYNAMICS_365_FINANCE_UPDATE_PAYMENT_JOURNAL
     */
    dynamics365FinanceUpdatePaymentJournal: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_UPDATE_PAYMENT_JOURNAL',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Payment Journal by ID
     * method for DYNAMICS_365_FINANCE_GET_PAYMENT_JOURNAL_BY_ID
     */
    dynamics365FinanceGetPaymentJournalById: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_GET_PAYMENT_JOURNAL_BY_ID',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Search for Payment Journal
     * method for DYNAMICS_365_FINANCE_SEARCH_PAYMENT_JOURNALS
     */
    dynamics365FinanceSearchPaymentJournals: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_SEARCH_PAYMENT_JOURNALS',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Delete Payment Journal
     * method for DYNAMICS_365_FINANCE_DELETE_PAYMENT_JOURNAL
     */
    dynamics365FinanceDeletePaymentJournal: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_DELETE_PAYMENT_JOURNAL',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Create Payment Journal Line Item
     * method for DYNAMICS_365_FINANCE_CREATE_PAYMENT_JOURNAL_LINE_ITEM
     */
    dynamics365FinanceCreatePaymentJournalLineItem: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_CREATE_PAYMENT_JOURNAL_LINE_ITEM',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Update Payment Journal Line Item
     * method for DYNAMICS_365_FINANCE_UPDATE_PAYMENT_JOURNAL_LINE_ITEM
     */
    dynamics365FinanceUpdatePaymentJournalLineItem: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_UPDATE_PAYMENT_JOURNAL_LINE_ITEM',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Payment Journal Line Item by ID
     * method for DYNAMICS_365_FINANCE_GET_PAYMENT_JOURNAL_LINE_ITEM_BY_ID
     */
    dynamics365FinanceGetPaymentJournalLineItemById: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_GET_PAYMENT_JOURNAL_LINE_ITEM_BY_ID',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Search for Payment Journal Line Item
     * method for DYNAMICS_365_FINANCE_SEARCH_PAYMENT_JOURNAL_LINE_ITEMS
     */
    dynamics365FinanceSearchPaymentJournalLineItems: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_SEARCH_PAYMENT_JOURNAL_LINE_ITEMS',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Delete Payment Journal Line Item
     * method for DYNAMICS_365_FINANCE_DELETE_PAYMENT_JOURNAL_LINE_ITEM
     */
    dynamics365FinanceDeletePaymentJournalLineItem: (inputs, options) => {
      return new ActionStep({
        intent: 'DYNAMICS_365_FINANCE_DELETE_PAYMENT_JOURNAL_LINE_ITEM',
        actionType: 'dynamicsfinance',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
  },

  /**
   * trigger step methods
   */
  triggers: {},
};
