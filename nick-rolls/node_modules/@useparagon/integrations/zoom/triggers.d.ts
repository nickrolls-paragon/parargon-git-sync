import { ConditionalInput } from '@useparagon/core/steps/library/conditional';

/**
 * New Meeting intent type
 */
type ZoomTriggerMeetingCreated = {};

/**
 * Meeting Updated intent type
 */
type ZoomTriggerMeetingUpdated = {};

/**
 * Meeting Ended intent type
 */
type ZoomTriggerMeetingEnded = {};

/**
 * New Meeting Registrant intent type
 */
type ZoomTriggerMeetingRegistrantCreated = {};

/**
 * Meeting Participant Joined intent type
 */
type ZoomTriggerParticipantJoined = {};

/**
 * Meeting Participant Left intent type
 */
type ZoomTriggerParticipantLeft = {};

/**
 * New Recording intent type
 */
type ZoomTriggerRecordingStarted = {};

/**
 * Complete Recording intent type
 */
type ZoomTriggerRecordingCompleted = {
  /**
   * Filter Records
   * Only trigger for meeting recordings that match these filters
   *
   */
  recordsFilterFormula?: ConditionalInput;
};

/**
 * Recording Transcript Completed intent type
 */
type ZoomTriggerRecordingTranscriptCompleted = {};

export type IntentToInputOutput = {
  /**
   * ZOOM_TRIGGER_MEETING_CREATED
   */
  ZOOM_TRIGGER_MEETING_CREATED: [ZoomTriggerMeetingCreated, any];

  /**
   * ZOOM_TRIGGER_MEETING_UPDATED
   */
  ZOOM_TRIGGER_MEETING_UPDATED: [ZoomTriggerMeetingUpdated, any];

  /**
   * ZOOM_TRIGGER_MEETING_ENDED
   */
  ZOOM_TRIGGER_MEETING_ENDED: [ZoomTriggerMeetingEnded, any];

  /**
   * ZOOM_TRIGGER_MEETING_REGISTRANT_CREATED
   */
  ZOOM_TRIGGER_MEETING_REGISTRANT_CREATED: [
    ZoomTriggerMeetingRegistrantCreated,
    any,
  ];

  /**
   * ZOOM_TRIGGER_PARTICIPANT_JOINED
   */
  ZOOM_TRIGGER_PARTICIPANT_JOINED: [ZoomTriggerParticipantJoined, any];

  /**
   * ZOOM_TRIGGER_PARTICIPANT_LEFT
   */
  ZOOM_TRIGGER_PARTICIPANT_LEFT: [ZoomTriggerParticipantLeft, any];

  /**
   * ZOOM_TRIGGER_RECORDING_STARTED
   */
  ZOOM_TRIGGER_RECORDING_STARTED: [ZoomTriggerRecordingStarted, any];

  /**
   * ZOOM_TRIGGER_RECORDING_COMPLETED
   */
  ZOOM_TRIGGER_RECORDING_COMPLETED: [ZoomTriggerRecordingCompleted, any];

  /**
   * ZOOM_TRIGGER_RECORDING_TRANSCRIPT_COMPLETED
   */
  ZOOM_TRIGGER_RECORDING_TRANSCRIPT_COMPLETED: [
    ZoomTriggerRecordingTranscriptCompleted,
    any,
  ];
};
