const { ActionStep, ActionTriggerStep } = require('@useparagon/core');

/**
 * this should be used whenever we are creating inputs for integrations/workflows
 */
exports.createInputs = (inputs) => inputs;

/**
 * inputs for linear
 */
exports.inputs = [
  {
    id: 'getTeams',
    title: 'Team',
    type: 'DYNAMIC_DATA_SOURCE',
  },
  {
    id: 'projectIssueTypeCombo',
    title: 'Issue Label',
    type: 'COMBO_INPUT_DATA_SOURCE',
    mainInputSource: {
      id: 'getTeams',
      title: 'Team',
      type: 'DYNAMIC_DATA_SOURCE',
    },
    dependentInputSource: {
      id: 'getLabelsForTeam',
      title: 'Labels',
      type: 'DYNAMIC_DATA_SOURCE',
    },
  },
  {
    id: 'projectStatusCombo',
    title: 'Issue Status',
    type: 'COMBO_INPUT_DATA_SOURCE',
    mainInputSource: {
      id: 'getTeams',
      title: 'Team',
      type: 'DYNAMIC_DATA_SOURCE',
    },
    dependentInputSource: {
      id: 'getStatusForTeam',
      title: 'Status',
      type: 'DYNAMIC_DATA_SOURCE',
    },
  },
  {
    id: 'getAllUsersInOrganization',
    title: 'Assignee',
    type: 'DYNAMIC_DATA_SOURCE',
  },
  {
    id: 'getAllProjects',
    title: 'Project',
    type: 'DYNAMIC_DATA_SOURCE',
  },
];

/**
 * triggers for linear
 */
exports.triggers = [
  {
    title: 'Trigger when an issue is created',
    name: 'LINEAR_TRIGGER_ISSUE_CREATED',
    output: [],
    inputs: [
      {
        id: 'teamId',
        title: 'Team ID',
        type: 'TEXTAREA',
        subtitle:
          "Use Connect Portal User Settings to allow users to select a Linear Team's ID.  Leaving this blank will trigger this workflow for every public team.",
        placeholder: 'a70bdf0f-530a-4887-857d-46151b52b47c',
      },
      {
        id: 'filterFormula',
        title: 'Filter records',
        type: 'CONDITIONAL',
        subtitle:
          'Only trigger on records that match these filters. Please maintain casing of the string for proper filtering.',
        placeholder: 'Field',
        supportedKeys: [
          'title',
          'team.id',
          'organizationId',
          'state.id',
          'labelIds',
        ],
        supportedOperators: [
          '$arrayIsIn',
          '$arrayIsNotIn',
          '$stringExactlyMatches',
          '$stringDoesNotExactlyMatch',
          '$stringIsIn',
          '$stringIsNotIn',
          '$stringStartsWith',
          '$stringDoesNotStartWith',
          '$stringEndsWith',
          '$stringDoesNotEndWith',
          '$stringContains',
          '$stringDoesNotContain',
          '$stringGreaterThan',
          '$stringLessThan',
          '$numberGreaterThanOrEqualTo',
          '$numberLessThanOrEqualTo',
          '$numberGreaterThan',
          '$numberLessThan',
          '$dateTimeAfter',
          '$dateTimeBefore',
        ],
      },
    ],
  },
  {
    title: 'Trigger when an issueâ€™s status is updated',
    name: 'LINEAR_TRIGGER_STATUS_UPDATED',
    output: [],
    inputs: [
      {
        id: 'teamId',
        title: 'Team ID',
        type: 'TEXTAREA',
        subtitle:
          "Use Connect Portal User Settings to allow users to select a Linear Team's ID.  Leaving this blank will trigger this workflow for every public team.",
        placeholder: 'a70bdf0f-530a-4887-857d-46151b52b47c',
      },
      {
        id: 'filterFormula',
        title: 'Filter records',
        type: 'CONDITIONAL',
        subtitle:
          'Only trigger on records that match these filters. Please maintain casing of the string for proper filtering.',
        placeholder: 'Field',
        supportedKeys: ['stateId'],
        supportedOperators: [
          '$arrayIsIn',
          '$arrayIsNotIn',
          '$stringExactlyMatches',
          '$stringDoesNotExactlyMatch',
          '$stringIsIn',
          '$stringIsNotIn',
          '$stringStartsWith',
          '$stringDoesNotStartWith',
          '$stringEndsWith',
          '$stringDoesNotEndWith',
          '$stringContains',
          '$stringDoesNotContain',
          '$stringGreaterThan',
          '$stringLessThan',
          '$numberGreaterThanOrEqualTo',
          '$numberLessThanOrEqualTo',
          '$numberGreaterThan',
          '$numberLessThan',
          '$dateTimeAfter',
          '$dateTimeBefore',
        ],
      },
    ],
  },
  {
    title: 'Trigger when a certain label was added or removed from an issue',
    name: 'LINEAR_TRIGGER_LABEL_ADDED',
    output: [],
    inputs: [
      {
        id: 'teamId',
        title: 'Team ID',
        type: 'TEXTAREA',
        subtitle:
          "Use Connect Portal User Settings to allow users to select a Linear Team's ID.  Leaving this blank will trigger this workflow for every public team.",
        placeholder: 'a70bdf0f-530a-4887-857d-46151b52b47c',
      },
      {
        id: 'filterFormula',
        title: 'Filter records',
        type: 'CONDITIONAL',
        subtitle:
          'Only trigger on records that match these filters. Please maintain casing of the string for proper filtering.',
        placeholder: 'Field',
        supportedKeys: ['labelIds'],
        supportedOperators: [
          '$arrayIsIn',
          '$arrayIsNotIn',
          '$stringExactlyMatches',
          '$stringDoesNotExactlyMatch',
          '$stringIsIn',
          '$stringIsNotIn',
          '$stringStartsWith',
          '$stringDoesNotStartWith',
          '$stringEndsWith',
          '$stringDoesNotEndWith',
          '$stringContains',
          '$stringDoesNotContain',
          '$stringGreaterThan',
          '$stringLessThan',
          '$numberGreaterThanOrEqualTo',
          '$numberLessThanOrEqualTo',
          '$numberGreaterThan',
          '$numberLessThan',
          '$dateTimeAfter',
          '$dateTimeBefore',
        ],
      },
    ],
  },
  {
    title: 'Trigger when an issue is deleted',
    name: 'LINEAR_TRIGGER_ISSUE_DELETED',
    output: [],
    inputs: [
      {
        id: 'teamId',
        title: 'Team ID',
        type: 'TEXTAREA',
        subtitle:
          "Use Connect Portal User Settings to allow users to select a Linear Team's ID.  Leaving this blank will trigger this workflow for every public team.",
        placeholder: 'a70bdf0f-530a-4887-857d-46151b52b47c',
      },
      {
        id: 'filterFormula',
        title: 'Filter records',
        type: 'CONDITIONAL',
        subtitle:
          'Only trigger on records that match these filters. Please maintain casing of the string for proper filtering.',
        placeholder: 'Field',
        supportedKeys: [
          'title',
          'team.id',
          'organizationId',
          'state.id',
          'labelIds',
        ],
        supportedOperators: [
          '$arrayIsIn',
          '$arrayIsNotIn',
          '$stringExactlyMatches',
          '$stringDoesNotExactlyMatch',
          '$stringIsIn',
          '$stringIsNotIn',
          '$stringStartsWith',
          '$stringDoesNotStartWith',
          '$stringEndsWith',
          '$stringDoesNotEndWith',
          '$stringContains',
          '$stringDoesNotContain',
          '$stringGreaterThan',
          '$stringLessThan',
          '$numberGreaterThanOrEqualTo',
          '$numberLessThanOrEqualTo',
          '$numberGreaterThan',
          '$numberLessThan',
          '$dateTimeAfter',
          '$dateTimeBefore',
        ],
      },
    ],
  },
];

/**
 * intents for linear
 */
exports.intents = [
  {
    title: 'Create Issue',
    name: 'LINEAR_CREATE_ISSUE',
    output: [],
    inputs: [
      {
        id: 'teamId',
        title: 'Team ID',
        type: 'TEXTAREA',
        subtitle:
          'Specify the Team ID of the parent for this new issue. Use Connect Portal Workflow Settings to allow users to select a Team ID.',
        placeholder: 'a70bdf0f-530a-4887-857d-46151b52b47c',
        required: true,
      },
      {
        id: 'title',
        title: 'Title',
        type: 'TEXTAREA',
        subtitle: 'Specify a title for this issue.',
        required: true,
      },
      {
        id: 'description',
        title: 'Description',
        type: 'TEXTAREA',
        subtitle: 'Specify a description for this issue.',
      },
      {
        id: 'statusId',
        title: 'Status',
        type: 'TEXTAREA',
        subtitle: 'Specify the state or status of this issue.',
      },
      {
        id: 'priority',
        title: 'Priority',
        type: 'TEXTAREA',
        subtitle: 'Specify the priority of this issue as an integer.',
      },
      {
        id: 'dueDate',
        title: 'Due Date',
        type: 'TEXTAREA',
        subtitle: 'Specify the due date of this issue in ISO 8601 format.',
      },
      {
        id: 'cycleId',
        title: 'Cycle ID',
        type: 'TEXTAREA',
        subtitle: 'Specify the cycle associated with this issue.',
      },
      {
        id: 'additionalFields',
        title: 'Additional Fields',
        type: 'CODE',
        placeholder:
          '{\n  assigneeId: "a70bdf0f-530a-4887-857d-46151b52b47c",\n  labelIds: ["a70bdf0f-530a-4887-857d-46151b52b47c"]\n}',
      },
    ],
  },
  {
    title: 'Update Issue',
    name: 'LINEAR_UPDATE_ISSUE',
    output: [],
    inputs: [
      {
        id: 'issueId',
        title: 'Issue ID',
        type: 'TEXTAREA',
        subtitle: 'Specify the Issue ID of the issue to update.',
        placeholder: '90fbc706-18cd-42c9-ae66-6bd344cc8977',
        required: true,
      },
      {
        id: 'title',
        title: 'Title',
        type: 'TEXTAREA',
        subtitle: 'Specify a title for this issue.',
      },
      {
        id: 'description',
        title: 'Description',
        type: 'TEXTAREA',
        subtitle: 'Specify a description for this issue.',
      },
      {
        id: 'statusId',
        title: 'Status',
        type: 'TEXTAREA',
        subtitle: 'Specify the state or status of this issue.',
      },
      {
        id: 'priority',
        title: 'Priority',
        type: 'TEXTAREA',
        subtitle: 'Specify the priority of this issue as an integer.',
      },
      {
        id: 'dueDate',
        title: 'Due Date',
        type: 'TEXTAREA',
        subtitle: 'Specify the due date of this issue in ISO 8601 format.',
      },
      {
        id: 'cycleId',
        title: 'Cycle ID',
        type: 'TEXTAREA',
        subtitle: 'Specify the cycle associated with this issue.',
      },
      {
        id: 'additionalFields',
        title: 'Additional Fields',
        type: 'CODE',
        placeholder:
          '{\n  assigneeId: "a70bdf0f-530a-4887-857d-46151b52b47c",\n  labelIds: ["a70bdf0f-530a-4887-857d-46151b52b47c"]\n}',
      },
    ],
  },
  {
    title: 'Get Issue by ID',
    name: 'LINEAR_GET_ISSUE_BY_ID',
    output: [],
    inputs: [
      {
        id: 'issueId',
        title: 'Issue ID',
        type: 'TEXTAREA',
        subtitle: 'Specify the record ID of the issue to fetch.',
        placeholder: '90fbc706-18cd-42c9-ae66-6bd344cc8977',
        required: true,
      },
    ],
  },
  {
    title: 'Get Issue by Issue Identifier',
    name: 'LINEAR_GET_ISSUE_BY_ISSUE_IDENTIFIER',
    output: [],
    inputs: [
      {
        id: 'externalId',
        title: 'External ID',
        type: 'TEXTAREA',
        subtitle:
          'Specify the human-readable Issue identifier of the issue to fetch.',
        placeholder: 'ABC-1',
        required: true,
      },
    ],
  },
  {
    title: 'Search Issues',
    name: 'LINEAR_SEARCH_ISSUE',
    output: [],
    inputs: [
      {
        id: 'issueFilterFormula',
        title: 'Filter search',
        type: 'CONDITIONAL',
        subtitle: 'Search for records that match specified filters.',
        supportedKeys: ['title', 'number', 'project', 'createdAt'],
        supportedOperators: [
          '$stringExactlyMatches',
          '$stringDoesNotExactlyMatch',
          '$stringIsIn',
          '$stringIsNotIn',
          '$stringStartsWith',
          '$stringDoesNotStartWith',
          '$stringEndsWith',
          '$stringDoesNotEndWith',
          '$stringContains',
          '$stringDoesNotContain',
          '$stringGreaterThan',
          '$stringLessThan',
          '$numberGreaterThanOrEqualTo',
          '$numberLessThanOrEqualTo',
          '$numberGreaterThan',
          '$numberLessThan',
          '$dateTimeAfter',
          '$dateTimeBefore',
        ],
      },
    ],
  },
  {
    title: 'Delete Issue',
    name: 'LINEAR_DELETE_ISSUE',
    output: [],
    inputs: [
      {
        id: 'issueId',
        title: 'Issue ID',
        type: 'TEXTAREA',
        subtitle: 'Specify the record ID of the issue to delete.',
        placeholder: '90fbc706-18cd-42c9-ae66-6bd344cc8977',
        required: true,
      },
    ],
  },
  {
    title: 'Archive Issue',
    name: 'LINEAR_ARCHIVE_ISSUE',
    output: [],
    inputs: [
      {
        id: 'issueId',
        title: 'Issue ID',
        type: 'TEXTAREA',
        subtitle: 'Specify the record ID of the issue to archive.',
        placeholder: '90fbc706-18cd-42c9-ae66-6bd344cc8977',
        required: true,
      },
    ],
  },
  {
    title: 'Create Sub-issue',
    name: 'LINEAR_CREATE_SUB_ISSUE',
    output: [],
    inputs: [
      {
        id: 'parentId',
        title: 'Parent ID',
        type: 'TEXTAREA',
        subtitle: 'Specify the Issue ID for the parent of this new issue.',
        required: true,
      },
      {
        id: 'teamId',
        title: 'Team ID',
        type: 'TEXTAREA',
        subtitle:
          'Specify the Team ID of the parent for this new sub-issue. Use Connect Portal Workflow Settings to allow users to select a Team ID.',
        placeholder: 'a70bdf0f-530a-4887-857d-46151b52b47c',
        required: true,
      },
      {
        id: 'title',
        title: 'Title',
        type: 'TEXTAREA',
        subtitle: 'Specify a title for this issue.',
        required: true,
      },
      {
        id: 'description',
        title: 'Description',
        type: 'TEXTAREA',
        subtitle: 'Specify a description for this issue.',
      },
      {
        id: 'additionalFields',
        title: 'Additional Fields',
        type: 'CODE',
        placeholder: '{\n  lead: <Linear User ID>\n}',
      },
    ],
  },
  {
    title: 'Create Project',
    name: 'LINEAR_CREATE_PROJECT',
    output: [],
    inputs: [
      {
        id: 'teamIds',
        title: 'Team ID',
        type: 'CODE',
        subtitle:
          'Specify the team ID(s) this project is associated with as a string or a JSON array. Use Connect Portal User Settings to allow your user to select a Team ID.',
        placeholder:
          '[ \n  "a70bdf0f-530a-4887-857d-46151b52b47c", \n  "4ac7..."\n]',
        required: true,
      },
      {
        id: 'projectName',
        title: 'Project Name',
        type: 'TEXTAREA',
        subtitle: 'Specify the ID of the project to update.',
        placeholder: 'My Linear Project',
        required: true,
      },
      {
        id: 'description',
        title: 'Project Description',
        type: 'TEXTAREA',
        subtitle: 'Specify a description for this project.',
      },
      {
        id: 'additionalFields',
        title: 'Additional Fields',
        type: 'CODE',
        placeholder: '{\n  state: "planned",\n  description: ""\n}',
      },
    ],
  },
  {
    title: 'Update Project',
    name: 'LINEAR_UPDATE_PROJECT',
    output: [],
    inputs: [
      {
        id: 'projectId',
        title: 'Project ID',
        type: 'TEXTAREA',
        subtitle: 'Specify the ID of the project to update.',
        placeholder: 'a6634484-6061-4ac7-9739-7dc5e52c796b',
        required: true,
      },
      {
        id: 'projectName',
        title: 'Project Name',
        type: 'TEXTAREA',
        subtitle: 'Specify the name of the project to update.',
        placeholder: 'My Linear Project',
      },
      {
        id: 'description',
        title: 'Project Description',
        type: 'TEXTAREA',
        subtitle: 'Specify a description for this project.',
      },
      {
        id: 'additionalFields',
        title: 'Additional Fields',
        type: 'CODE',
        placeholder: '{\n  state: "planned",\n  description: ""\n}',
      },
    ],
  },
  {
    title: 'Get Project by ID',
    name: 'LINEAR_GET_PROJECT_BY_ID',
    output: [],
    inputs: [
      {
        id: 'projectId',
        title: 'Project ID',
        type: 'TEXTAREA',
        subtitle: 'Specify the Project ID of the project to fetch.',
        placeholder: 'a6634484-6061-4ac7-9739-7dc5e52c796b',
        required: true,
      },
    ],
  },
  {
    title: 'Delete Project',
    name: 'LINEAR_DELETE_PROJECT',
    output: [],
    inputs: [
      {
        id: 'projectId',
        title: 'Project ID',
        type: 'TEXTAREA',
        subtitle: 'Specify the Project ID of the project to delete.',
        placeholder: 'a6634484-6061-4ac7-9739-7dc5e52c796b',
        required: true,
      },
    ],
  },
  {
    title: 'Search Teams',
    name: 'LINEAR_SEARCH_TEAMS',
    output: [],
    inputs: [
      {
        id: 'teamFilterFormula',
        title: 'Filter search',
        type: 'CONDITIONAL',
        subtitle: 'Search for teams that match specified filters.',
        supportedKeys: ['id', 'name'],
        supportedOperators: [
          '$stringExactlyMatches',
          '$stringDoesNotExactlyMatch',
          '$stringIsIn',
          '$stringIsNotIn',
          '$stringStartsWith',
          '$stringDoesNotStartWith',
          '$stringEndsWith',
          '$stringDoesNotEndWith',
          '$stringContains',
          '$stringDoesNotContain',
          '$stringGreaterThan',
          '$stringLessThan',
          '$numberGreaterThanOrEqualTo',
          '$numberLessThanOrEqualTo',
          '$numberGreaterThan',
          '$numberLessThan',
          '$dateTimeAfter',
          '$dateTimeBefore',
        ],
      },
    ],
  },
];

/**
 * integration class for linear
 */
exports.integration = {
  /**
   * name of integration
   */
  name: 'linear',

  /**
   * action step methods
   */
  actions: {
    /**
     * Create Issue
     * method for LINEAR_CREATE_ISSUE
     */
    createIssue: (inputs, options) => {
      return new ActionStep({
        intent: 'LINEAR_CREATE_ISSUE',
        actionType: 'linear',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Update Issue
     * method for LINEAR_UPDATE_ISSUE
     */
    updateIssue: (inputs, options) => {
      return new ActionStep({
        intent: 'LINEAR_UPDATE_ISSUE',
        actionType: 'linear',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Issue by ID
     * method for LINEAR_GET_ISSUE_BY_ID
     */
    getIssueById: (inputs, options) => {
      return new ActionStep({
        intent: 'LINEAR_GET_ISSUE_BY_ID',
        actionType: 'linear',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Issue by Issue Identifier
     * method for LINEAR_GET_ISSUE_BY_ISSUE_IDENTIFIER
     */
    getIssueByIssueIdentifier: (inputs, options) => {
      return new ActionStep({
        intent: 'LINEAR_GET_ISSUE_BY_ISSUE_IDENTIFIER',
        actionType: 'linear',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Search Issues
     * method for LINEAR_SEARCH_ISSUE
     */
    searchIssue: (inputs, options) => {
      return new ActionStep({
        intent: 'LINEAR_SEARCH_ISSUE',
        actionType: 'linear',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Delete Issue
     * method for LINEAR_DELETE_ISSUE
     */
    deleteIssue: (inputs, options) => {
      return new ActionStep({
        intent: 'LINEAR_DELETE_ISSUE',
        actionType: 'linear',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Archive Issue
     * method for LINEAR_ARCHIVE_ISSUE
     */
    archiveIssue: (inputs, options) => {
      return new ActionStep({
        intent: 'LINEAR_ARCHIVE_ISSUE',
        actionType: 'linear',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Create Sub-issue
     * method for LINEAR_CREATE_SUB_ISSUE
     */
    createSubIssue: (inputs, options) => {
      return new ActionStep({
        intent: 'LINEAR_CREATE_SUB_ISSUE',
        actionType: 'linear',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Create Project
     * method for LINEAR_CREATE_PROJECT
     */
    createProject: (inputs, options) => {
      return new ActionStep({
        intent: 'LINEAR_CREATE_PROJECT',
        actionType: 'linear',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Update Project
     * method for LINEAR_UPDATE_PROJECT
     */
    updateProject: (inputs, options) => {
      return new ActionStep({
        intent: 'LINEAR_UPDATE_PROJECT',
        actionType: 'linear',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Project by ID
     * method for LINEAR_GET_PROJECT_BY_ID
     */
    getProjectById: (inputs, options) => {
      return new ActionStep({
        intent: 'LINEAR_GET_PROJECT_BY_ID',
        actionType: 'linear',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Delete Project
     * method for LINEAR_DELETE_PROJECT
     */
    deleteProject: (inputs, options) => {
      return new ActionStep({
        intent: 'LINEAR_DELETE_PROJECT',
        actionType: 'linear',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Search Teams
     * method for LINEAR_SEARCH_TEAMS
     */
    searchTeams: (inputs, options) => {
      return new ActionStep({
        intent: 'LINEAR_SEARCH_TEAMS',
        actionType: 'linear',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
  },

  /**
   * trigger step methods
   */
  triggers: {
    /**
     * Trigger when an issue is created
     * method for LINEAR_TRIGGER_ISSUE_CREATED
     */
    issueCreated: (inputs) => {
      return new ActionTriggerStep({
        intent: 'LINEAR_TRIGGER_ISSUE_CREATED',
        actionType: 'linear',
        parameters: inputs,
      });
    },
    /**
     * Trigger when an issueâ€™s status is updated
     * method for LINEAR_TRIGGER_STATUS_UPDATED
     */
    statusUpdated: (inputs) => {
      return new ActionTriggerStep({
        intent: 'LINEAR_TRIGGER_STATUS_UPDATED',
        actionType: 'linear',
        parameters: inputs,
      });
    },
    /**
     * Trigger when a certain label was added or removed from an issue
     * method for LINEAR_TRIGGER_LABEL_ADDED
     */
    labelAdded: (inputs) => {
      return new ActionTriggerStep({
        intent: 'LINEAR_TRIGGER_LABEL_ADDED',
        actionType: 'linear',
        parameters: inputs,
      });
    },
    /**
     * Trigger when an issue is deleted
     * method for LINEAR_TRIGGER_ISSUE_DELETED
     */
    issueDeleted: (inputs) => {
      return new ActionTriggerStep({
        intent: 'LINEAR_TRIGGER_ISSUE_DELETED',
        actionType: 'linear',
        parameters: inputs,
      });
    },
  },
};
