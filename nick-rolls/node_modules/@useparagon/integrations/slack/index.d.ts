import { ActionStep, ActionTriggerStep } from '@useparagon/core';
import {
  CustomDropdownField,
  DynamicMappingField,
} from '@useparagon/core/inputs';
import { IntegrationOptions } from '@useparagon/core/integration';

import { IntentToInputOutput } from './intents';
import { IntentToInputOutput as TriggerIntentToInputOutput } from './triggers';

type ISlackIntegrationUserDefinedInput = {
  id: string;
  title: string;
  required?: boolean;
  tooltip?: string;
} & (
  | {
      type:
        | 'text'
        | 'number'
        | 'email'
        | 'url'
        | 'boolean'
        | 'password'
        | 'channel'
        | 'workspace_member';
    }
  | {
      type: 'custom_dropdown';
      key: string;
      customDropdownOptions?: CustomDropdownField[];
    }
  | {
      type: 'custom_field_mapping';
      objectName: string;
      // these object types values will be used in preview portal
      mockObjectTypes?: DynamicMappingField[];
      // these integration fields values will be used in preview portal
      mockIntegrationFields?: DynamicMappingField[];
    }
);

/**
 * map b/w input type to result
 */
export type InputResultMap = {
  email: string;
  url: string;
  password: string;
  boolean: boolean;
  text: string;
  number: number;
  custom_dropdown: string;
  custom_field_mapping: {
    object: string;
    fields: Record<string, any>;
  };
  channel: string;
  workspace_member: string;
};

/**
 * pass { variableName for input => Input }
 * this should be used whenever we are creating inputs for integrations/workflows
 * as it will infer proper types
 */
export declare const createInputs: <
  T extends Record<string, ISlackIntegrationUserDefinedInput>,
>(
  inputs: T,
) => T;

/**
 * integration type for slack
 */
export type ISlackIntegration = {
  /**
   * name of integration
   */
  name: string;

  /**
   * action step methods
   */
  actions: {
    /**
     * Send message in channel
     * method for SLACK_SEND_MESSAGE
     */
    sendMessage: (
      inputs: IntentToInputOutput['SLACK_SEND_MESSAGE'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SLACK_SEND_MESSAGE'][0],
      IntentToInputOutput['SLACK_SEND_MESSAGE'][1]
    >;

    /**
     * Send direct message
     * method for SLACK_SEND_DIRECT_MESSAGE
     */
    sendDirectMessage: (
      inputs: IntentToInputOutput['SLACK_SEND_DIRECT_MESSAGE'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SLACK_SEND_DIRECT_MESSAGE'][0],
      IntentToInputOutput['SLACK_SEND_DIRECT_MESSAGE'][1]
    >;

    /**
     * Get User By Email
     * method for SLACK_GET_USER_BY_EMAIL
     */
    getUserByEmail: (
      inputs: IntentToInputOutput['SLACK_GET_USER_BY_EMAIL'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SLACK_GET_USER_BY_EMAIL'][0],
      IntentToInputOutput['SLACK_GET_USER_BY_EMAIL'][1]
    >;

    /**
     * Search Messages
     * method for SLACK_SEARCH_MESSAGES
     */
    searchMessages: (
      inputs: IntentToInputOutput['SLACK_SEARCH_MESSAGES'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SLACK_SEARCH_MESSAGES'][0],
      IntentToInputOutput['SLACK_SEARCH_MESSAGES'][1]
    >;

    /**
     * Get users by name in Slack
     * method for SLACK_GET_USERS_BY_NAME
     */
    getUsersByName: (
      inputs: IntentToInputOutput['SLACK_GET_USERS_BY_NAME'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['SLACK_GET_USERS_BY_NAME'][0],
      IntentToInputOutput['SLACK_GET_USERS_BY_NAME'][1]
    >;
  };

  /**
   * trigger step methods
   */
  triggers: {
    /**
     * Direct Message Created
     * method for SLACK_TRIGGER_DIRECT_MESSAGE_CREATED
     */
    directMessageCreated: (
      inputs: TriggerIntentToInputOutput['SLACK_TRIGGER_DIRECT_MESSAGE_CREATED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['SLACK_TRIGGER_DIRECT_MESSAGE_CREATED'][0],
      TriggerIntentToInputOutput['SLACK_TRIGGER_DIRECT_MESSAGE_CREATED'][1]
    >;

    /**
     * Channel Created
     * method for SLACK_TRIGGER_CHANNEL_CREATED
     */
    channelCreated: (
      inputs: TriggerIntentToInputOutput['SLACK_TRIGGER_CHANNEL_CREATED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['SLACK_TRIGGER_CHANNEL_CREATED'][0],
      TriggerIntentToInputOutput['SLACK_TRIGGER_CHANNEL_CREATED'][1]
    >;

    /**
     * Direct Message Sent
     * method for SLACK_TRIGGER_DIRECT_MESSAGE_POSTED
     */
    directMessagePosted: (
      inputs: TriggerIntentToInputOutput['SLACK_TRIGGER_DIRECT_MESSAGE_POSTED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['SLACK_TRIGGER_DIRECT_MESSAGE_POSTED'][0],
      TriggerIntentToInputOutput['SLACK_TRIGGER_DIRECT_MESSAGE_POSTED'][1]
    >;

    /**
     * File Deleted
     * method for SLACK_TRIGGER_FILE_DELETED
     */
    fileDeleted: (
      inputs: TriggerIntentToInputOutput['SLACK_TRIGGER_FILE_DELETED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['SLACK_TRIGGER_FILE_DELETED'][0],
      TriggerIntentToInputOutput['SLACK_TRIGGER_FILE_DELETED'][1]
    >;

    /**
     * Group Message Sent
     * method for SLACK_TRIGGER_GROUP_MESSAGE_POSTED
     */
    groupMessagePosted: (
      inputs: TriggerIntentToInputOutput['SLACK_TRIGGER_GROUP_MESSAGE_POSTED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['SLACK_TRIGGER_GROUP_MESSAGE_POSTED'][0],
      TriggerIntentToInputOutput['SLACK_TRIGGER_GROUP_MESSAGE_POSTED'][1]
    >;

    /**
     * Channel Message Sent
     * method for SLACK_TRIGGER_CHANNEL_MESSAGE_POSTED
     */
    channelMessagePosted: (
      inputs: TriggerIntentToInputOutput['SLACK_TRIGGER_CHANNEL_MESSAGE_POSTED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['SLACK_TRIGGER_CHANNEL_MESSAGE_POSTED'][0],
      TriggerIntentToInputOutput['SLACK_TRIGGER_CHANNEL_MESSAGE_POSTED'][1]
    >;

    /**
     * Direct Message Updated
     * method for SLACK_TRIGGER_DIRECT_MESSAGE_UPDATED
     */
    directMessageUpdated: (
      inputs: TriggerIntentToInputOutput['SLACK_TRIGGER_DIRECT_MESSAGE_UPDATED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['SLACK_TRIGGER_DIRECT_MESSAGE_UPDATED'][0],
      TriggerIntentToInputOutput['SLACK_TRIGGER_DIRECT_MESSAGE_UPDATED'][1]
    >;

    /**
     * Group Message Updated
     * method for SLACK_TRIGGER_GROUP_MESSAGE_UPDATED
     */
    groupMessageUpdated: (
      inputs: TriggerIntentToInputOutput['SLACK_TRIGGER_GROUP_MESSAGE_UPDATED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['SLACK_TRIGGER_GROUP_MESSAGE_UPDATED'][0],
      TriggerIntentToInputOutput['SLACK_TRIGGER_GROUP_MESSAGE_UPDATED'][1]
    >;

    /**
     * Channel Message Updated
     * method for SLACK_TRIGGER_CHANNEL_MESSAGE_UPDATED
     */
    channelMessageUpdated: (
      inputs: TriggerIntentToInputOutput['SLACK_TRIGGER_CHANNEL_MESSAGE_UPDATED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['SLACK_TRIGGER_CHANNEL_MESSAGE_UPDATED'][0],
      TriggerIntentToInputOutput['SLACK_TRIGGER_CHANNEL_MESSAGE_UPDATED'][1]
    >;

    /**
     * App Mentioned
     * method for SLACK_TRIGGER_APP_MENTIONED
     */
    appMentioned: (
      inputs: TriggerIntentToInputOutput['SLACK_TRIGGER_APP_MENTIONED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['SLACK_TRIGGER_APP_MENTIONED'][0],
      TriggerIntentToInputOutput['SLACK_TRIGGER_APP_MENTIONED'][1]
    >;

    /**
     * New Message Reaction
     * method for SLACK_TRIGGER_NEW_REACTION
     */
    newReaction: (
      inputs: TriggerIntentToInputOutput['SLACK_TRIGGER_NEW_REACTION'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['SLACK_TRIGGER_NEW_REACTION'][0],
      TriggerIntentToInputOutput['SLACK_TRIGGER_NEW_REACTION'][1]
    >;

    /**
     * Message Reaction Removed
     * method for SLACK_TRIGGER_REACTION_REMOVED
     */
    reactionRemoved: (
      inputs: TriggerIntentToInputOutput['SLACK_TRIGGER_REACTION_REMOVED'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['SLACK_TRIGGER_REACTION_REMOVED'][0],
      TriggerIntentToInputOutput['SLACK_TRIGGER_REACTION_REMOVED'][1]
    >;

    /**
     * Message Interaction
     * method for SLACK_TRIGGER_MESSAGE_INTERACTION
     */
    messageInteraction: (
      inputs: TriggerIntentToInputOutput['SLACK_TRIGGER_MESSAGE_INTERACTION'][0],
    ) => ActionTriggerStep<
      TriggerIntentToInputOutput['SLACK_TRIGGER_MESSAGE_INTERACTION'][0],
      TriggerIntentToInputOutput['SLACK_TRIGGER_MESSAGE_INTERACTION'][1]
    >;
  };
};
