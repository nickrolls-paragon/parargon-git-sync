/**
 * Send message in channel intent type
 */
type TeamsSendMessageInChannel = {
  /**
   * Channel
   * Use Connect Portal Workflow Settings to allow users to select a channel.
   *
   * **Example**:
   * ```
   * {{settings.channel}}
   * ```
   */
  channel: string;

  /**
   * Message
   * Plaintext/HTML representation of the content of the chat message.
   *
   */
  message: string;

  /**
   * Summary
   * Summary text of the chat message that could be used for push notifications and summary views or fall back views.
   *
   */
  summary?: string;

  /**
   * Chat Recipient
   *
   * **Example**:
   * ```
   * [
   *  {
   *    "contentType": "application/vnd.microsoft.card.adaptive",
   *    "content": {
   *      "type": "AdaptiveCard",
   *      "version": "1.0",
   *      "body": [
   *        {
   *          "type": "TextBlock",
   *          "text": "Hello World!",
   *          "size": "large"
   *        },
   *        {
   *          "type": "TextBlock",
   *          "text": "*Sincerely yours,*"
   *        },
   *        {
   *          "type": "TextBlock",
   *          "text": "Adaptive Cards",
   *          "separation": "none"
   *        }
   *      ],
   *      "actions": [
   *        {
   *          "type": "Action.OpenUrl",
   *          "url": "http://adaptivecards.io",
   *          "title": "Learn More"
   *        }
   *      ]
   *    }
   *  }
   *]
   * ```
   */
  attachments?: string;

  /**
   * Attachment Layout
   * If adding multiple attachments, specify a layout to use when rendering the message.
   *
   */
  attachmentLayout?: 'carousel' | 'list';
};

/**
 * Send message in chat intent type
 */
type TeamsSendMessageInChat = {
  /**
   * Chat Recipient
   * Use Connect Portal Workflow Settings to allow users to select a workspace member.
   *
   * **Example**:
   * ```
   * {{settings.member}}
   * ```
   */
  chatRecipient: string;

  /**
   * Message
   * Plaintext/HTML representation of the content of the chat message.
   *
   */
  message: string;

  /**
   * Subject
   * The subject of the chat message, in plaintext.
   *
   */
  subject?: string;

  /**
   * Summary
   * Summary text of the chat message that could be used for push notifications and summary views or fall back views.
   *
   */
  summary?: string;

  /**
   * Chat Recipient
   *
   * **Example**:
   * ```
   * [
   *  {
   *    "contentType": "application/vnd.microsoft.card.adaptive",
   *    "content": {
   *      "type": "AdaptiveCard",
   *      "version": "1.0",
   *      "body": [
   *        {
   *          "type": "TextBlock",
   *          "text": "Hello World!",
   *          "size": "large"
   *        },
   *        {
   *          "type": "TextBlock",
   *          "text": "*Sincerely yours,*"
   *        },
   *        {
   *          "type": "TextBlock",
   *          "text": "Adaptive Cards",
   *          "separation": "none"
   *        }
   *      ],
   *      "actions": [
   *        {
   *          "type": "Action.OpenUrl",
   *          "url": "http://adaptivecards.io",
   *          "title": "Learn More"
   *        }
   *      ]
   *    }
   *  }
   *]
   * ```
   */
  attachments?: string;

  /**
   * Attachment Layout
   * If adding multiple attachments, specify a layout to use when rendering the message.
   *
   */
  attachmentLayout?: 'carousel' | 'list';
};

/**
 * Get User by Email intent type
 */
type TeamsGetUserByEmail = {
  /**
   * Team ID
   * The ID of the Team to search for users in. Use Connect Portal User Settings to allow your user to select a Team.
   *
   * **Example**:
   * ```
   * e4da8430-de80-4815-9785-9c2441c24a7b
   * ```
   */
  teamId: string;

  /**
   * Email
   * The email address of the user.
   *
   * **Example**:
   * ```
   * sean@example.com
   * ```
   */
  emailId: string;
};

export type IntentToInputOutput = {
  /**
   * TEAMS_SEND_MESSAGE_IN_CHANNEL
   */
  TEAMS_SEND_MESSAGE_IN_CHANNEL: [TeamsSendMessageInChannel, any];

  /**
   * TEAMS_SEND_MESSAGE_IN_CHAT
   */
  TEAMS_SEND_MESSAGE_IN_CHAT: [TeamsSendMessageInChat, any];

  /**
   * TEAMS_GET_USER_BY_EMAIL
   */
  TEAMS_GET_USER_BY_EMAIL: [TeamsGetUserByEmail, any];
};
