const { ActionStep, ActionTriggerStep } = require('@useparagon/core');

/**
 * this should be used whenever we are creating inputs for integrations/workflows
 */
exports.createInputs = (inputs) => inputs;

/**
 * inputs for azuredevops
 */
exports.inputs = [
  {
    id: 'projects',
    title: 'Project',
    type: 'DYNAMIC_DATA_SOURCE',
  },
  {
    id: 'areas',
    title: 'Area',
    type: 'DYNAMIC_DATA_SOURCE',
  },
  {
    id: 'iterations',
    title: 'Iteration',
    type: 'DYNAMIC_DATA_SOURCE',
  },
  {
    id: 'states',
    title: 'States',
    type: 'COMBO_INPUT_DATA_SOURCE',
    mainInputSource: {
      id: 'projects',
      title: 'Project',
      type: 'DYNAMIC_DATA_SOURCE',
    },
    dependentInputSource: {
      id: 'workItemTypes',
      title: 'Work Item Types',
      type: 'DYNAMIC_DATA_SOURCE',
    },
    fieldSource: {
      id: 'workItemTypeStates',
      title: 'Work Item Type States',
      type: 'DYNAMIC_DATA_SOURCE',
    },
  },
];

/**
 * triggers for azuredevops
 */
exports.triggers = [];

/**
 * intents for azuredevops
 */
exports.intents = [
  {
    title: 'Search Work Items',
    name: 'AZURE_DEVOPS_SEARCH_WORKITEMS',
    output: [],
    inputs: [
      {
        id: 'projectFilterFormula',
        title: 'Filter search',
        type: 'CONDITIONAL',
        subtitle: 'Search for work items that match specified filters.',
        placeholder: 'field',
        supportedKeys: [
          '[Microsoft.VSTS.Common.Activity]',
          '[System.AreaPath]',
          '[System.AssignedTo]',
          '[Microsoft.VSTS.Common.BusinessValue]',
          '[System.ChangedDate]',
          '[System.CreatedDate]',
          '[System.Description]',
          '[Microsoft.VSTS.Scheduling.Effort]',
          '[System.IterationPath]',
          '[Microsoft.VSTS.Common.Priority]',
          '[Microsoft.VSTS.Common.ResolvedReason]',
          '[Microsoft.VSTS.Common.Risk]',
          '[System.Reason]',
          '[Microsoft.VSTS.Scheduling.StartDate]',
          '[Microsoft.VSTS.Scheduling.StoryPoints]',
          '[System.State]',
          '[Microsoft.VSTS.Common.Severity]',
          '[System.Tags]',
          '[Microsoft.VSTS.Scheduling.TargetDate]',
          '[System.TeamProject]',
          '[System.Title]',
          '[Microsoft.VSTS.Common.TimeCriticality]',
          '[System.WorkItemType]',
        ],
        supportedOperators: [
          '$numberLessThan',
          '$numberEquals',
          '$numberGreaterThan',
          '$numberDoesNotEqual',
          '$numberGreaterThanOrEqualTo',
          '$numberLessThanOrEqualTo',
          '$stringIsIn',
          '$stringIsNotIn',
          '$stringExactlyMatches',
          '$stringDoesNotExactlyMatch',
          '$stringContains',
          '$stringDoesNotContain',
          '$booleanTrue',
          '$booleanFalse',
        ],
      },
    ],
  },
  {
    title: 'Create Work Item',
    name: 'AZURE_DEVOPS_CREATE_WORKITEM',
    output: [],
    inputs: [
      {
        id: 'project',
        title: 'Project',
        type: 'TEXTAREA',
        subtitle:
          'Specify a project to create this work item for. Use Connect Portal Workflow Settings to allow your user to select a Project.',
        placeholder: '{{settings.project}}',
        required: true,
      },
      {
        id: 'workItemType',
        title: 'Work Item Type',
        type: 'EDITABLE_ENUM',
        subtitle: 'Search for work items that match specified filters.',
        placeholder: 'Type',
        required: true,
        values: [
          {
            value: 'BUG',
            dependentInputs: [
              {
                id: 'reproSteps',
                title: 'Repro Steps',
                type: 'TEXTAREA',
                subtitle: 'Description of how to see the bug.',
              },
              {
                id: 'systemInfo',
                title: 'System Info',
                type: 'TEXTAREA',
                subtitle:
                  'Test context, can be automatically provided by test infrastructure.',
              },
              {
                id: 'resolvedReason',
                title: 'Resolved Reason',
                type: 'TEXTAREA',
                subtitle: 'The reason why the bug was resolved.',
              },
              {
                id: 'storyPoints',
                title: 'Story Points',
                type: 'TEXTAREA',
                subtitle: 'The size of work estimated for fixing the bug.',
              },
              {
                id: 'priority',
                title: 'Priority',
                type: 'TEXTAREA',
                subtitle: 'Business importance.',
              },
              {
                id: 'severity',
                title: 'Severity',
                type: 'EDITABLE_ENUM',
                subtitle:
                  'An assessment of the effect of the bug on the project.',
                values: ['1 - Critical', '2 - High', '3 - Medium', '4 - Low'],
              },
              {
                id: 'activity',
                title: 'Activity',
                type: 'EDITABLE_ENUM',
                subtitle: 'Type of work involved for this work item.',
                values: [
                  'Deployment',
                  'Design',
                  'Development',
                  'Documentation ',
                  'Requirements',
                  'Testing  ',
                ],
              },
            ],
          },
          {
            value: 'EPIC',
            dependentInputs: [
              {
                id: 'description',
                title: 'Description',
                type: 'TEXTAREA',
                subtitle:
                  'Description or acceptance criteria for this epic to be considered complete.',
              },
              {
                id: 'priority',
                title: 'Priority',
                type: 'TEXTAREA',
                subtitle: 'Business importance.',
              },
              {
                id: 'risk',
                title: 'Risk',
                type: 'EDITABLE_ENUM',
                subtitle: 'Uncertainty in epic.',
                values: ['1', '2', '3'],
              },
              {
                id: 'effort',
                title: 'Effort',
                type: 'TEXTAREA',
                subtitle: 'The estimated effort to implemented the epic.',
              },
              {
                id: 'businessValue',
                title: 'Business Value',
                type: 'TEXTAREA',
                subtitle:
                  'The business value for the customer when the epic is released.',
              },
              {
                id: 'timeCriticality',
                title: 'Time Criticality',
                type: 'TEXTAREA',
                subtitle:
                  'How the business value of this epic decays over time. Higher values make the epic more time-critical.',
              },
              {
                id: 'startDate',
                title: 'Start Date',
                type: 'TEXTAREA',
                subtitle: 'The date to start the task.',
              },
              {
                id: 'targetDate',
                title: 'Target Date',
                type: 'TEXT',
                subtitle: 'The target date for completing the epic.',
              },
            ],
          },
          {
            value: 'FEATURE',
            dependentInputs: [
              {
                id: 'description',
                title: 'Description',
                type: 'TEXTAREA',
                subtitle:
                  'Description or acceptance criteria for this epic to be considered complete.',
              },
              {
                id: 'priority',
                title: 'Priority',
                type: 'TEXTAREA',
                subtitle: 'Business importance.',
              },
              {
                id: 'risk',
                title: 'Risk',
                type: 'EDITABLE_ENUM',
                subtitle: 'Uncertainty in epic.',
                values: ['1', '2', '3'],
              },
              {
                id: 'effort',
                title: 'Effort',
                type: 'TEXTAREA',
                subtitle: 'The estimated effort to implemented the epic.',
              },
              {
                id: 'businessValue',
                title: 'Business Value',
                type: 'TEXTAREA',
                subtitle:
                  'The business value for the customer when the epic is released.',
              },
              {
                id: 'timeCriticality',
                title: 'Time Criticality',
                type: 'TEXTAREA',
                subtitle:
                  'How the business value of this epic decays over time. Higher values make the epic more time-critical.',
              },
              {
                id: 'startDate',
                title: 'Start Date',
                type: 'TEXTAREA',
                subtitle: 'The date to start the task.',
              },
              {
                id: 'targetDate',
                title: 'Target Date',
                type: 'TEXT',
                subtitle: 'The target date for completing the epic.',
              },
            ],
          },
          'ISSUE',
          'TASK',
          'TEST CASE',
          'USER STORY',
        ],
      },
      {
        id: 'title',
        title: 'Title',
        type: 'TEXTAREA',
        required: true,
      },
      {
        id: 'assignee',
        title: 'Assignee',
        type: 'TEXTAREA',
        subtitle: 'Specify a user that this work item should be assigned to.',
      },
      {
        id: 'state',
        title: 'State',
        type: 'EDITABLE_ENUM',
        subtitle: 'The state of the created work item.',
        values: ['New', 'Active', 'Resolved', 'Closed'],
      },
      {
        id: 'reason',
        title: 'Reason',
        type: 'TEXTAREA',
        subtitle:
          'The reason for the created work item. This value may accept different values depending on the current State of the work item.',
      },
      {
        id: 'area',
        title: 'Area',
        type: 'TEXTAREA',
        subtitle:
          'The area for the created work item. Use Connect Portal Workflow Settings to allow users to select an area path.',
      },
      {
        id: 'iteration',
        title: 'Iteration',
        type: 'TEXTAREA',
        subtitle:
          'The iteration for the created work item. Use Connect Portal Workflow Settings to allow users to select an iteration path.',
      },
      {
        id: 'additionalFields',
        title: 'Additional Fields',
        type: 'CODE',
        placeholder: '\n{\n  "Custom.customfield": "Value for custom field"\n}',
      },
    ],
  },
  {
    title: 'Update Work Item',
    name: 'AZURE_DEVOPS_UPDATE_WORKITEM',
    output: [],
    inputs: [
      {
        id: 'project',
        title: 'Project',
        type: 'TEXTAREA',
        subtitle:
          'Specify a project to update this work item in. Use Connect Portal Workflow Settings to allow your user to select a Project.',
        placeholder: '{{settings.project}}',
        required: true,
      },
      {
        id: 'workItemId',
        title: 'Work Item ID',
        type: 'TEXTAREA',
        subtitle: 'The ID of the work item to update.',
        required: true,
      },
      {
        id: 'title',
        title: 'Title',
        type: 'TEXTAREA',
      },
      {
        id: 'assignee',
        title: 'Assignee',
        type: 'TEXTAREA',
        subtitle: 'Specify a user that this work item should be assigned to.',
      },
      {
        id: 'state',
        title: 'State',
        type: 'EDITABLE_ENUM',
        subtitle: 'The state of the created work item.',
        values: ['New', 'Active', 'Resolved', 'Closed'],
      },
      {
        id: 'reason',
        title: 'Reason',
        type: 'TEXTAREA',
        subtitle:
          'The reason for the created work item. This value may accept different values depending on the current State of the work item.',
      },
      {
        id: 'area',
        title: 'Area',
        type: 'TEXTAREA',
        subtitle:
          'The area for the created work item. Use Connect Portal Workflow Settings to allow users to select an area path.',
      },
      {
        id: 'iteration',
        title: 'Iteration',
        type: 'TEXTAREA',
        subtitle:
          'The iteration for the created work item. Use Connect Portal Workflow Settings to allow users to select an iteration path.',
      },
      {
        id: 'additionalFields',
        title: 'Additional Fields',
        type: 'CODE',
        subtitle:
          'Specify any additional fields that should be created with this work item as JSON.',
        placeholder: '\n{\n  "Custom.customfield": "Value for custom field"\n}',
      },
    ],
  },
  {
    title: 'Delete Work Item',
    name: 'AZURE_DEVOPS_DELETE_WORKITEM',
    output: [],
    inputs: [
      {
        id: 'project',
        title: 'Project',
        type: 'TEXTAREA',
        subtitle:
          'Specify a project to delete this work item from. Use Connect Portal Workflow Settings to allow your user to select a Project.',
        placeholder: '{{settings.project}}',
        required: true,
      },
      {
        id: 'workItemId',
        title: 'Work Item ID',
        type: 'TEXTAREA',
        subtitle: 'The ID of the work item to delete.',
        required: true,
      },
    ],
  },
];

/**
 * integration class for azuredevops
 */
exports.integration = {
  /**
   * name of integration
   */
  name: 'azuredevops',

  /**
   * action step methods
   */
  actions: {
    /**
     * Search Work Items
     * method for AZURE_DEVOPS_SEARCH_WORKITEMS
     */
    azureDevopsSearchWorkitems: (inputs, options) => {
      return new ActionStep({
        intent: 'AZURE_DEVOPS_SEARCH_WORKITEMS',
        actionType: 'azuredevops',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Create Work Item
     * method for AZURE_DEVOPS_CREATE_WORKITEM
     */
    azureDevopsCreateWorkitem: (inputs, options) => {
      return new ActionStep({
        intent: 'AZURE_DEVOPS_CREATE_WORKITEM',
        actionType: 'azuredevops',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Update Work Item
     * method for AZURE_DEVOPS_UPDATE_WORKITEM
     */
    azureDevopsUpdateWorkitem: (inputs, options) => {
      return new ActionStep({
        intent: 'AZURE_DEVOPS_UPDATE_WORKITEM',
        actionType: 'azuredevops',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Delete Work Item
     * method for AZURE_DEVOPS_DELETE_WORKITEM
     */
    azureDevopsDeleteWorkitem: (inputs, options) => {
      return new ActionStep({
        intent: 'AZURE_DEVOPS_DELETE_WORKITEM',
        actionType: 'azuredevops',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
  },

  /**
   * trigger step methods
   */
  triggers: {},
};
