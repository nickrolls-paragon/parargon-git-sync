/**
 * Create Customer intent type
 */
type StripeCreateCustomer = {
  /**
   * Email address
   *
   */
  emailCreateCustomer: string;

  /**
   * Name
   *
   */
  name?: string;

  /**
   * Description
   *
   */
  description?: string;

  /**
   * Metadata
   *
   * **Example**:
   * ```
   * { “field1”: 1, “field2”: 2}
   * ```
   */
  metadataCreateCustomer?: string;
};

/**
 * Update Customer intent type
 */
type StripeUpdateCustomer = {
  /**
   * Customer ID
   * The ID of the customer to update.
   *
   */
  customerId: string;

  /**
   * Email address
   *
   */
  emailUpdateCustomer?: string;

  /**
   * Name
   *
   */
  name?: string;

  /**
   * Description
   *
   */
  description?: string;

  /**
   * Metadata
   *
   * **Example**:
   * ```
   * { “field1”: 1, “field2”: 2}
   * ```
   */
  metadataUpdateCustomer?: string;
};

/**
 * Get Customer by ID intent type
 */
type StripeGetCustomerById = {
  /**
   * Customer ID
   *
   */
  idGetCustomer: string;
};

/**
 * List Customers intent type
 */
type StripeGetCustomers = {
  /**
   * Email address
   * Filters customers based on email address.
   *
   */
  emailGetCustomers?: string;

  /**
   * Created after
   * Filters customers created after the provided date (Unix timestamp).
   *
   */
  createdAfter?: string;

  /**
   * Created before
   * Filters customers created before the provided date (Unix timestamp).
   *
   */
  createdBefore?: string;

  /**
   * Limit customers
   * Limit the maximum number of customers to return. Defaults to 10 if left blank.
   *
   */
  limitGetCustomers?: string;
};

/**
 * Create Subscription intent type
 */
type StripeCreateSubscription = {
  /**
   * Customer ID
   * The Customer that the Subscription will be created for.
   *
   */
  customerIdCreateSubscription: string;

  /**
   * Plan
   * The Plan that the Subscription will be created with. Use Connect Portal Workflow Settings to allow users to select a Plan.
   *
   * **Example**:
   * ```
   * {{settings.plan}}
   * ```
   */
  plan: string;

  /**
   * Metadata
   *
   * **Example**:
   * ```
   * { “field1”: 1, “field2”: 2}
   * ```
   */
  metadataCreateSubscription?: string;
};

/**
 * List Subscriptions intent type
 */
type StripeGetSubscriptions = {
  /**
   * Customer ID
   * The ID of the Customer whose Subscriptions to list.
   *
   */
  customerIdGetSubscriptions?: string;

  /**
   * Status
   *
   * **Example**:
   * ```
   * Select a Status
   * ```
   */
  subscriptionStatus?:
    | 'incomplete'
    | 'incomplete_expired'
    | 'trialing'
    | 'active'
    | 'past_due'
    | 'canceled'
    | 'unpaid';

  /**
   * Limit
   * Limit the maximum number of subscriptions to return. Defaults to 10 if left blank.
   *
   */
  limitGetSubscriptions?: string;
};

/**
 * Create Product intent type
 */
type StripeCreateProduct = {
  /**
   * Name
   *
   */
  productName: string;

  /**
   * Description
   *
   */
  description?: string;

  /**
   * Metadata
   *
   * **Example**:
   * ```
   * { “field1”: 1, “field2”: 2}
   * ```
   */
  metadataProduct?: string;
};

/**
 * Get Product by ID intent type
 */
type StripeGetProductById = {
  /**
   * Product ID
   *
   */
  productId: string;
};

/**
 * List Products intent type
 */
type StripeGetProducts = {
  /**
   * Created after
   * Filters customers created after the provided date (Unix timestamp).
   *
   */
  createdAfter?: string;

  /**
   * Created before
   * Filters customers created before the provided date (Unix timestamp).
   *
   */
  createdBefore?: string;

  /**
   * Limit Products
   * Limit the maximum number of products to return. Defaults to 10 if left blank.
   *
   */
  limitGetProducts?: string;
};

/**
 * List Balance Transaction intent type
 */
type StripeGetBalanceTransactions = {
  /**
   * Type
   * Only returns transactions of the given type.
   *
   */
  balanceTransactionType?: 'charge' | 'refund' | 'payment' | 'payment_refund';
};

/**
 * List Plans intent type
 */
type StripeGetPlans = {
  /**
   * Active
   * Select true to list all active plans or false to list all inactive plans.
   *
   */
  isPlanActive?: boolean;
};

export type IntentToInputOutput = {
  /**
   * STRIPE_CREATE_CUSTOMER
   */
  STRIPE_CREATE_CUSTOMER: [StripeCreateCustomer, any];

  /**
   * STRIPE_UPDATE_CUSTOMER
   */
  STRIPE_UPDATE_CUSTOMER: [StripeUpdateCustomer, any];

  /**
   * STRIPE_GET_CUSTOMER_BY_ID
   */
  STRIPE_GET_CUSTOMER_BY_ID: [StripeGetCustomerById, any];

  /**
   * STRIPE_GET_CUSTOMERS
   */
  STRIPE_GET_CUSTOMERS: [StripeGetCustomers, any];

  /**
   * STRIPE_CREATE_SUBSCRIPTION
   */
  STRIPE_CREATE_SUBSCRIPTION: [StripeCreateSubscription, any];

  /**
   * STRIPE_GET_SUBSCRIPTIONS
   */
  STRIPE_GET_SUBSCRIPTIONS: [StripeGetSubscriptions, any];

  /**
   * STRIPE_CREATE_PRODUCT
   */
  STRIPE_CREATE_PRODUCT: [StripeCreateProduct, any];

  /**
   * STRIPE_GET_PRODUCT_BY_ID
   */
  STRIPE_GET_PRODUCT_BY_ID: [StripeGetProductById, any];

  /**
   * STRIPE_GET_PRODUCTS
   */
  STRIPE_GET_PRODUCTS: [StripeGetProducts, any];

  /**
   * STRIPE_GET_BALANCE_TRANSACTIONS
   */
  STRIPE_GET_BALANCE_TRANSACTIONS: [StripeGetBalanceTransactions, any];

  /**
   * STRIPE_GET_PLANS
   */
  STRIPE_GET_PLANS: [StripeGetPlans, any];
};
