import { ActionStep } from '@useparagon/core';
import {
  CustomDropdownField,
  DynamicMappingField,
} from '@useparagon/core/inputs';
import { IntegrationOptions } from '@useparagon/core/integration';

import { IntentToInputOutput } from './intents';

type IStripeIntegrationUserDefinedInput = {
  id: string;
  title: string;
  required?: boolean;
  tooltip?: string;
} & (
  | {
      type:
        | 'text'
        | 'number'
        | 'email'
        | 'url'
        | 'boolean'
        | 'password'
        | 'plan';
    }
  | {
      type: 'custom_dropdown';
      key: string;
      customDropdownOptions?: CustomDropdownField[];
    }
  | {
      type: 'custom_field_mapping';
      objectName: string;
      // these object types values will be used in preview portal
      mockObjectTypes?: DynamicMappingField[];
      // these integration fields values will be used in preview portal
      mockIntegrationFields?: DynamicMappingField[];
    }
);

/**
 * map b/w input type to result
 */
export type InputResultMap = {
  email: string;
  url: string;
  password: string;
  boolean: boolean;
  text: string;
  number: number;
  custom_dropdown: string;
  custom_field_mapping: {
    object: string;
    fields: Record<string, any>;
  };
  plan: string;
};

/**
 * pass { variableName for input => Input }
 * this should be used whenever we are creating inputs for integrations/workflows
 * as it will infer proper types
 */
export declare const createInputs: <
  T extends Record<string, IStripeIntegrationUserDefinedInput>,
>(
  inputs: T,
) => T;

/**
 * integration type for stripe
 */
export type IStripeIntegration = {
  /**
   * name of integration
   */
  name: string;

  /**
   * action step methods
   */
  actions: {
    /**
     * Create Customer
     * method for STRIPE_CREATE_CUSTOMER
     */
    createCustomer: (
      inputs: IntentToInputOutput['STRIPE_CREATE_CUSTOMER'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['STRIPE_CREATE_CUSTOMER'][0],
      IntentToInputOutput['STRIPE_CREATE_CUSTOMER'][1]
    >;

    /**
     * Update Customer
     * method for STRIPE_UPDATE_CUSTOMER
     */
    updateCustomer: (
      inputs: IntentToInputOutput['STRIPE_UPDATE_CUSTOMER'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['STRIPE_UPDATE_CUSTOMER'][0],
      IntentToInputOutput['STRIPE_UPDATE_CUSTOMER'][1]
    >;

    /**
     * Get Customer by ID
     * method for STRIPE_GET_CUSTOMER_BY_ID
     */
    getCustomerById: (
      inputs: IntentToInputOutput['STRIPE_GET_CUSTOMER_BY_ID'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['STRIPE_GET_CUSTOMER_BY_ID'][0],
      IntentToInputOutput['STRIPE_GET_CUSTOMER_BY_ID'][1]
    >;

    /**
     * List Customers
     * method for STRIPE_GET_CUSTOMERS
     */
    getCustomers: (
      inputs: IntentToInputOutput['STRIPE_GET_CUSTOMERS'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['STRIPE_GET_CUSTOMERS'][0],
      IntentToInputOutput['STRIPE_GET_CUSTOMERS'][1]
    >;

    /**
     * Create Subscription
     * method for STRIPE_CREATE_SUBSCRIPTION
     */
    createSubscription: (
      inputs: IntentToInputOutput['STRIPE_CREATE_SUBSCRIPTION'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['STRIPE_CREATE_SUBSCRIPTION'][0],
      IntentToInputOutput['STRIPE_CREATE_SUBSCRIPTION'][1]
    >;

    /**
     * List Subscriptions
     * method for STRIPE_GET_SUBSCRIPTIONS
     */
    getSubscriptions: (
      inputs: IntentToInputOutput['STRIPE_GET_SUBSCRIPTIONS'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['STRIPE_GET_SUBSCRIPTIONS'][0],
      IntentToInputOutput['STRIPE_GET_SUBSCRIPTIONS'][1]
    >;

    /**
     * Create Product
     * method for STRIPE_CREATE_PRODUCT
     */
    createProduct: (
      inputs: IntentToInputOutput['STRIPE_CREATE_PRODUCT'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['STRIPE_CREATE_PRODUCT'][0],
      IntentToInputOutput['STRIPE_CREATE_PRODUCT'][1]
    >;

    /**
     * Get Product by ID
     * method for STRIPE_GET_PRODUCT_BY_ID
     */
    getProductById: (
      inputs: IntentToInputOutput['STRIPE_GET_PRODUCT_BY_ID'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['STRIPE_GET_PRODUCT_BY_ID'][0],
      IntentToInputOutput['STRIPE_GET_PRODUCT_BY_ID'][1]
    >;

    /**
     * List Products
     * method for STRIPE_GET_PRODUCTS
     */
    getProducts: (
      inputs: IntentToInputOutput['STRIPE_GET_PRODUCTS'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['STRIPE_GET_PRODUCTS'][0],
      IntentToInputOutput['STRIPE_GET_PRODUCTS'][1]
    >;

    /**
     * List Balance Transaction
     * method for STRIPE_GET_BALANCE_TRANSACTIONS
     */
    getBalanceTransactions: (
      inputs: IntentToInputOutput['STRIPE_GET_BALANCE_TRANSACTIONS'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['STRIPE_GET_BALANCE_TRANSACTIONS'][0],
      IntentToInputOutput['STRIPE_GET_BALANCE_TRANSACTIONS'][1]
    >;

    /**
     * List Plans
     * method for STRIPE_GET_PLANS
     */
    getPlans: (
      inputs: IntentToInputOutput['STRIPE_GET_PLANS'][0],
      options: IntegrationOptions,
    ) => ActionStep<
      IntentToInputOutput['STRIPE_GET_PLANS'][0],
      IntentToInputOutput['STRIPE_GET_PLANS'][1]
    >;
  };

  /**
   * trigger step methods
   */
  triggers: {};
};
