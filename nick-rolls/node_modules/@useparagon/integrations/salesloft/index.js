const { ActionStep, ActionTriggerStep } = require('@useparagon/core');

/**
 * this should be used whenever we are creating inputs for integrations/workflows
 */
exports.createInputs = (inputs) => inputs;

/**
 * inputs for salesloft
 */
exports.inputs = [];

/**
 * triggers for salesloft
 */
exports.triggers = [
  {
    name: 'SALESLOFT_TRIGGER_NEW_PERSON_CREATED',
    title: 'New Person Created',
    output: [],
  },
  {
    name: 'SALESLOFT_TRIGGER_PERSON_UPDATED',
    title: 'Person Updated',
    output: [],
  },
  {
    name: 'SALESLOFT_TRIGGER_NEW_ACCOUNT_CREATED',
    title: 'New Account Created',
    output: [],
  },
  {
    name: 'SALESLOFT_TRIGGER_ACCOUNT_UPDATED',
    title: 'Account Updated',
    output: [],
  },
];

/**
 * intents for salesloft
 */
exports.intents = [
  {
    name: 'SALESLOFT_CREATE_AN_ACCOUNT',
    title: 'Create an Account',
    output: [],
  },
  {
    name: 'SALESLOFT_UPDATE_AN_ACCOUNT',
    title: 'Update an Account',
    output: [],
  },
  {
    name: 'SALESLOFT_GET_AN_ACCOUNT',
    title: 'Get an Account',
    output: [],
  },
  {
    name: 'SALESLOFT_DELETE_AN_ACCOUNT',
    title: 'Delete an Account',
    output: [],
  },
  {
    name: 'SALESLOFT_SEARCH_ACCOUNTS',
    title: 'Search Accounts',
    output: [],
  },
  {
    name: 'SALESLOFT_CREATE_A_CUSTOM_FIELD',
    title: 'Create a Custom Field',
    output: [],
  },
  {
    name: 'SALESLOFT_UPDATE_A_CUSTOM_FIELD',
    title: 'Update a Custom Field',
    output: [],
  },
  {
    name: 'SALESLOFT_GET_A_CUSTOM_FIELD',
    title: 'Get a Custom Field',
    output: [],
  },
  {
    name: 'SALESLOFT_DELETE_A_CUSTOM_FIELD',
    title: 'Delete a Custom Field',
    output: [],
  },
  {
    name: 'SALESLOFT_SEARCH_CUSTOM_FIELDS',
    title: 'Search Custom Fields',
    output: [],
  },
  {
    name: 'SALESLOFT_CREATE_A_CALL',
    title: 'Create a Call',
    output: [],
  },
  {
    name: 'SALESLOFT_GET_A_CALL',
    title: 'Get a Call',
    output: [],
  },
  {
    name: 'SALESLOFT_SEARCH_CALLS',
    title: 'Search Calls',
    output: [],
  },
  {
    name: 'SALESLOFT_CREATE_A_PERSON',
    title: 'Create a Person',
    output: [],
  },
  {
    name: 'SALESLOFT_UPDATE_A_PERSON',
    title: 'Update a Person',
    output: [],
  },
  {
    name: 'SALESLOFT_GET_A_PERSON',
    title: 'Get a Person',
    output: [],
  },
  {
    name: 'SALESLOFT_DELETE_A_PERSON',
    title: 'Delete a Person',
    output: [],
  },
  {
    name: 'SALESLOFT_SEARCH_PERSONS',
    title: 'Search Persons',
    output: [],
  },
  {
    name: 'SALESLOFT_CREATE_A_TASK',
    title: 'Create a Task',
    output: [],
  },
  {
    name: 'SALESLOFT_UPDATE_A_TASK',
    title: 'Update a Task',
    output: [],
  },
  {
    name: 'SALESLOFT_GET_A_TASK',
    title: 'Get a Task',
    output: [],
  },
  {
    name: 'SALESLOFT_SEARCH_TASKS',
    title: 'Search Tasks',
    output: [],
  },
];

/**
 * integration class for salesloft
 */
exports.integration = {
  /**
   * name of integration
   */
  name: 'salesloft',

  /**
   * action step methods
   */
  actions: {
    /**
     * Create an Account
     * method for SALESLOFT_CREATE_AN_ACCOUNT
     */
    createAnAccount: (inputs, options) => {
      return new ActionStep({
        intent: 'SALESLOFT_CREATE_AN_ACCOUNT',
        actionType: 'salesloft',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Update an Account
     * method for SALESLOFT_UPDATE_AN_ACCOUNT
     */
    updateAnAccount: (inputs, options) => {
      return new ActionStep({
        intent: 'SALESLOFT_UPDATE_AN_ACCOUNT',
        actionType: 'salesloft',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get an Account
     * method for SALESLOFT_GET_AN_ACCOUNT
     */
    getAnAccount: (inputs, options) => {
      return new ActionStep({
        intent: 'SALESLOFT_GET_AN_ACCOUNT',
        actionType: 'salesloft',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Delete an Account
     * method for SALESLOFT_DELETE_AN_ACCOUNT
     */
    deleteAnAccount: (inputs, options) => {
      return new ActionStep({
        intent: 'SALESLOFT_DELETE_AN_ACCOUNT',
        actionType: 'salesloft',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Search Accounts
     * method for SALESLOFT_SEARCH_ACCOUNTS
     */
    searchAccounts: (inputs, options) => {
      return new ActionStep({
        intent: 'SALESLOFT_SEARCH_ACCOUNTS',
        actionType: 'salesloft',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Create a Custom Field
     * method for SALESLOFT_CREATE_A_CUSTOM_FIELD
     */
    createACustomField: (inputs, options) => {
      return new ActionStep({
        intent: 'SALESLOFT_CREATE_A_CUSTOM_FIELD',
        actionType: 'salesloft',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Update a Custom Field
     * method for SALESLOFT_UPDATE_A_CUSTOM_FIELD
     */
    updateACustomField: (inputs, options) => {
      return new ActionStep({
        intent: 'SALESLOFT_UPDATE_A_CUSTOM_FIELD',
        actionType: 'salesloft',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get a Custom Field
     * method for SALESLOFT_GET_A_CUSTOM_FIELD
     */
    getACustomField: (inputs, options) => {
      return new ActionStep({
        intent: 'SALESLOFT_GET_A_CUSTOM_FIELD',
        actionType: 'salesloft',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Delete a Custom Field
     * method for SALESLOFT_DELETE_A_CUSTOM_FIELD
     */
    deleteACustomField: (inputs, options) => {
      return new ActionStep({
        intent: 'SALESLOFT_DELETE_A_CUSTOM_FIELD',
        actionType: 'salesloft',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Search Custom Fields
     * method for SALESLOFT_SEARCH_CUSTOM_FIELDS
     */
    searchCustomFields: (inputs, options) => {
      return new ActionStep({
        intent: 'SALESLOFT_SEARCH_CUSTOM_FIELDS',
        actionType: 'salesloft',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Create a Call
     * method for SALESLOFT_CREATE_A_CALL
     */
    createACall: (inputs, options) => {
      return new ActionStep({
        intent: 'SALESLOFT_CREATE_A_CALL',
        actionType: 'salesloft',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get a Call
     * method for SALESLOFT_GET_A_CALL
     */
    getACall: (inputs, options) => {
      return new ActionStep({
        intent: 'SALESLOFT_GET_A_CALL',
        actionType: 'salesloft',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Search Calls
     * method for SALESLOFT_SEARCH_CALLS
     */
    searchCalls: (inputs, options) => {
      return new ActionStep({
        intent: 'SALESLOFT_SEARCH_CALLS',
        actionType: 'salesloft',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Create a Person
     * method for SALESLOFT_CREATE_A_PERSON
     */
    createAPerson: (inputs, options) => {
      return new ActionStep({
        intent: 'SALESLOFT_CREATE_A_PERSON',
        actionType: 'salesloft',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Update a Person
     * method for SALESLOFT_UPDATE_A_PERSON
     */
    updateAPerson: (inputs, options) => {
      return new ActionStep({
        intent: 'SALESLOFT_UPDATE_A_PERSON',
        actionType: 'salesloft',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get a Person
     * method for SALESLOFT_GET_A_PERSON
     */
    getAPerson: (inputs, options) => {
      return new ActionStep({
        intent: 'SALESLOFT_GET_A_PERSON',
        actionType: 'salesloft',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Delete a Person
     * method for SALESLOFT_DELETE_A_PERSON
     */
    deleteAPerson: (inputs, options) => {
      return new ActionStep({
        intent: 'SALESLOFT_DELETE_A_PERSON',
        actionType: 'salesloft',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Search Persons
     * method for SALESLOFT_SEARCH_PERSONS
     */
    searchPersons: (inputs, options) => {
      return new ActionStep({
        intent: 'SALESLOFT_SEARCH_PERSONS',
        actionType: 'salesloft',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Create a Task
     * method for SALESLOFT_CREATE_A_TASK
     */
    createATask: (inputs, options) => {
      return new ActionStep({
        intent: 'SALESLOFT_CREATE_A_TASK',
        actionType: 'salesloft',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Update a Task
     * method for SALESLOFT_UPDATE_A_TASK
     */
    updateATask: (inputs, options) => {
      return new ActionStep({
        intent: 'SALESLOFT_UPDATE_A_TASK',
        actionType: 'salesloft',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get a Task
     * method for SALESLOFT_GET_A_TASK
     */
    getATask: (inputs, options) => {
      return new ActionStep({
        intent: 'SALESLOFT_GET_A_TASK',
        actionType: 'salesloft',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Search Tasks
     * method for SALESLOFT_SEARCH_TASKS
     */
    searchTasks: (inputs, options) => {
      return new ActionStep({
        intent: 'SALESLOFT_SEARCH_TASKS',
        actionType: 'salesloft',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
  },

  /**
   * trigger step methods
   */
  triggers: {
    /**
     * New Person Created
     * method for SALESLOFT_TRIGGER_NEW_PERSON_CREATED
     */
    newPersonCreated: (inputs) => {
      return new ActionTriggerStep({
        intent: 'SALESLOFT_TRIGGER_NEW_PERSON_CREATED',
        actionType: 'salesloft',
        parameters: inputs,
      });
    },
    /**
     * Person Updated
     * method for SALESLOFT_TRIGGER_PERSON_UPDATED
     */
    personUpdated: (inputs) => {
      return new ActionTriggerStep({
        intent: 'SALESLOFT_TRIGGER_PERSON_UPDATED',
        actionType: 'salesloft',
        parameters: inputs,
      });
    },
    /**
     * New Account Created
     * method for SALESLOFT_TRIGGER_NEW_ACCOUNT_CREATED
     */
    newAccountCreated: (inputs) => {
      return new ActionTriggerStep({
        intent: 'SALESLOFT_TRIGGER_NEW_ACCOUNT_CREATED',
        actionType: 'salesloft',
        parameters: inputs,
      });
    },
    /**
     * Account Updated
     * method for SALESLOFT_TRIGGER_ACCOUNT_UPDATED
     */
    accountUpdated: (inputs) => {
      return new ActionTriggerStep({
        intent: 'SALESLOFT_TRIGGER_ACCOUNT_UPDATED',
        actionType: 'salesloft',
        parameters: inputs,
      });
    },
  },
};
