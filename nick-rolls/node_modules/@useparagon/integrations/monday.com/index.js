const { ActionStep, ActionTriggerStep } = require('@useparagon/core');

/**
 * this should be used whenever we are creating inputs for integrations/workflows
 */
exports.createInputs = (inputs) => inputs;

/**
 * inputs for monday.com
 */
exports.inputs = [
  {
    id: 'users',
    title: 'User',
    type: 'DYNAMIC_DATA_SOURCE',
  },
  {
    id: 'boards',
    title: 'Board',
    type: 'DYNAMIC_DATA_SOURCE',
  },
  {
    id: 'comboFields',
    title: 'Column',
    type: 'COMBO_INPUT_DATA_SOURCE',
    mainInputSource: {
      id: 'boards',
      title: 'Board',
      type: 'DYNAMIC_DATA_SOURCE',
    },
    dependentInputSource: {
      id: 'columns',
      title: 'Columns',
      type: 'DYNAMIC_DATA_SOURCE',
    },
  },
  {
    id: 'comboBoardStatusFields',
    title: 'Board Status',
    type: 'COMBO_INPUT_DATA_SOURCE',
    mainInputSource: {
      id: 'boards',
      title: 'Board',
      type: 'DYNAMIC_DATA_SOURCE',
    },
    dependentInputSource: {
      id: 'boardStatus',
      title: 'Board Status',
      type: 'DYNAMIC_DATA_SOURCE',
    },
  },
];

/**
 * triggers for monday.com
 */
exports.triggers = [
  {
    title: 'Item Created',
    name: 'MONDAY_TRIGGER_ITEM_CREATED_WITH_NEW_API_VERSION',
    output: [],
    inputs: [
      {
        id: 'boardId',
        title: 'Board ID',
        type: 'TEXTAREA',
        required: true,
      },
    ],
  },
  {
    title: 'Item Updated',
    name: 'MONDAY_TRIGGER_ITEM_UPDATED_WITH_NEW_API_VERSION',
    output: [],
    inputs: [
      {
        id: 'boardId',
        title: 'Board ID',
        type: 'TEXTAREA',
        required: true,
      },
    ],
  },
  {
    title: 'New Comment on Item',
    name: 'MONDAY_TRIGGER_COMMENT_CREATED',
    output: [],
    inputs: [
      {
        id: 'boardId',
        title: 'Board ID',
        type: 'TEXTAREA',
        required: true,
      },
    ],
  },
];

/**
 * intents for monday.com
 */
exports.intents = [
  {
    title: 'Create Item',
    name: 'MONDAY_CREATE_ITEM',
    output: [],
    inputs: [
      {
        id: 'name',
        title: 'Name',
        type: 'TEXTAREA',
        required: true,
      },
      {
        id: 'boardId',
        title: 'Board ID',
        type: 'TEXTAREA',
        required: true,
      },
      {
        id: 'groupId',
        title: 'Group ID',
        type: 'TEXTAREA',
      },
      {
        id: 'externalId',
        title: 'External ID',
        type: 'TEXTAREA',
        subtitle:
          'An ID from your application to associate this item with. You can use this ID to sync updates to this task later.',
      },
      {
        id: 'columnValues',
        title: 'Column Values',
        type: 'CODE',
        subtitle:
          'The column values of the new item. Use Connect Portal Workflow Settings to allow users to select which item columns to update.',
        placeholder:
          '{\n  "status": "Done",\n  "person": {\n    "personsAndTeams": [\n      {\n        "id": 12345678,\n        "kind": "person"\n      }\n    ]\n  }\n}',
      },
    ],
  },
  {
    title: 'Update Item',
    name: 'MONDAY_UPDATE_ITEM',
    output: [],
    inputs: [
      {
        id: 'itemId',
        title: 'Item ID',
        type: 'TEXTAREA',
        subtitle: 'The ID of the item to update.',
        required: true,
      },
      {
        id: 'name',
        title: 'Name',
        type: 'TEXTAREA',
      },
      {
        id: 'boardId',
        title: 'Board ID',
        type: 'TEXTAREA',
        required: true,
      },
      {
        id: 'externalId',
        title: 'External ID',
        type: 'TEXTAREA',
        subtitle:
          'An ID from your application to associate this item with. You can use this ID to sync updates to this task later.',
      },
      {
        id: 'columnValues',
        title: 'Column Values',
        type: 'CODE',
        subtitle:
          'The column values of the update item. Use Connect Portal Workflow Settings to allow users to select which item columns to update.',
        placeholder:
          '{\n  "status": "Done",\n  "person": {\n    "personsAndTeams": [\n      {\n        "id": 12345678,\n        "kind": "person"\n      }\n    ]\n  }\n}',
      },
    ],
  },
  {
    title: 'Get Item By ID',
    name: 'MONDAY_GET_ITEM_BY_ID_WITH_NEW_API_VERSION',
    output: [],
    inputs: [
      {
        id: 'itemId',
        title: 'Item ID',
        type: 'TEXTAREA',
        subtitle: 'The ID of the item to get.',
        required: true,
      },
    ],
  },
  {
    title: 'Get Item By External ID',
    name: 'MONDAY_GET_ITEM_BY_EXTERNAL_ID_WITH_NEW_API_VERSION',
    output: [],
    inputs: [
      {
        id: 'boardId',
        title: 'Board ID',
        type: 'TEXTAREA',
        required: true,
      },
      {
        id: 'externalId',
        title: 'External ID',
        type: 'TEXTAREA',
        subtitle:
          'The ID that this task is associated or synced with, from your application.',
        required: true,
      },
    ],
  },
  {
    title: 'Search Items',
    name: 'MONDAY_SEARCH_ITEMS_WITH_NEW_API_VERSION',
    output: [],
    inputs: [
      {
        id: 'boardId',
        title: 'Board ID',
        type: 'TEXTAREA',
      },
    ],
  },
  {
    title: 'Delete Item',
    name: 'MONDAY_DELETE_ITEM',
    output: [],
    inputs: [
      {
        id: 'itemId',
        title: 'Item ID',
        type: 'TEXTAREA',
        subtitle: 'The ID of the item to delete.',
        required: true,
      },
    ],
  },
  {
    title: 'Archive Item',
    name: 'MONDAY_ARCHIVE_ITEM',
    output: [],
    inputs: [
      {
        id: 'itemId',
        title: 'Item ID',
        type: 'TEXTAREA',
        subtitle: 'The ID of the item to archive.',
        required: true,
      },
    ],
  },
  {
    title: 'Create Subitem',
    name: 'MONDAY_CREATE_SUBITEM',
    output: [],
    inputs: [
      {
        id: 'name',
        title: 'Name',
        type: 'TEXTAREA',
        required: true,
      },
      {
        id: 'parentItemId',
        title: 'Parent Item ID',
        type: 'TEXTAREA',
        required: true,
      },
      {
        id: 'columnValues',
        title: 'Column Values',
        type: 'CODE',
        subtitle:
          'The column values of the new item. Use Connect Portal Workflow Settings to allow users to select which item columns to update.',
        placeholder:
          '{\n  "status": "Done",\n  "person": {\n    "personsAndTeams": [\n      {\n        "id": 12345678,\n        "kind": "person"\n      }\n    ]\n  }\n}',
      },
    ],
  },
  {
    title: 'Search Users',
    name: 'MONDAY_SEARCH_USERS',
    output: [],
    inputs: [
      {
        id: 'userId',
        title: 'User ID',
        type: 'TEXTAREA',
      },
    ],
  },
];

/**
 * integration class for monday.com
 */
exports.integration = {
  /**
   * name of integration
   */
  name: 'monday.com',

  /**
   * action step methods
   */
  actions: {
    /**
     * Create Item
     * method for MONDAY_CREATE_ITEM
     */
    mondayCreateItem: (inputs, options) => {
      return new ActionStep({
        intent: 'MONDAY_CREATE_ITEM',
        actionType: 'monday.com',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Update Item
     * method for MONDAY_UPDATE_ITEM
     */
    mondayUpdateItem: (inputs, options) => {
      return new ActionStep({
        intent: 'MONDAY_UPDATE_ITEM',
        actionType: 'monday.com',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Item By ID
     * method for MONDAY_GET_ITEM_BY_ID_WITH_NEW_API_VERSION
     */
    mondayGetItemByIdWithNewApiVersion: (inputs, options) => {
      return new ActionStep({
        intent: 'MONDAY_GET_ITEM_BY_ID_WITH_NEW_API_VERSION',
        actionType: 'monday.com',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Get Item By External ID
     * method for MONDAY_GET_ITEM_BY_EXTERNAL_ID_WITH_NEW_API_VERSION
     */
    mondayGetItemByExternalIdWithNewApiVersion: (inputs, options) => {
      return new ActionStep({
        intent: 'MONDAY_GET_ITEM_BY_EXTERNAL_ID_WITH_NEW_API_VERSION',
        actionType: 'monday.com',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Search Items
     * method for MONDAY_SEARCH_ITEMS_WITH_NEW_API_VERSION
     */
    mondaySearchItemsWithNewApiVersion: (inputs, options) => {
      return new ActionStep({
        intent: 'MONDAY_SEARCH_ITEMS_WITH_NEW_API_VERSION',
        actionType: 'monday.com',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Delete Item
     * method for MONDAY_DELETE_ITEM
     */
    mondayDeleteItem: (inputs, options) => {
      return new ActionStep({
        intent: 'MONDAY_DELETE_ITEM',
        actionType: 'monday.com',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Archive Item
     * method for MONDAY_ARCHIVE_ITEM
     */
    mondayArchiveItem: (inputs, options) => {
      return new ActionStep({
        intent: 'MONDAY_ARCHIVE_ITEM',
        actionType: 'monday.com',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Create Subitem
     * method for MONDAY_CREATE_SUBITEM
     */
    mondayCreateSubitem: (inputs, options) => {
      return new ActionStep({
        intent: 'MONDAY_CREATE_SUBITEM',
        actionType: 'monday.com',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
    /**
     * Search Users
     * method for MONDAY_SEARCH_USERS
     */
    mondaySearchUsers: (inputs, options) => {
      return new ActionStep({
        intent: 'MONDAY_SEARCH_USERS',
        actionType: 'monday.com',
        parameters: inputs,
        description: options.description,
        autoRetry: options.autoRetry,
        continueWorkflowOnError: options.continueWorkflowOnError,
      });
    },
  },

  /**
   * trigger step methods
   */
  triggers: {
    /**
     * Item Created
     * method for MONDAY_TRIGGER_ITEM_CREATED_WITH_NEW_API_VERSION
     */
    mondayTriggerItemCreatedWithNewApiVersion: (inputs) => {
      return new ActionTriggerStep({
        intent: 'MONDAY_TRIGGER_ITEM_CREATED_WITH_NEW_API_VERSION',
        actionType: 'monday.com',
        parameters: inputs,
      });
    },
    /**
     * Item Updated
     * method for MONDAY_TRIGGER_ITEM_UPDATED_WITH_NEW_API_VERSION
     */
    mondayTriggerItemUpdatedWithNewApiVersion: (inputs) => {
      return new ActionTriggerStep({
        intent: 'MONDAY_TRIGGER_ITEM_UPDATED_WITH_NEW_API_VERSION',
        actionType: 'monday.com',
        parameters: inputs,
      });
    },
    /**
     * New Comment on Item
     * method for MONDAY_TRIGGER_COMMENT_CREATED
     */
    mondayTriggerCommentCreated: (inputs) => {
      return new ActionTriggerStep({
        intent: 'MONDAY_TRIGGER_COMMENT_CREATED',
        actionType: 'monday.com',
        parameters: inputs,
      });
    },
  },
};
