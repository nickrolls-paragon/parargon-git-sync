import { ConditionalInput } from '@useparagon/core/steps/library/conditional';

/**
 * Get rows from spreadsheet intent type
 */
type GoogleSheetsGetRow = {
  /**
   * Spreadsheet
   * Use Connect Portal Workflow Settings to allow users to select a spreadsheet. Defaults to using the first worksheet in the selected spreadsheet.
   *
   * **Example**:
   * ```
   * {{settings.spreadsheet}}
   * ```
   */
  spreadsheetId: string;

  /**
   * Limit rows
   * Limit the maximum number of rows to return.
   *
   */
  limit?: string;
};

/**
 * Create row in spreadsheet intent type
 */
type GoogleSheetsCreateRow = {
  /**
   * Spreadsheet
   * Use Connect Portal Workflow Settings to allow users to select a spreadsheet. Defaults to using the first worksheet in the selected spreadsheet.
   *
   * **Example**:
   * ```
   * {{settings.spreadsheet}}
   * ```
   */
  spreadsheetId: string;

  /**
   * Worksheet
   * Your worksheet must have column headers.
   *
   * **Example**:
   * ```
   * {{settings.worksheet}}
   * ```
   */
  worksheet: string;

  /**
   * Fields
   * Include fields to create this row with, as an object with keys of Column Names. Use Connect Portal Workflow Settings to allow users to select a Column Mapping
   *
   * **Example**:
   * ```
   * {
   *    columnName1: "columnValue1",
   *    columnName2: "columnValue2",
   *    columnName3: "columnValue3",
   *    columnName4: "columnValue4",
   *  }
   * ```
   */
  additionalFields: string;
};

/**
 * Update row in spreadsheet intent type
 */
type GoogleSheetsUpdateRow = {
  /**
   * Spreadsheet
   * Use Connect Portal Workflow Settings to allow users to select a spreadsheet. Defaults to using the first worksheet in the selected spreadsheet.
   *
   * **Example**:
   * ```
   * {{settings.spreadsheet}}
   * ```
   */
  spreadsheetId: string;

  /**
   * Worksheet
   * Your worksheet must have column headers.
   *
   * **Example**:
   * ```
   * {{settings.worksheet}}
   * ```
   */
  worksheet: string;

  /**
   * Filter records
   * Specify which records should get updated using the filters below. Use Connect Portal Workflow Settings to allow users to select a column.
   *
   * **Example**:
   * ```
   * {{settings.column}}
   * ```
   */
  filterFormula?: ConditionalInput;

  /**
   * Fields
   * Include fields to update, as an object with keys of Column Names. Use Connect Portal Workflow Settings to allow users to select a Column Mapping.
   *
   * **Example**:
   * ```
   * {
   *    columnName1: "columnValue1",
   *    columnName2: "columnValue2",
   *    columnName3: "columnValue3",
   *    columnName4: "columnValue4",
   *  }
   * ```
   */
  additionalFields: string;
};

export type IntentToInputOutput = {
  /**
   * GOOGLE_SHEETS_GET_ROW
   */
  GOOGLE_SHEETS_GET_ROW: [GoogleSheetsGetRow, any];

  /**
   * GOOGLE_SHEETS_CREATE_ROW
   */
  GOOGLE_SHEETS_CREATE_ROW: [GoogleSheetsCreateRow, any];

  /**
   * GOOGLE_SHEETS_UPDATE_ROW
   */
  GOOGLE_SHEETS_UPDATE_ROW: [GoogleSheetsUpdateRow, any];
};
